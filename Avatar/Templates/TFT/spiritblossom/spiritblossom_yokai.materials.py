#PROP_text
type: string = "PROP"
version: u32 = 3
linked: list[string] = {}
entries: map[hash,embed] = {
    "Maps/KitPieces/TFT/Spirit_Blossom/Models/Tree_Canopy_Kami_A2/Materials/KamiTree_New_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Models/Tree_Canopy_Kami_A2/Materials/KamiTree_New_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Diffuse_Texture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/TreeCanopy_Kami_A.TFT_ArenaSkin_SpiritBlossom.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Movement_Direction"
                value: vec4 = { 1, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Movement_Interpolator"
                value: vec4 = { 0.314999998, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Frequency"
                value: vec4 = { 3.45000005, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Lower_Limit"
                value: vec4 = { -0.152500004, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Upper_Limit"
                value: vec4 = { 0.879999995, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Magnitude"
                value: vec4 = { 8.875, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Color_Bottom"
                value: vec4 = { 0.87843138, 0.819607854, 0.847058833, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Gradient_Softness"
                value: vec4 = { 265.734985, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Gradient_Offset"
                value: vec4 = { 0.977500021, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Alpha_Test_Value"
                value: vec4 = { 0.860000014, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Movement_Offset_Multiplier"
                value: vec4 = { 0.692499995, 0, 0, 0 }
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "USE_OBJECT_GRADIENT"
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/StaticMesh/ENV_TreeCanopy"
                        blendEnable: bool = true
                        cullEnable: bool = false
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        0xe251b20a: bool = false
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Models/Tree_Canopy_Kami_A2/Materials/YokaiTree_New_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Models/Tree_Canopy_Kami_A2/Materials/YokaiTree_New_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Diffuse_Texture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/TreeCanopy_Yokai_A.TFT_ArenaSkin_SpiritBlossom.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Movement_Direction"
                value: vec4 = { 1, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Movement_Interpolator"
                value: vec4 = { 0.757499993, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Frequency"
                value: vec4 = { 5.05000019, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Lower_Limit"
                value: vec4 = { -0.982500017, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Upper_Limit"
                value: vec4 = { 1, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Magnitude"
                value: vec4 = { 5.7249999, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Color_Bottom"
                value: vec4 = { 0.329411775, 0.152941182, 0.592156887, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Gradient_Softness"
                value: vec4 = { 365.63501, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Gradient_Offset"
                value: vec4 = { 0.362500012, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Alpha_Test_Value"
                value: vec4 = { 0.899999976, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Movement_Offset_Multiplier"
                value: vec4 = { 0.387499988, 0, 0, 0 }
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "USE_OBJECT_GRADIENT"
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/StaticMesh/ENV_TreeCanopy"
                        blendEnable: bool = true
                        cullEnable: bool = false
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        0xe251b20a: bool = false
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Models/Tree_Canopy_Kami_A2/Materials/YokaiTree_New_NoShadow_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Models/Tree_Canopy_Kami_A2/Materials/YokaiTree_New_NoShadow_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Diffuse_Texture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/TreeCanopy_Yokai_A.TFT_ArenaSkin_SpiritBlossom.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Movement_Direction"
                value: vec4 = { 1, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Movement_Interpolator"
                value: vec4 = { 0.757499993, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Frequency"
                value: vec4 = { 5.05000019, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Lower_Limit"
                value: vec4 = { -0.982500017, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Upper_Limit"
                value: vec4 = { 1, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Magnitude"
                value: vec4 = { 5.7249999, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Color_Bottom"
                value: vec4 = { 0.329411775, 0.152941182, 0.592156887, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Gradient_Softness"
                value: vec4 = { 365.63501, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Gradient_Offset"
                value: vec4 = { 0.362500012, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Alpha_Test_Value"
                value: vec4 = { 0.899999976, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Movement_Offset_Multiplier"
                value: vec4 = { 0.387499988, 0, 0, 0 }
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "USE_OBJECT_GRADIENT"
            }
        }
        shaderMacros: map[string,string] = {
            "DISABLE_SHADOWS" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/StaticMesh/ENV_TreeCanopy"
                        blendEnable: bool = true
                        cullEnable: bool = false
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        0xe251b20a: bool = false
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Models/Grass_E/Materials/Grass_E_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Models/Grass_E/Materials/Grass_E_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/Grass_B.TFT_ArenaSkin_SpiritBlossom.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.5, 0, 0, 0 }
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        cullEnable: bool = false
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Models/Tree_BigCanopy_Reality_A/Materials/RealityTree_New_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Models/Tree_BigCanopy_Reality_A/Materials/RealityTree_New_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Diffuse_Texture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/TreeCanopy_Reality_A.TFT_ArenaSkin_SpiritBlossom.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Movement_Direction"
                value: vec4 = { 1, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Movement_Interpolator"
                value: vec4 = { 0.519999981, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Frequency"
                value: vec4 = { 3.17499995, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Lower_Limit"
                value: vec4 = { -0.327499986, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Upper_Limit"
                value: vec4 = { 1, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Magnitude"
                value: vec4 = { 6.875, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Color_Bottom"
                value: vec4 = { 0.309803933, 0.152941182, 0.352941185, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Gradient_Softness"
                value: vec4 = { 243.257507, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Gradient_Offset"
                value: vec4 = { 0.942499995, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Alpha_Test_Value"
                value: vec4 = { 1, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Movement_Offset_Multiplier"
                value: vec4 = { 0.879999995, 0, 0, 0 }
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "USE_OBJECT_GRADIENT"
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/StaticMesh/ENV_TreeCanopy"
                        blendEnable: bool = true
                        cullEnable: bool = false
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        0xe251b20a: bool = false
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Models/Tree_Canopy_Kami_A1/Materials/KamiTree_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Models/Tree_Canopy_Kami_A1/Materials/KamiTree_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/TreeCanopy_Kami_A.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.899999976, 0, 0, 0 }
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest_DoubleSided"
                        blendEnable: bool = true
                        cullEnable: bool = false
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Models/Tree_Trunk_Kami_A/Materials/YokaiTreeTrunk_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Models/Tree_Trunk_Kami_A/Materials/YokaiTreeTrunk_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/TreeTrunk_Yokai_Blue.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Tree_Trunk_Kami_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Tree_Trunk_Kami_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/TreeTrunk_Reality.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Path_Decal_Yokai_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Path_Decal_Yokai_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/Path_Decal_Yokai.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                        blendEnable: bool = true
                        srcColorBlendFactor: u32 = 6
                        srcAlphaBlendFactor: u32 = 6
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Cliff_Yokai_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Cliff_Yokai_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/Cliff_Yokai_B.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                        blendEnable: bool = true
                        srcColorBlendFactor: u32 = 6
                        srcAlphaBlendFactor: u32 = 6
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Goldmine_Flower_Yokai_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Goldmine_Flower_Yokai_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/Goldmine_Flower_Yokai.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Plants_Reality_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Plants_Reality_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/Plants_Reality_A.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Temple_Yokai_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Temple_Yokai_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/Temple_Yokai.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/TreeShrine_A01" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/TreeShrine_A01"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/TreeShrine_Yokai_A.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Perch_Yokai_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Perch_Yokai_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/Perch_Yokai.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/TombShrine_Yokai_A01" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/TombShrine_Yokai_A01"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/TombShrine_Yokai_A.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Board_Yokai_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Board_Yokai_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/Board_Yokai.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Tree_Trunk_Reality_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Tree_Trunk_Reality_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/TreeTrunk_Reality.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Backdrop_Yokai_A01" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Backdrop_Yokai_A01"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/Backdrop_C.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        shaderMacros: map[string,string] = {
            "DISABLE_SHADOWS" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Tree_Hollow_Yokai_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Tree_Hollow_Yokai_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/Tree_Hollow_Yokai.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/ShrineRocks_Yokai_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/ShrineRocks_Yokai_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/ShrineRocks_Yokai.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Temple_Yokai_Flower_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Temple_Yokai_Flower_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/Temple_Yokai_Flower.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/ShrineRocks_Yokai_NoShadow_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/ShrineRocks_Yokai_NoShadow_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/ShrineRocks_Yokai.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        shaderMacros: map[string,string] = {
            "DISABLE_SHADOWS" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Crag_A" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Crag_A"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/Crag_Kami_A.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Cliff_Yokai_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Cliff_Yokai_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/Cliff_Yokai.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Goldmine_Patchwork_Yokai_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/TFT/Spirit_Blossom/Materials/Default/Goldmine_Patchwork_Yokai_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/TFT/Spirit_Blossom/Textures/Goldmine_Patchwork_Yokai.TFT_ArenaSkin_SpiritBlossom.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                        blendEnable: bool = true
                        srcColorBlendFactor: u32 = 6
                        srcAlphaBlendFactor: u32 = 6
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_CaveMist" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLinger: option[f32] = {
                    5
                }
                emitterName: string = "Vacuum_Floor"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_VacuumFloor.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.376470596, 0.470588237, 1, 0.741176486 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.150000006
                            0.850000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 5
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                particleIsLocalOrientation: flag = true
                isGroundLayer: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 5, 10 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_WispyMult.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.100000001 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0.400000006, 0 }
                }
                uvScale: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 0.649999976 }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 180
                }
            }
        }
        particleName: string = "TFT_SpiritBlossom_Yokai_Idle_CaveMist"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_CaveMist"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_WindBlow" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0.600000024
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            30
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterName: string = "Trail1"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_CloudWisp.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.60999465, 0.749996185, 1, 0.220004573 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.60999465, 0.749996185, 1, 0 }
                            { 0.60999465, 0.749996185, 1, 0.220004573 }
                            { 0.60999465, 0.749996185, 1, 0.220004573 }
                            { 0.60999465, 0.749996185, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Maps/Particles/TFT/Base_ChainWisp.TFT_Set3.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.0399999991 }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 90
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                period: option[f32] = {
                    1
                }
                timeActiveDuringPeriod: option[f32] = {
                    1
                }
                emitterName: string = "Trail2"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 800, -200, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Kami_CircularCloudPanner.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156875, 0.843137264, 1, 1 }
                }
                pass: i16 = 500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                disableBackfaceCull: bool = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 12, 20, 14 }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Throw_Darkstar_Comet_Trail_01.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0199999996, 0 }
                }
                uvScale: embed = ValueVector2 {
                    constantValue: vec2 = { 4, 1 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 3.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    3.5
                }
                emitterName: string = "Trail3"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp_Basic1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.60999465, 0.749996185, 1, 0.200000003 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.60999465, 0.749996185, 1, 0 }
                            { 0.60999465, 0.749996185, 1, 0.200000003 }
                            { 0.60999465, 0.749996185, 1, 0.200000003 }
                            { 0.60999465, 0.749996185, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                hasPostRotateOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 15, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0.5
                                    2
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 15, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Base_ChainWisp.TFT_Set3.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.300000012 }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 90
                }
                textureMult: string = "ASSETS/Shared/Particles/Varus_Skin07_Glow.TFT_Set4.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.300000012 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.5 }
                }
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Idle_WindBlow"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_WindBlow"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Center" = VfxSystemDefinitionData {
        simpleEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                particleLinger: option[f32] = {
                    10
                }
                emitterName: string = "empty"
                particleColorTexture: string = "ASSETS/Shared/Particles/Black.DDS"
                meshRenderFlags: u8 = 0
                texture: string = "ASSETS/Shared/Particles/Black.DDS"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Center"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Center"
        soundPersistentDefault: string = "Play_sfx_tft_env_spiritblossom_yokai_amb_center"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_DoorMist" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLinger: option[f32] = {
                    5
                }
                emitterName: string = "Vacuum_Floor"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_VacuumFloor.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.376470596, 0.470588237, 1, 0.741176486 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.150000006
                            0.850000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 5
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                particleIsLocalOrientation: flag = true
                isGroundLayer: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 7, 5, 12.5 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_WispyMult.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.100000001 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0.400000006, 0 }
                }
                uvScale: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 0.349999994 }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 180
                }
            }
        }
        particleName: string = "TFT_SpiritBlossom_Yokai_Idle_DoorMist"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_DoorMist"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win3_WindBlow" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0.600000024
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            30
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterName: string = "Trail1"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_CloudWisp.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.60999465, 0.749996185, 1, 0.220004573 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.60999465, 0.749996185, 1, 0 }
                            { 0.60999465, 0.749996185, 1, 0.220004573 }
                            { 0.60999465, 0.749996185, 1, 0.220004573 }
                            { 0.60999465, 0.749996185, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Maps/Particles/TFT/Base_ChainWisp.TFT_Set3.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.0399999991 }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 90
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                period: option[f32] = {
                    1
                }
                timeActiveDuringPeriod: option[f32] = {
                    1
                }
                emitterName: string = "Trail2"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 800, -200, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Kami_CircularCloudPanner.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156875, 0.843137264, 1, 1 }
                }
                pass: i16 = 500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                disableBackfaceCull: bool = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 12, 20, 14 }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Throw_Darkstar_Comet_Trail_01.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0199999996, 0 }
                }
                uvScale: embed = ValueVector2 {
                    constantValue: vec2 = { 4, 1 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.150000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            6
                        }
                    }
                }
                particleLinger: option[f32] = {
                    6
                }
                emitterName: string = "Trail3"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp_Basic1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.639215708, 0.325490206, 1, 0.819607854 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.639215708, 0.325490206, 1, 0 }
                            { 0.639215708, 0.325490206, 1, 0.819607854 }
                            { 0.639215708, 0.325490206, 1, 0.819607854 }
                            { 0.639215708, 0.325490206, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                hasPostRotateOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 5, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/WispTrail_Add.ARAM_VFX_Update.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.119999997, 0 }
                }
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Win3_WindBlow"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win3_WindBlow"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win3_JetStream" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0.600000024
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            30
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterName: string = "Trail1"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_CloudWisp.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.60999465, 0.749996185, 1, 0.220004573 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.60999465, 0.749996185, 1, 0 }
                            { 0.60999465, 0.749996185, 1, 0.220004573 }
                            { 0.60999465, 0.749996185, 1, 0.220004573 }
                            { 0.60999465, 0.749996185, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Maps/Particles/TFT/Base_ChainWisp.TFT_Set3.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.0399999991 }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 90
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                period: option[f32] = {
                    1
                }
                timeActiveDuringPeriod: option[f32] = {
                    1
                }
                emitterName: string = "Trail2"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 800, -200, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Kami_CircularCloudPanner.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156875, 0.843137264, 1, 1 }
                }
                pass: i16 = 500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                disableBackfaceCull: bool = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 12, 20, 14 }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Throw_Darkstar_Comet_Trail_01.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0199999996, 0 }
                }
                uvScale: embed = ValueVector2 {
                    constantValue: vec2 = { 4, 1 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            6
                        }
                    }
                }
                particleLinger: option[f32] = {
                    6
                }
                emitterName: string = "Trail3"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.60999465, 0.749996185, 1, 0.140001521 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.60999465, 0.749996185, 1, 0 }
                            { 0.60999465, 0.749996185, 1, 0.140001521 }
                            { 0.60999465, 0.749996185, 1, 0.140001521 }
                            { 0.60999465, 0.749996185, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.5
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.25, 1, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Base_ChainWisp.TFT_Set3.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.300000012 }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 90
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            6
                        }
                    }
                }
                particleLinger: option[f32] = {
                    6
                }
                emitterName: string = "Trail4"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.160006106, 0.259998471, 0.510002315, 0.289997697 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.160006106, 0.259998471, 0.510002315, 0 }
                            { 0.160006106, 0.259998471, 0.510002315, 0.289997697 }
                            { 0.160006106, 0.259998471, 0.510002315, 0.289997697 }
                            { 0.160006106, 0.259998471, 0.510002315, 0 }
                        }
                    }
                }
                pass: i16 = -451
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.5
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.25, 1, 1 }
                }
                texture: string = "ASSETS/Shared/Particles/Items/Item_PhantomDancer_WispTrail.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, 0 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            4.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterName: string = "Trail5"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.200000003, 0.620004594, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.200000003, 0.620004594, 1, 0 }
                            { 0.200000003, 0.620004594, 1, 1 }
                            { 0.200000003, 0.620004594, 1, 1 }
                            { 0.200000003, 0.620004594, 1, 0 }
                        }
                    }
                }
                pass: i16 = -450
                alphaRef: u8 = 0
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.25, 1, 1 }
                }
                texture: string = "ASSETS/Shared/Particles/TFT_Kami_GlowSprites.TFT_ArenaSkin_SpiritBlossom.dds"
                particleUVScrollRate: embed = IntegratedValueVector2 {
                    constantValue: vec2 = { 0, 0.300000012 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 0.300000012 }
                        }
                    }
                }
                uvScale: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 2 }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 90
                }
                textureMult: string = "ASSETS/Shared/Particles/TFT_Unitcombination_Backdrop_Mult.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0500000007, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            6
                        }
                    }
                }
                particleLinger: option[f32] = {
                    6
                }
                emitterName: string = "Trail6"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.741176486, 0.13333334, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.741176486, 0.13333334, 1, 0 }
                            { 0.741176486, 0.13333334, 1, 1 }
                            { 0.741176486, 0.13333334, 1, 1 }
                            { 0.741176486, 0.13333334, 1, 0 }
                        }
                    }
                }
                pass: i16 = -450
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.5
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.5
                    erosionFeatherOut: f32 = 0.5
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.25, 1, 1 }
                }
                texture: string = "ASSETS/Shared/Particles/WispTrail_Add.ARAM_VFX_Update.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/TFT_Unitcombination_Backdrop_Mult.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0500000007, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                uvScaleMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.25, 0.25 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            4.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterName: string = "Trail7"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.200000003, 0.620004594, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.200000003, 0.620004594, 1, 0 }
                            { 0.200000003, 0.620004594, 1, 1 }
                            { 0.200000003, 0.620004594, 1, 1 }
                            { 0.200000003, 0.620004594, 1, 0 }
                        }
                    }
                }
                pass: i16 = -450
                alphaRef: u8 = 0
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.25, 1, 1 }
                }
                texture: string = "ASSETS/Shared/Particles/TFT_Kami_GlowSprites.TFT_ArenaSkin_SpiritBlossom.dds"
                particleUVScrollRate: embed = IntegratedValueVector2 {
                    constantValue: vec2 = { 0, 0.170000002 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 0.170000002 }
                        }
                    }
                }
                uvScale: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 5 }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 90
                }
                textureMult: string = "ASSETS/Shared/Particles/TFT_Unitcombination_Backdrop_Mult.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0500000007, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            6
                        }
                    }
                }
                particleLinger: option[f32] = {
                    6
                }
                emitterName: string = "Trail8"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.741176486, 0.13333334, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.741176486, 0.13333334, 1, 0 }
                            { 0.741176486, 0.13333334, 1, 1 }
                            { 0.741176486, 0.13333334, 1, 1 }
                            { 0.741176486, 0.13333334, 1, 0 }
                        }
                    }
                }
                pass: i16 = -450
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.5
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.5
                    erosionFeatherOut: f32 = 0.5
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.25, 1, 1 }
                }
                texture: string = "ASSETS/Shared/Particles/WispTrail_Add.ARAM_VFX_Update.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/TFT_Unitcombination_Backdrop_Mult.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0500000007, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                uvScaleMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.25, 0.25 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    11
                }
                emitterName: string = "Basic"
                disabled: bool = true
                shape: embed = VfxShape {
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 1.00000012, 0, 0 }
                        { 0, 1.00000012, 0 }
                    }
                }
                emissionMeshScale: f32 = 1.25
                emissionMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp1.TFT_ArenaSkin_SpiritBlossom.scb"
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.360006094 }
                }
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 10, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Leona_Skin02_Spark_Blue.TFT_Set4.dds"
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Win3_JetStream"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win3_JetStream"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_DoorGlow" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "glowLight"
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 650, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.184313729, 0.498039216, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.184313729, 0.498039216, 1, 0 }
                            { 0.184313729, 0.498039216, 1, 1 }
                            { 0.184313729, 0.498039216, 1, 0 }
                        }
                    }
                }
                pass: i16 = 500
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 90 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 750, 500, 50 }
                }
                texture: string = "ASSETS/Shared/Particles/Base_Light.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "glowLight1"
                importance: u8 = 2
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { -200, 0, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 200, 650, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.349996179 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.349996179 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 501
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 90 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 750, 200, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.174168304
                            0.342465758
                            0.412915856
                            0.5
                            0.600782752
                            0.667319
                            0.841487288
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0.349999994, 1 }
                            { 1, 0.476388872, 1 }
                            { 1, 0.860069454, 1 }
                            { 1, 0.954861104, 1 }
                            { 1, 1, 1 }
                            { 1, 0.954861104, 1 }
                            { 1, 0.842013896, 1 }
                            { 1, 0.458333313, 1 }
                            { 1, 0.349999994, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Base_Light.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.370000005
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.0359999985
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "glowLight2"
                importance: u8 = 2
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 200, 0, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { -200, 650, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.340001523 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.340001523 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 501
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 90 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 750, 200, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.174168304
                            0.342465758
                            0.412915856
                            0.5
                            0.600782752
                            0.667319
                            0.841487288
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0.349999994, 1 }
                            { 1, 0.476388872, 1 }
                            { 1, 0.860069454, 1 }
                            { 1, 0.954861104, 1 }
                            { 1, 1, 1 }
                            { 1, 0.954861104, 1 }
                            { 1, 0.842013896, 1 }
                            { 1, 0.458333313, 1 }
                            { 1, 0.349999994, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Base_Light.dds"
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Idle_DoorGlow"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_DoorGlow"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_WindSwirl" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 3.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                emitterName: string = "Trail4"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp_Swirl1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.396078438, 0.290196091, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.396078438, 0.290196091, 1, 0 }
                            { 0.396078438, 0.290196091, 1, 1 }
                            { 0.396078438, 0.290196091, 1, 1 }
                            { 0.396078438, 0.290196091, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                uvScrollAlphaMult: flag = false
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                hasPostRotateOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/WispTrail_Add.ARAM_VFX_Update.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.600000024, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/Darius_Skin14_Glow.TFT_Set3.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.400000006, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.5, 0 }
                }
                texAddressModeMult: u8 = 3
                uvScaleMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1.39999998, 0.00999999978 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 3.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                emitterName: string = "Trail5"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp_Swirl1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.0431372561, 0.121568628, 0.301960796, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.0431372561, 0.121568628, 0.301960796, 0 }
                            { 0.0431372561, 0.121568628, 0.301960796, 1 }
                            { 0.0431372561, 0.121568628, 0.301960796, 1 }
                            { 0.0431372561, 0.121568628, 0.301960796, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.400000006
                                0.600000024
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.349999994
                    erosionFeatherOut: f32 = 0.349999994
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                uvScrollAlphaMult: flag = false
                isUniformScale: flag = true
                texture: string = "ASSETS/Maps/Particles/TFT/Base_ChainWisp.TFT_Set3.dds"
                particleUVScrollRate: embed = IntegratedValueVector2 {
                    constantValue: vec2 = { 0, 0.800000012 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            1
                        }
                        values: list[vec2] = {
                            { 0, 0 }
                            { 0, 1.60000002 }
                            { 0, 0 }
                        }
                    }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 90
                }
                textureMult: string = "ASSETS/Shared/Particles/Darius_Skin14_Glow.TFT_Set3.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.400000006, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.5, 0 }
                }
                texAddressModeMult: u8 = 3
                uvScaleMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1.39999998, 0.00999999978 }
                }
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Lose_WindSwirl"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_WindSwirl"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_DarkWind" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                lifetime: option[f32] = {
                    1
                }
                emitterName: string = "longWind"
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 350, 0, 0 }
                }
                birthAcceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 350, 0, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 400, 0, 400 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 400, 0, 400 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SpiritBlossom_GrassWaves_Mesh.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.570000768 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.570000768 }
                            { 1, 1, 1, 0.570000768 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                alphaRef: u8 = 0
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 12, 3, 12 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Freljord_Flurry_Wind.TFT_Freljord.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.349999994, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.349999994, 0 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Particles/SG_VelKoz_Base_R_DarkGlow.dds"
            }
        }
        particleName: string = "TFT_SpiritBlossom_Yokai_Lose_DarkWind"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_DarkWind"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_SpiritGustFollowUp" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 100
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.258317024
                            0.5
                            0.704500973
                            1
                        }
                        values: list[f32] = {
                            5.41666651
                            33.3333321
                            100
                            34.7222214
                            6.80555534
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                lifetime: option[f32] = {
                    1.5
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {}
                emitterName: string = "brightMotes"
                disabled: bool = true
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.899999976
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 200, -750, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 200, -750, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0.5, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -100, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -100, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 850, -1500 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 25, 25, 25 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 25, 25, 25 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.86999315, 0.639993906, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.86999315, 0.639993906, 1, 0 }
                            { 0.86999315, 0.639993906, 1, 1 }
                            { 0.86999315, 0.639993906, 1, 1 }
                            { 0.86999315, 0.639993906, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 50, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0 }
                            { 1, 1, 1 }
                            { 0.300000012, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Library/TFT_Environment/Morgana_Blackthorn_Petals.dds"
                birthFrameRate: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 150
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.258317024
                            0.5
                            0.704500973
                            1
                        }
                        values: list[f32] = {
                            8.125
                            50
                            150
                            52.0833321
                            10.208333
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    8
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 5000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 10
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 50
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "brightMotes1"
                disabled: bool = true
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { -3000, -1000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -3000, -1000, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.5, 0.5, 0.5 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 200, -250, 1200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 200, -250, 1200 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 140, 140, 140 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 140, 140, 140 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.80392158, 0.490196079, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0493150726
                            0.929158509
                            1
                        }
                        values: list[vec4] = {
                            { 0.80392158, 0.490196079, 1, 0 }
                            { 0.80392158, 0.490196079, 1, 1 }
                            { 0.80392158, 0.490196079, 1, 1 }
                            { 0.80392158, 0.490196079, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 45, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 45, 50, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0 }
                            { 1, 0, 0 }
                            { 1, 1, 1 }
                            { 0.300000012, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Firefly_Mote.TFT_Set5.dds"
                uvMode: u8 = 2
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                emitterName: string = "SlowOrbital"
                disabled: bool = true
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0.400000006, 0 }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -500, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -500, 200 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.5, 0.5, 0.5 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -30, 20 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -30, 20 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 600, 1500, 500 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 80, 80, 80 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 80, 80, 80 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.344814092
                            0.929158509
                            1
                        }
                        values: list[vec4] = {
                            { 0.435294122, 0.360784322, 1, 0 }
                            { 0.654901981, 0.309803933, 1, 0.494117647 }
                            { 0.80392158, 0.490196079, 1, 1 }
                            { 0.80392158, 0.490196079, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 100, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 100, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.841095924
                            1
                        }
                        values: list[vec3] = {
                            { 0.737500012, 0.300000012, 0 }
                            { 1, 0, 0 }
                            { 0.472222209, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Firefly_Mote.TFT_Set5.dds"
                uvMode: u8 = 2
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 150
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[f32] = {
                            30
                            150
                            30
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1.5
                }
                lifetime: option[f32] = {
                    1.20000005
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 5000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 10
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 50
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "quickCameraFire"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0.25, 0 }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { -6000, -2500, 4000 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -6000, -2500, 4000 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0.5 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 250, -1500, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 250, -1500, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 80, 80, 80 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 80, 80, 80 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.549996197 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0.560006082 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.80392158, 0.490196079, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0493150726
                            0.929158509
                            1
                        }
                        values: list[vec4] = {
                            { 0.80392158, 0.490196079, 1, 0 }
                            { 0.80392158, 0.490196079, 1, 1 }
                            { 0.80392158, 0.490196079, 1, 1 }
                            { 0.80392158, 0.490196079, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 65, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 65, 50, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.803913891
                            1
                        }
                        values: list[vec3] = {
                            { 0.800000012, 0.300000012, 0 }
                            { 1, 0, 0 }
                            { 0.590277791, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Firefly_Mote.TFT_Set5.dds"
                uvMode: u8 = 2
            }
        }
        visibilityRadius: f32 = 20000
        particleName: string = "TFT_SpiritBlossom_Yokai_Win_SpiritGustFollowUp"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_SpiritGustFollowUp"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_SpiritGustLarge" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLingerType: u8 = 1
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "SlowOrbital"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0.400000006, 0 }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -500, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -500, 200 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.5, 0.5, 0.5 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -30, 20 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -30, 20 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 600, 1500, 500 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 80, 80, 80 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 80, 80, 80 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.344814092
                            0.929158509
                            1
                        }
                        values: list[vec4] = {
                            { 0.439993888, 0.360006094, 1, 1 }
                            { 0.650003791, 0.310002297, 1, 1 }
                            { 0.80392158, 0.490196079, 1, 1 }
                            { 0.800000012, 0.489997715, 1, 1 }
                        }
                    }
                }
                useLingerColor: flag = true
                lingerColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.344814092
                            1
                        }
                        values: list[vec4] = {
                            { 0.439993888, 0.360006094, 1, 1 }
                            { 0.650003791, 0.310002297, 1, 1 }
                            { 0.800000012, 0.489997715, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 100, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 100, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.841095924
                            1
                        }
                        values: list[vec3] = {
                            { 0.737500012, 0.300000012, 0 }
                            { 1, 0, 0 }
                            { 0.472222209, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Firefly_Mote.TFT_Set5.dds"
                uvMode: u8 = 2
            }
        }
        visibilityRadius: f32 = 20000
        particleName: string = "TFT_SpiritBlossom_Yokai_Win_SpiritGustLarge"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_SpiritGustLarge"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_JetStream" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0.600000024
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            30
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterName: string = "Trail1"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_CloudWisp.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.60999465, 0.749996185, 1, 0.220004573 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.60999465, 0.749996185, 1, 0 }
                            { 0.60999465, 0.749996185, 1, 0.220004573 }
                            { 0.60999465, 0.749996185, 1, 0.220004573 }
                            { 0.60999465, 0.749996185, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Maps/Particles/TFT/Base_ChainWisp.TFT_Set3.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.0399999991 }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 90
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                period: option[f32] = {
                    1
                }
                timeActiveDuringPeriod: option[f32] = {
                    1
                }
                emitterName: string = "Trail2"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 800, -200, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Kami_CircularCloudPanner.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156875, 0.843137264, 1, 1 }
                }
                pass: i16 = 500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                disableBackfaceCull: bool = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 12, 20, 14 }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Throw_Darkstar_Comet_Trail_01.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0199999996, 0 }
                }
                uvScale: embed = ValueVector2 {
                    constantValue: vec2 = { 4, 1 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 3.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                emitterName: string = "Trail3"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.11999695, 0.149996191, 0.200000003, 0.689997733 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.11999695, 0.149996191, 0.200000003, 0 }
                            { 0.11999695, 0.149996191, 0.200000003, 0.689997733 }
                            { 0.11999695, 0.149996191, 0.200000003, 0.689997733 }
                            { 0.11999695, 0.149996191, 0.200000003, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.400000006
                                0.600000024
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.349999994
                    erosionFeatherOut: f32 = 0.349999994
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                uvScrollAlphaMult: flag = false
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.25, 1, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Base_ChainWisp.TFT_Set3.dds"
                particleUVScrollRate: embed = IntegratedValueVector2 {
                    constantValue: vec2 = { 0, 0.800000012 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            1
                        }
                        values: list[vec2] = {
                            { 0, 0 }
                            { 0, 1.60000002 }
                            { 0, 0 }
                        }
                    }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 90
                }
                textureMult: string = "ASSETS/Shared/Particles/Darius_Skin14_Glow.TFT_Set3.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.400000006, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.5, 0 }
                }
                texAddressModeMult: u8 = 3
                uvScaleMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1.39999998, 0.00999999978 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Trail4"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.160006106, 0.259998471, 0.510002315, 0.549996197 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 0.160006106, 0.259998471, 0.510002315, 0 }
                            { 0.160006106, 0.259998471, 0.510002315, 0.549996197 }
                            { 0.160006106, 0.259998471, 0.510002315, 0.549996197 }
                            { 0.160006106, 0.259998471, 0.510002315, 0 }
                        }
                    }
                }
                pass: i16 = -451
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.600000024
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                uvScrollAlphaMult: flag = false
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.25, 1, 1 }
                }
                texture: string = "ASSETS/Shared/Particles/Items/Item_PhantomDancer_WispTrail.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/Darius_Skin14_Glow.TFT_Set3.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -1, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.600000024, 0 }
                }
                texAddressModeMult: u8 = 3
                uvScaleMult: embed = ValueVector2 {
                    constantValue: vec2 = { 2, 0.100000001 }
                }
                particleUVScrollRateMult: embed = IntegratedValueVector2 {
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 0 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            6
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterName: string = "Trail6"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.741176486, 0.13333334, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.741176486, 0.13333334, 1, 0 }
                            { 0.741176486, 0.13333334, 1, 1 }
                            { 0.741176486, 0.13333334, 1, 1 }
                            { 0.741176486, 0.13333334, 1, 0 }
                        }
                    }
                }
                pass: i16 = -450
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.5
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.5
                    erosionFeatherOut: f32 = 0.5
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.25, 1, 1 }
                }
                texture: string = "ASSETS/Shared/Particles/WispTrail_Add.ARAM_VFX_Update.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/TFT_Unitcombination_Backdrop_Mult.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0500000007, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                uvScaleMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.25, 0.25 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 3.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                emitterName: string = "Trail8"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.7400015, 0.130006865, 1, 0.420004576 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.7400015, 0.130006865, 1, 0 }
                            { 0.7400015, 0.130006865, 1, 0.420004576 }
                            { 0.7400015, 0.130006865, 1, 0.420004576 }
                            { 0.7400015, 0.130006865, 1, 0 }
                        }
                    }
                }
                pass: i16 = -450
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.5
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.5
                    erosionFeatherOut: f32 = 0.5
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                uvScrollAlphaMult: flag = false
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.25, 1, 1 }
                }
                texture: string = "ASSETS/Shared/Particles/WispTrail_Add.ARAM_VFX_Update.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.600000024, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/Darius_Skin14_Glow.TFT_Set3.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.400000006, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.5, 0 }
                }
                texAddressModeMult: u8 = 3
                uvScaleMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1.39999998, 0.00999999978 }
                }
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Lose_JetStream"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_JetStream"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win3_YokaiTotem" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.20000005
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "Temp_GroundGlow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.815686285, 0.376470596, 1, 0.349019617 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 0.815686285, 0.376470596, 1, 0 }
                            { 0.815686285, 0.376470596, 1, 0.349019617 }
                            { 0.815686285, 0.376470596, 1, 0.349019617 }
                            { 0.815686285, 0.376470596, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 65, 150, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/bigglow02.TFT_Set5.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                }
                particleLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "Decal_BG"
                disabled: bool = true
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 10, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveRay {}
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000012 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.796078444, 0.278431386, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0.796078444, 0.278431386, 1, 0 }
                            { 0.796078444, 0.278431386, 1, 1 }
                            { 0.796078444, 0.278431386, 1, 0 }
                        }
                    }
                }
                pass: i16 = -10
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 25
                }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Maps/Particles/TFT/URF_Finisher_Statue_Dust_Erosion.TFT_Set3.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 90 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 150, -250, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 150, -250, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.5, 1.5, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1.04999995, 0.75, 0 }
                            { 1.5, 0.900000036, 0 }
                            { 0.75, 1.5, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_FlameQuads.TFT_ArenaSkin_SpiritBlossom.dds"
                numFrames: u16 = 6
                texDiv: vec2 = { 3, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.75
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.600000024
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            position: embed = ValueVector3 {
                                constantValue: vec3 = { 50, 50, 50 }
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 70
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 20
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "Embers"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 250, 0 }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 3, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 10, 10, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 10, 10, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.698039234, 0.960784316, 0.400000006 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0.25
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 0.525490224, 0.0666666701, 0.243137255, 0 }
                        }
                    }
                }
                pass: i16 = -5
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 26
                }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherOut: f32 = 0.300000012
                    erosionMapName: string = "ASSETS/Maps/Particles/TFT/Base_SmokeErode.TFT_Set4_Act2.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 360, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 360, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 80, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.349999994
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                            { 1, 0, 0 }
                            { 0.150000006, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/TFT_Kami_Embers.TFT_ArenaSkin_SpiritBlossom.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    5
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            position: embed = ValueVector3 {
                                constantValue: vec3 = { 0, 50, 0 }
                            }
                            radius: embed = ValueFloat {
                                constantValue: f32 = 150
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 5
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 10
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "Petals"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -25, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -25, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 25, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 25, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.850003839 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.580392182, 0.101960786, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.580392182, 0.101960786, 1, 1 }
                            { 0.580392182, 0.101960786, 1, 0 }
                        }
                    }
                }
                pass: i16 = -50
                alphaRef: u8 = 0
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 25
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 360, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 360, 360, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 15, 1, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.349999994
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0, 0 }
                            { 1, 1, 0 }
                            { 0.5, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/TFT_Kami_Petal.TFT_ArenaSkin_SpiritBlossom.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                }
                emitterName: string = "Shockwaves"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.937254906, 0.698039234, 1, 1 }
                }
                depthBiasFactors: vec2 = { -1, -60 }
                isUniformScale: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { -350, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 35, 1, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.0500000007
                            0.100000001
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 0, 0 }
                            { 0.899999976, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Kami_InkCircle.TFT_ArenaSkin_SpiritBlossom.dds"
                textureMult: string = "ASSETS/Maps/Particles/TFT/TFT_Kami_InkCircle.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvRotateRateMult: embed = ValueFloat {
                    constantValue: f32 = 150
                }
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 85
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            85
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                }
                emitterName: string = "Shockwaves1"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.229999244, 0.200000003, 0.2399939, 0.500007629 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                depthBiasFactors: vec2 = { -1, -60 }
                isUniformScale: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { -250, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 65, 1, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Kami_InkCircle.TFT_ArenaSkin_SpiritBlossom.dds"
                textureMult: string = "ASSETS/Shared/Particles/TFT_Kami_InkCircle.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvRotateRateMult: embed = ValueFloat {
                    constantValue: f32 = 150
                }
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 85
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            85
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 160
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                period: option[f32] = {
                    1
                }
                timeActiveDuringPeriod: option[f32] = {
                    1
                }
                emitterName: string = "Trail"
                disabled: bool = true
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 350, 0 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 100, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 100, 0, 0 }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = -10
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveArbitraryTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 3000, 0, 0 }
                        }
                        mSmoothingMode: u8 = 1
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.435294122, 0.227450982, 0.580392182, 0.258823544 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.25
                            1
                        }
                        values: list[vec4] = {
                            { 0.435294122, 0.227450982, 0.580392182, 0.258823544 }
                            { 0.435294122, 0.227450982, 0.580392182, 0.258823544 }
                            { 0.435294122, 0.227450982, 0.580392182, 0.258823544 }
                            { 0, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = -10
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                uvScrollClamp: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 60, 80, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/TFT2_MasterYi_WispTrail_Add.TFT_Set3.dds"
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { -0.5, 0 }
                }
                emitterUvScrollRate: vec2 = { -0.0500000007, 0 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 160
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                period: option[f32] = {
                    1
                }
                timeActiveDuringPeriod: option[f32] = {
                    1
                }
                emitterName: string = "Trail1"
                disabled: bool = true
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 350, 0 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 100, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 100, 0, 0 }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = -10
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveArbitraryTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 3000, 0, 0 }
                        }
                        mSmoothingMode: u8 = 1
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.337254912, 0.0901960805, 0.580392182, 0.290196091 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.25
                            1
                        }
                        values: list[vec4] = {
                            { 0.337254912, 0.0901960805, 0.580392182, 0.290196091 }
                            { 0.337254912, 0.0901960805, 0.580392182, 0.290196091 }
                            { 0.337254912, 0.0901960805, 0.580392182, 0.290196091 }
                            { 0, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = -10
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                uvScrollClamp: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 160, 200, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/AurelionSol_SmallStarTrail.dds"
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { -0.349999994, 0 }
                }
                emitterUvScrollRate: vec2 = { -0.0350000001, 0 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "Decal_BG1"
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 10, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 75, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 0, 1, 0.164705887, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0, 1, 0.164705887, 0 }
                            { 0, 1, 0.164705887, 1 }
                            { 0, 1, 0.164705887, 1 }
                            { 0, 1, 0.164705887, 0 }
                        }
                    }
                }
                pass: i16 = -10
                alphaRef: u8 = 0
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 25
                }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.200000003
                    erosionFeatherOut: f32 = 0.200000003
                    erosionMapName: string = "ASSETS/Maps/Particles/TFT/URF_Finisher_Statue_Dust_Erosion.TFT_Set3.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 100, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 100, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 2, 1.5, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_UnitCombination_Bigglow02.SKINS_Veigar_Skin23.dds"
                textureMult: string = "ASSETS/Shared/Particles/Base_Comet_Impact_Smoke.LittleLegends_10_10.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.200000003 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                }
                particleLinger: option[f32] = {
                    0.800000012
                }
                emitterName: string = "Decal_BG2"
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 10, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 75, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.854901969, 0.419607848, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.854901969, 0.419607848, 1, 0 }
                            { 0.854901969, 0.419607848, 1, 1 }
                            { 0.854901969, 0.419607848, 1, 1 }
                            { 0.854901969, 0.419607848, 1, 0 }
                        }
                    }
                }
                pass: i16 = -8
                alphaRef: u8 = 0
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 25
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 100, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 100, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.5, 1, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_UnitCombination_Bigglow02.SKINS_Veigar_Skin23.dds"
                textureMult: string = "ASSETS/Shared/Particles/Base_Comet_Impact_Smoke.LittleLegends_10_10.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                lifetime: option[f32] = {
                    4
                }
                emitterName: string = "Temp_Mesh_Blend_Constant"
                disabled: bool = true
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 200 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/TFT_SpiritBlossom_Portal.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.0313725509, 1, 0.839215755, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.25999999
                        }
                        values: list[vec4] = {
                            { 0.0313725509, 1, 0.839215755, 0.215701997 }
                            { 0.0313725509, 1, 0.839215755, 0.254902005 }
                            { 0.0313725509, 1, 0.839215755, 1 }
                        }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 0.0196080003, 0.458824009, 1, 0 }
                        }
                    }
                }
                pass: i16 = -5
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                texture: string = "ASSETS/Characters/Galio/Skins/Skin04/Particles/Galio_Skin04_Headflame_Trail.dds"
                texDiv: vec2 = { 1, 0.5 }
                particleUVScrollRate: embed = IntegratedValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.310000002
                            1
                        }
                        values: list[vec2] = {
                            { 0, 0.100000001 }
                            { 0, 0.100000001 }
                            { 0, 1 }
                            { 0, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                emitterName: string = "Distort"
                disabled: bool = true
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                particleColorTexture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_Portal_Distort.TFT_ArenaSkin_SpiritBlossom.dds"
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                alphaRef: u8 = 0
                distortionDefinition: pointer = VfxDistortionDefinitionData {
                    distortion: f32 = 0.0199999996
                    normalMapTexture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_CircleNormal.TFT_ArenaSkin_SpiritBlossom.dds"
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 90 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 140, 450, 450 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            0.75
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0.300000012 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                            { 0.980000019, 0.980000019, 0.980000019 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_White.TFT_ArenaSkin_SpiritBlossom.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                emitterName: string = "Distort_FAST"
                disabled: bool = true
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 150, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_color_rampdown.TFT_ArenaSkin_SpiritBlossom.dds"
                blendMode: u8 = 1
                pass: i16 = -490
                meshRenderFlags: u8 = 0
                colorLookUpTypeY: u8 = 3
                alphaRef: u8 = 0
                distortionDefinition: pointer = VfxDistortionDefinitionData {
                    distortion: f32 = 0.0500000007
                    normalMapTexture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_distort-pinch.TFT_ArenaSkin_SpiritBlossom.dds"
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 220, 175, 175 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 2, 0.200000003, 0.200000003 }
                            { 0.200000003, 2, 2 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_aura_self.TFT_ArenaSkin_SpiritBlossom.dds"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 400
                }
                scale1: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            1
                            1.29999995
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4
                }
                isSingleParticle: flag = true
                emitterName: string = "distort1"
                importance: u8 = 0
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 100, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_color-rampdown32.TFT_ArenaSkin_SpiritBlossom.dds"
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                pass: i16 = 1000
                meshRenderFlags: u8 = 0
                distortionDefinition: pointer = VfxDistortionDefinitionData {
                    distortion: f32 = 0.0500000007
                    distortionMode: u8 = 2
                    normalMapTexture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_distort-pinch.TFT_ArenaSkin_SpiritBlossom.dds"
                }
                miscRenderFlags: u8 = 1
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 350, 260, 260 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_aura_self.TFT_ArenaSkin_SpiritBlossom.dds"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 260
                }
                scale1: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            0.100000001
                            2
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 3
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                emitterName: string = "distort2"
                importance: u8 = 0
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 100, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_color-rampdown32.TFT_ArenaSkin_SpiritBlossom.dds"
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1000
                meshRenderFlags: u8 = 0
                distortionDefinition: pointer = VfxDistortionDefinitionData {
                    distortion: f32 = 0.00700000022
                    distortionMode: u8 = 2
                    normalMapTexture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_distort-pinch.TFT_ArenaSkin_SpiritBlossom.dds"
                }
                miscRenderFlags: u8 = 1
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 350, 260, 260 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0, 0 }
                            { 1, 1, 1 }
                            { 0.300000012, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_aura_self.TFT_ArenaSkin_SpiritBlossom.dds"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 260
                }
                scale1: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            0.100000001
                            2
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.5
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldAttractionDefinitions: list[embed] = {
                        VfxFieldAttractionDefinitionData {
                            position: embed = ValueVector3 {
                                constantValue: vec3 = { 0, 50, 0 }
                            }
                            radius: embed = ValueFloat {
                                constantValue: f32 = 1000
                            }
                            acceleration: embed = ValueFloat {
                                constantValue: f32 = 1000
                            }
                        }
                    }
                }
                emitterName: string = "Basic"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0.200000003
                                    0.200000003
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0.200000003
                                    0.200000003
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthAcceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 100 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 145, -150 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 2, 2, 0.5 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -150
                                        150
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -150
                                        150
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        150
                                        -150
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 2, 2, 0.5 }
                            }
                        }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                            0.300000012
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.231372997, 1, 0, 0 }
                            { 0.0941179991, 1, 0.576470971, 1 }
                            { 0.00784299988, 0.568627, 1, 1 }
                            { 0.258823991, 0.0117650004, 1, 0.450980008 }
                        }
                    }
                }
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                directionVelocityScale: f32 = 0.00300000003
                birthScale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    20
                                    25
                                    60
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.5, 0.5, 0.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_Spark.TFT_ArenaSkin_SpiritBlossom.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.600000024
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldAttractionDefinitions: list[embed] = {
                        VfxFieldAttractionDefinitionData {
                            position: embed = ValueVector3 {
                                constantValue: vec3 = { 0, 50, 0 }
                            }
                            radius: embed = ValueFloat {
                                constantValue: f32 = 1000
                            }
                            acceleration: embed = ValueFloat {
                                constantValue: f32 = 1000
                            }
                        }
                    }
                }
                emitterName: string = "Hands"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0.200000003
                                    0.200000003
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0.200000003
                                    0.200000003
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthAcceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 100 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 2, 2, 0.5 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -200
                                        200
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -200
                                        200
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        200
                                        -200
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 2, 2, 0.5 }
                            }
                        }
                    }
                }
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.925490201, 0.345098048, 1, 0.23137255 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                            0.300000012
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.043136999, 0.043136999, 0 }
                            { 1, 1, 1, 0.176501006 }
                            { 1, 1, 1, 1 }
                            { 0.258823991, 0.0117650004, 1, 0.450980008 }
                        }
                    }
                }
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                directionVelocityScale: f32 = 0.00300000003
                birthScale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    40
                                    50
                                    120
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.5, 0.5, 0.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_SpectralFire.TFT_ArenaSkin_SpiritBlossom.dds"
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    1
                }
                emitterName: string = "Temp_Mesh_Behind_Move"
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { -25, -120, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_PortalBody.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.466666669, 1, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -650
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 120
                }
                disableBackfaceCull: bool = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -45, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 7, 2.5 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_PortalMult.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.200000003, -1 }
                }
                texDiv: vec2 = { 1, 2 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4
                }
                particleLinger: option[f32] = {
                    4
                }
                emitterName: string = "Vacuum_Floor"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 75, 0, -50 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_VacuumFloor.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.270588249, 0.988235295, 0.741176486 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.150000006
                            0.850000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 5
                miscRenderFlags: u8 = 1
                particleIsLocalOrientation: flag = true
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 135, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 10 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_WispyMult.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.5 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0.400000006, 0 }
                }
                uvScale: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 0.400000006 }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 180
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.5
                }
                isSingleParticle: flag = true
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldAttractionDefinitions: list[embed] = {
                        VfxFieldAttractionDefinitionData {
                            position: embed = ValueVector3 {
                                constantValue: vec3 = { 0, 50, 0 }
                            }
                            radius: embed = ValueFloat {
                                constantValue: f32 = 1000
                            }
                            acceleration: embed = ValueFloat {
                                constantValue: f32 = 2000
                            }
                        }
                    }
                }
                emitterName: string = "burst"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0.200000003
                                    0.200000003
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0.200000003
                                    0.200000003
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                            0.25
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 3, 10, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 1200, 0, 0 }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 2, 2, 2 }
                }
                birthAcceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 100 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 2, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 2, 2, 0.5 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 1 }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                            0.300000012
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.231372997, 1, 0, 0 }
                            { 0.0941179991, 1, 0.576470971, 1 }
                            { 0.00784299988, 0.568627, 1, 1 }
                            { 0.258823991, 0.0117650004, 1, 0.450980008 }
                        }
                    }
                }
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                directionVelocityScale: f32 = 0.00300000003
                birthScale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    20
                                    25
                                    60
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.5, 0.5, 0.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_Spark.TFT_ArenaSkin_SpiritBlossom.dds"
            }
        }
        particleName: string = "TFT_SpiritBlossom_Yokai_Win3_YokaiTotem"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win3_YokaiTotem"
        soundPersistentDefault: string = "Play_sfx_tft_env_spiritblossom_common_round_win3_shrine"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Distant" = VfxSystemDefinitionData {
        simpleEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                particleLinger: option[f32] = {
                    10
                }
                emitterName: string = "empty"
                particleColorTexture: string = "ASSETS/Shared/Particles/Black.DDS"
                meshRenderFlags: u8 = 0
                texture: string = "ASSETS/Shared/Particles/Black.DDS"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        visibilityRadius: f32 = 1500
        particleName: string = "TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Distant"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Distant"
        soundPersistentDefault: string = "Play_sfx_tft_env_spiritblossom_yokai_amb_distant"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_SpiritGust" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 100
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.258317024
                            0.5
                            0.704500973
                            1
                        }
                        values: list[f32] = {
                            5.41666651
                            33.3333321
                            100
                            34.7222214
                            6.80555534
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLinger: option[f32] = {
                    2
                }
                lifetime: option[f32] = {
                    3
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 5000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 10
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 50
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "brightMotes1"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { -1500, -750, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -1500, -750, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.5, 0.5, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 200, -97, 1200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 200, -97, 1200 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 50, 50 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 50, 50 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.80392158, 0.490196079, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.80392158, 0.490196079, 1, 0 }
                            { 0.80392158, 0.490196079, 1, 1 }
                            { 0.80392158, 0.490196079, 1, 1 }
                            { 0.80392158, 0.490196079, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 45, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 45, 50, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0 }
                            { 1, 1, 1 }
                            { 0.300000012, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Firefly_Mote.TFT_Set5.dds"
                uvMode: u8 = 2
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Win_SpiritGust"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_SpiritGust"
        soundPersistentDefault: string = "Play_sfx_tft_env_spiritblossom_yokai_click_shrine"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_CameraSpiritGust" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 100
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.258317024
                            0.5
                            0.704500973
                            1
                        }
                        values: list[f32] = {
                            5.41666651
                            33.3333321
                            100
                            34.7222214
                            6.80555534
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                lifetime: option[f32] = {
                    1.5
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {}
                emitterName: string = "brightMotes"
                disabled: bool = true
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.899999976
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 200, -750, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 200, -750, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0.5, 4 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -100, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -100, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 850, -1500 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 25, 25, 25 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 25, 25, 25 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.86999315, 0.639993906, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.86999315, 0.639993906, 1, 0 }
                            { 0.86999315, 0.639993906, 1, 1 }
                            { 0.86999315, 0.639993906, 1, 1 }
                            { 0.86999315, 0.639993906, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 50, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0 }
                            { 1, 1, 1 }
                            { 0.300000012, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Library/TFT_Environment/Morgana_Blackthorn_Petals.dds"
                birthFrameRate: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 150
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.258317024
                            0.5
                            0.704500973
                            1
                        }
                        values: list[f32] = {
                            8.125
                            50
                            150
                            52.0833321
                            10.208333
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    8
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 5000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 10
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 50
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "brightMotes1"
                disabled: bool = true
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { -3000, -1000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -3000, -1000, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.5, 0.5, 0.5 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 200, -250, 1200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 200, -250, 1200 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 140, 140, 140 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 140, 140, 140 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.80392158, 0.490196079, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0493150726
                            0.929158509
                            1
                        }
                        values: list[vec4] = {
                            { 0.80392158, 0.490196079, 1, 0 }
                            { 0.80392158, 0.490196079, 1, 1 }
                            { 0.80392158, 0.490196079, 1, 1 }
                            { 0.80392158, 0.490196079, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 45, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 45, 50, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0 }
                            { 1, 0, 0 }
                            { 1, 1, 1 }
                            { 0.300000012, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Firefly_Mote.TFT_Set5.dds"
                uvMode: u8 = 2
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                emitterName: string = "SlowOrbital"
                disabled: bool = true
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0.400000006, 0 }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -500, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -500, 200 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.5, 0.5, 0.5 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -30, 20 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -30, 20 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 600, 1500, 500 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 80, 80, 80 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 80, 80, 80 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.344814092
                            0.929158509
                            1
                        }
                        values: list[vec4] = {
                            { 0.435294122, 0.360784322, 1, 0 }
                            { 0.654901981, 0.309803933, 1, 0.494117647 }
                            { 0.80392158, 0.490196079, 1, 1 }
                            { 0.80392158, 0.490196079, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 100, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 100, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.841095924
                            1
                        }
                        values: list[vec3] = {
                            { 0.737500012, 0.300000012, 0 }
                            { 1, 0, 0 }
                            { 0.472222209, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Firefly_Mote.TFT_Set5.dds"
                uvMode: u8 = 2
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 150
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[f32] = {
                            75
                            150
                            75
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    1.20000005
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 5000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 10
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 50
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "quickCameraFire"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1.5, 0 }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { -1500, -4000, -2000 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -1500, -4000, -2000 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 0.5 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { -1500, -1000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -1500, -1000, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 600, 1500, 500 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 120, 120, 120 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 120, 120, 120 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    0
                                }
                            }
                        }
                        ValueFloat {
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    0
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 1 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.549996197 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0.560006082 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.80392158, 0.490196079, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0493150726
                            0.929158509
                            1
                        }
                        values: list[vec4] = {
                            { 0.80392158, 0.490196079, 1, 0 }
                            { 0.80392158, 0.490196079, 1, 1 }
                            { 0.80392158, 0.490196079, 1, 1 }
                            { 0.80392158, 0.490196079, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 65, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 65, 50, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.803913891
                            1
                        }
                        values: list[vec3] = {
                            { 0.800000012, 0.300000012, 0 }
                            { 1, 0, 0 }
                            { 0.590277791, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Firefly_Mote.TFT_Set5.dds"
                uvMode: u8 = 2
            }
        }
        visibilityRadius: f32 = 20000
        particleName: string = "TFT_SpiritBlossom_Yokai_Win_CameraSpiritGust"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_CameraSpiritGust"
        soundPersistentDefault: string = "Play_sfx_tft_env_spiritblossom_common_leaves"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Motes" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 4000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 5
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 20
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "brightSnow"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { -100, -30, -100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -100, -30, -100 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1000, 200, 1000 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1000, 200, 1000 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 45
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.0823529437, 1, 0.862745106, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.0823529437, 1, 0.862745106, 0 }
                            { 0.0823529437, 1, 0.862745106, 1 }
                            { 0.0823529437, 1, 0.862745106, 0 }
                        }
                    }
                }
                pass: i16 = 200
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                directionVelocityScale: f32 = 0.00200000009
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 12, 12, 12 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Firefly_Mote.TFT_Set5.dds"
                uvMode: u8 = 2
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 4000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 5
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 20
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "darkSnow"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { -200, -100, -200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -200, -100, -200 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1000, 200, 1000 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1000, 200, 1000 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 45
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                blendMode: u8 = 2
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.78039217, 1, 0.305882365, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.78039217, 1, 0.305882365, 0 }
                            { 0.78039217, 1, 0.305882365, 1 }
                            { 0.78039217, 1, 0.305882365, 0 }
                        }
                    }
                }
                pass: i16 = 200
                isDirectionOriented: flag = true
                isRandomStartFrame: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 0, 0 }
                        }
                    }
                }
                directionVelocityScale: f32 = 0.00200000009
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 8, 8, 0 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Vayne_Skin10_Flecks_02.TFT_Set3.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Motes"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Motes"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_KamiTotem" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1.25
                }
                emitterName: string = "Temp_GroundGlow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 100, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.960006118, 0.400000006, 1, 0.110002287 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 0.960006118, 0.400000006, 1, 0 }
                            { 0.960006118, 0.400000006, 1, 0.110002287 }
                            { 0.960006118, 0.400000006, 1, 0.110002287 }
                            { 0.960006118, 0.400000006, 1, 0 }
                        }
                    }
                }
                pass: i16 = -499
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 300, 150, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/bigglow02.TFT_Set5.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                }
                particleLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "Decal_BG"
                disabled: bool = true
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 10, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveRay {}
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000012 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.796078444, 0.278431386, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0.796078444, 0.278431386, 1, 0 }
                            { 0.796078444, 0.278431386, 1, 1 }
                            { 0.796078444, 0.278431386, 1, 0 }
                        }
                    }
                }
                pass: i16 = -10
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 25
                }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Maps/Particles/TFT/URF_Finisher_Statue_Dust_Erosion.TFT_Set3.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 90 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 150, -250, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 150, -250, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.5, 1.5, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1.04999995, 0.75, 0 }
                            { 1.5, 0.900000036, 0 }
                            { 0.75, 1.5, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_FlameQuads.TFT_ArenaSkin_SpiritBlossom.dds"
                numFrames: u16 = 6
                texDiv: vec2 = { 3, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.75
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            position: embed = ValueVector3 {
                                constantValue: vec3 = { 50, 50, 50 }
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 70
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 20
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "Embers"
                disabled: bool = true
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 250, 0 }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 3, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 10, 10, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 10, 10, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.698039234, 0.960784316, 0.400000006 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0.25
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 0.525490224, 0.0666666701, 0.243137255, 0 }
                        }
                    }
                }
                pass: i16 = -5
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 26
                }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherOut: f32 = 0.300000012
                    erosionMapName: string = "ASSETS/Maps/Particles/TFT/Base_SmokeErode.TFT_Set4_Act2.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 360, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 360, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 80, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.349999994
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                            { 1, 0, 0 }
                            { 0.150000006, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/TFT_Kami_Embers.TFT_ArenaSkin_SpiritBlossom.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    5
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            position: embed = ValueVector3 {
                                constantValue: vec3 = { 0, 50, 0 }
                            }
                            radius: embed = ValueFloat {
                                constantValue: f32 = 150
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 5
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 10
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "Petals"
                disabled: bool = true
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -25, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -25, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 25, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 25, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.850003839 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.580392182, 0.101960786, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.580392182, 0.101960786, 1, 1 }
                            { 0.580392182, 0.101960786, 1, 0 }
                        }
                    }
                }
                pass: i16 = -50
                alphaRef: u8 = 0
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 25
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 360, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 360, 360, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 15, 1, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.349999994
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0, 0 }
                            { 1, 1, 0 }
                            { 0.5, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/TFT_Kami_Petal.TFT_ArenaSkin_SpiritBlossom.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                }
                emitterName: string = "Shockwaves"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.937254906, 0.698039234, 1, 1 }
                }
                depthBiasFactors: vec2 = { -1, -60 }
                isUniformScale: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { -350, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 35, 1, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.0500000007
                            0.100000001
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 0, 0 }
                            { 0.899999976, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Kami_InkCircle.TFT_ArenaSkin_SpiritBlossom.dds"
                textureMult: string = "ASSETS/Maps/Particles/TFT/TFT_Kami_InkCircle.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvRotateRateMult: embed = ValueFloat {
                    constantValue: f32 = 150
                }
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 85
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            85
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                }
                emitterName: string = "Shockwaves1"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.229999244, 0.200000003, 0.2399939, 0.500007629 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                depthBiasFactors: vec2 = { -1, -60 }
                isUniformScale: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { -250, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 65, 1, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Kami_InkCircle.TFT_ArenaSkin_SpiritBlossom.dds"
                textureMult: string = "ASSETS/Shared/Particles/TFT_Kami_InkCircle.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvRotateRateMult: embed = ValueFloat {
                    constantValue: f32 = 150
                }
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 85
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            85
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 160
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                period: option[f32] = {
                    1
                }
                timeActiveDuringPeriod: option[f32] = {
                    1
                }
                emitterName: string = "Trail"
                disabled: bool = true
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 350, 0 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 100, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 100, 0, 0 }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = -10
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveArbitraryTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 3000, 0, 0 }
                        }
                        mSmoothingMode: u8 = 1
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.239215687, 0.321568638, 0.580392182, 0.258823544 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.25
                            1
                        }
                        values: list[vec4] = {
                            { 0.239215687, 0.321568638, 0.580392182, 0.258823544 }
                            { 0.239215687, 0.321568638, 0.580392182, 0.258823544 }
                            { 0.239215687, 0.321568638, 0.580392182, 0.258823544 }
                            { 0, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = -10
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                uvScrollClamp: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 60, 80, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/TFT2_MasterYi_WispTrail_Add.TFT_Set3.dds"
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { -0.5, 0 }
                }
                emitterUvScrollRate: vec2 = { -0.0500000007, 0 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 160
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                period: option[f32] = {
                    1
                }
                timeActiveDuringPeriod: option[f32] = {
                    1
                }
                emitterName: string = "Trail1"
                disabled: bool = true
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 350, 0 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 100, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 100, 0, 0 }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = -10
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveArbitraryTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 3000, 0, 0 }
                        }
                        mSmoothingMode: u8 = 1
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.0862745121, 0.152941182, 0.580392182, 0.290196091 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.25
                            1
                        }
                        values: list[vec4] = {
                            { 0.0862745121, 0.152941182, 0.580392182, 0.290196091 }
                            { 0.0862745121, 0.152941182, 0.580392182, 0.290196091 }
                            { 0.0862745121, 0.152941182, 0.580392182, 0.290196091 }
                            { 0, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = -10
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                uvScrollClamp: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 160, 200, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/AurelionSol_SmallStarTrail.dds"
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { -0.349999994, 0 }
                }
                emitterUvScrollRate: vec2 = { -0.0350000001, 0 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLinger: option[f32] = {
                    0.5
                }
                lifetime: option[f32] = {
                    1.25
                }
                emitterName: string = "Decal_BG1"
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 10, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 75, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.298039228, 0.615686297, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.298039228, 0.615686297, 1, 0 }
                            { 0.298039228, 0.615686297, 1, 1 }
                            { 0.298039228, 0.615686297, 1, 1 }
                            { 0.298039228, 0.615686297, 1, 0 }
                        }
                    }
                }
                pass: i16 = -10
                alphaRef: u8 = 0
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.200000003
                    erosionFeatherOut: f32 = 0.200000003
                    erosionMapName: string = "ASSETS/Maps/Particles/TFT/URF_Finisher_Statue_Dust_Erosion.TFT_Set3.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 100, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 100, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 2, 1.5, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_UnitCombination_Bigglow02.SKINS_Veigar_Skin23.dds"
                textureMult: string = "ASSETS/Shared/Particles/Base_Comet_Impact_Smoke.LittleLegends_10_10.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.200000003 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                }
                particleLinger: option[f32] = {
                    0.5
                }
                lifetime: option[f32] = {
                    1.25
                }
                emitterName: string = "Decal_BG2"
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 10, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 75, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.545098066, 0.0901960805, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.545098066, 0.0901960805, 1, 0 }
                            { 0.545098066, 0.0901960805, 1, 1 }
                            { 0.545098066, 0.0901960805, 1, 1 }
                            { 0.545098066, 0.0901960805, 1, 0 }
                        }
                    }
                }
                pass: i16 = -8
                alphaRef: u8 = 0
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 100, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 100, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.5, 1, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_UnitCombination_Bigglow02.SKINS_Veigar_Skin23.dds"
                textureMult: string = "ASSETS/Shared/Particles/Base_Comet_Impact_Smoke.LittleLegends_10_10.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.649999976
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.649999976
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    1.20000005
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 5000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 10
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 50
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "brightMotes"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 300, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 150, 0 }
                            { 0, 750, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 2, 0 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 20, 20, 20 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 20, 20, 20 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.952941179, 0.411764711, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.952941179, 0.411764711, 1, 0 }
                            { 0.952941179, 0.411764711, 1, 1 }
                            { 0.952941179, 0.411764711, 1, 1 }
                            { 0.952941179, 0.411764711, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 50, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0 }
                            { 1, 1, 1 }
                            { 0.300000012, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Library/TFT_Environment/Morgana_Blackthorn_Petals.dds"
                birthFrameRate: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.300000012
                        }
                    }
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1.39999998
                }
                emitterName: string = "rayglow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.97999543, 0.379995435, 1, 0.420004576 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 0.97999543, 0.379995435, 1, 0 }
                            { 0.97999543, 0.379995435, 1, 0.420004576 }
                            { 0.97999543, 0.379995435, 1, 0.420004576 }
                            { 0.97999543, 0.379995435, 1, 0 }
                        }
                    }
                }
                pass: i16 = 500
                depthBiasFactors: vec2 = { -1, -15 }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 15, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 15, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 180, 180, 50 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                            0.800000012
                            1
                        }
                        values: list[vec3] = {
                            { 180, 180, 50 }
                            { 360, 360, 250 }
                            { 180, 180, 50 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Item_Spectral_Flare.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.20000005
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1.25
                }
                emitterName: string = "Temp_GroundGlow1"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 100, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.970000744, 0.540001512, 0.300007641 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.970000744, 0.540001512, 0 }
                            { 1, 0.970000744, 0.540001512, 0.300007641 }
                            { 1, 0.970000744, 0.540001512, 0.300007641 }
                            { 1, 0.970000744, 0.540001512, 0 }
                        }
                    }
                }
                pass: i16 = -500
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 350, 150, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/bigglow02.TFT_Set5.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1.25
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.25
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.25
                        }
                    }
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                emitterName: string = "Temp_GroundGlow2"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.180392161, 0.152941182, 1, 0.349019617 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.150000006
                            1
                        }
                        values: list[vec4] = {
                            { 0.180392161, 0.152941182, 1, 0 }
                            { 0.180392161, 0.152941182, 1, 0.349019617 }
                            { 0.180392161, 0.152941182, 1, 0 }
                        }
                    }
                }
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 10
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 650, 150, 50 }
                }
                texture: string = "ASSETS/Shared/Particles/bigglow02.TFT_Set5.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1.25
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.300000012
                        }
                    }
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                emitterName: string = "rayglow1"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.333333343, 0, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.333333343, 0, 0 }
                            { 1, 0.333333343, 0, 1 }
                            { 1, 0.333333343, 0, 1 }
                            { 1, 0.333333343, 0, 0 }
                        }
                    }
                }
                pass: i16 = 501
                alphaRef: u8 = 0
                depthBiasFactors: vec2 = { -1, -15 }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 15, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 15, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 450, 450, 450 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 450, 450, 450 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.150000006
                            0.27984345
                            0.528375745
                            1
                        }
                        values: list[vec3] = {
                            { 0.200000003, 0.200000003, 0 }
                            { 1, 1, 1 }
                            { 0.625, 0.606489718, 0.847243011 }
                            { 0.222222224, 0.22151874, 0.554852128 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Item_Spectral_Flare.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1.14999998
                rate: embed = ValueFloat {
                    constantValue: f32 = 12
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 5000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 10
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 50
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "brightMotes1"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 75, 600, 75 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 75, 600, 75 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 2, 2, 2 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 20, 20, 20 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 20, 20, 20 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.952941179, 0.411764711, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.952941179, 0.411764711, 1, 0 }
                            { 0.952941179, 0.411764711, 1, 1 }
                            { 0.952941179, 0.411764711, 1, 1 }
                            { 0.952941179, 0.411764711, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 50, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0 }
                            { 1, 1, 1 }
                            { 0.300000012, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Library/TFT_Environment/Morgana_Blackthorn_Petals.dds"
                birthFrameRate: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1.25
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.300000012
                        }
                    }
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                emitterName: string = "Distort_FAST"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 25, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_color_rampdown.TFT_ArenaSkin_SpiritBlossom.dds"
                blendMode: u8 = 1
                pass: i16 = -490
                meshRenderFlags: u8 = 0
                colorLookUpTypeY: u8 = 3
                alphaRef: u8 = 0
                distortionDefinition: pointer = VfxDistortionDefinitionData {
                    distortion: f32 = 0.0500000007
                    normalMapTexture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_CircleNormal.TFT_ArenaSkin_SpiritBlossom.dds"
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 220, 175, 175 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.200000003, 0.200000003, 0.200000003 }
                            { 2, 2, 2 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_aura_self.TFT_ArenaSkin_SpiritBlossom.dds"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 400
                }
                scale1: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            1
                            1.29999995
                        }
                    }
                }
                particleBind: vec2 = { 1, 1 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1.14999998
                rate: embed = ValueFloat {
                    constantValue: f32 = 12
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 5000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 5
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 25
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "brightMotes2"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 600 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.25
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 600 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 2, 2, 2 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 20, 20, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 20, 20, 20 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.952941179, 0.411764711, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.952941179, 0.411764711, 1, 0 }
                            { 0.952941179, 0.411764711, 1, 1 }
                            { 0.952941179, 0.411764711, 1, 1 }
                            { 0.952941179, 0.411764711, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 50, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0 }
                            { 1, 1, 1 }
                            { 0.300000012, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Library/TFT_Environment/Morgana_Blackthorn_Petals.dds"
                birthFrameRate: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.75
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.4000001
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2.4000001
                        }
                    }
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    2
                }
                emitterName: string = "Temp_GroundGlow3"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.90196079, 0.396078438, 1, 0.109803922 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 0.90196079, 0.396078438, 1, 0 }
                            { 0.90196079, 0.396078438, 1, 0.109803922 }
                            { 0.90196079, 0.396078438, 1, 0.109803922 }
                            { 0.90196079, 0.396078438, 1, 0 }
                        }
                    }
                }
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 10
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 250, 150, 50 }
                }
                texture: string = "ASSETS/Shared/Particles/bigglow02.TFT_Set5.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1.25
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.300000012
                        }
                    }
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                emitterName: string = "rayglow2"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.97999543, 0.379995435, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 0.97999543, 0.379995435, 1, 0 }
                            { 0.97999543, 0.379995435, 1, 1 }
                            { 0.97999543, 0.379995435, 1, 1 }
                            { 0.97999543, 0.379995435, 1, 0 }
                        }
                    }
                }
                pass: i16 = 502
                alphaRef: u8 = 0
                depthBiasFactors: vec2 = { -1, -15 }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 15, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 15, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 150, 150, 50 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 150, 150, 50 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.150000006
                            1
                        }
                        values: list[vec3] = {
                            { 0.200000003, 0.200000003, 0 }
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Flare-Omnimax.TFT_Set5.DDS"
            }
        }
        particleName: string = "TFT_SpiritBlossom_Yokai_Win_KamiTotem"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_KamiTotem"
        soundOnCreateDefault: string = "Play_sfx_tft_env_spiritblossom_common_shrine_burst"
        soundPersistentDefault: string = "Play_sfx_tft_env_spiritblossom_common_round_win3_shrine"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_WindSwirl" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 30
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0.600000024
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            30
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterName: string = "Trail1"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_CloudWisp.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.60999465, 0.749996185, 1, 0.220004573 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.60999465, 0.749996185, 1, 0 }
                            { 0.60999465, 0.749996185, 1, 0.220004573 }
                            { 0.60999465, 0.749996185, 1, 0.220004573 }
                            { 0.60999465, 0.749996185, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Maps/Particles/TFT/Base_ChainWisp.TFT_Set3.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.0399999991 }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 90
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                period: option[f32] = {
                    1
                }
                timeActiveDuringPeriod: option[f32] = {
                    1
                }
                emitterName: string = "Trail2"
                disabled: bool = true
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 800, -200, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Kami_CircularCloudPanner.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.792156875, 0.843137264, 1, 1 }
                }
                pass: i16 = 500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                disableBackfaceCull: bool = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 12, 20, 14 }
                }
                texture: string = "ASSETS/Shared/Particles/Poro_Throw_Darkstar_Comet_Trail_01.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0199999996, 0 }
                }
                uvScale: embed = ValueVector2 {
                    constantValue: vec2 = { 4, 1 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            6
                        }
                    }
                }
                particleLinger: option[f32] = {
                    6
                }
                emitterName: string = "Trail3"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp_Swirl1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.60999465, 0.749996185, 1, 0.200000003 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.60999465, 0.749996185, 1, 0 }
                            { 0.60999465, 0.749996185, 1, 0.200000003 }
                            { 0.60999465, 0.749996185, 1, 0.200000003 }
                            { 0.60999465, 0.749996185, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                hasPostRotateOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 360 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 360 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Base_ChainWisp.TFT_Set3.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.300000012 }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 90
                }
                textureMult: string = "ASSETS/Shared/Particles/Varus_Skin07_Glow.TFT_Set4.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.300000012 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.5 }
                }
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Idle_WindSwirl"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_WindSwirl"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_KamiTotem" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1.5
                }
                isSingleParticle: flag = true
                emitterName: string = "Temp_GroundGlow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 100, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.960006118, 0.400000006, 1, 0.220004573 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 0.960006118, 0.400000006, 1, 0 }
                            { 0.960006118, 0.400000006, 1, 0.220004573 }
                            { 0.960006118, 0.400000006, 1, 0.220004573 }
                            { 0.960006118, 0.400000006, 1, 0 }
                        }
                    }
                }
                pass: i16 = -499
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 300, 150, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/bigglow02.TFT_Set5.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                }
                particleLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "Decal_BG"
                disabled: bool = true
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 10, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveRay {}
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000012 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.796078444, 0.278431386, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0.796078444, 0.278431386, 1, 0 }
                            { 0.796078444, 0.278431386, 1, 1 }
                            { 0.796078444, 0.278431386, 1, 0 }
                        }
                    }
                }
                pass: i16 = -10
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 25
                }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionMapName: string = "ASSETS/Maps/Particles/TFT/URF_Finisher_Statue_Dust_Erosion.TFT_Set3.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 90 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 150, -250, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 150, -250, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.5, 1.5, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1.04999995, 0.75, 0 }
                            { 1.5, 0.900000036, 0 }
                            { 0.75, 1.5, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_FlameQuads.TFT_ArenaSkin_SpiritBlossom.dds"
                numFrames: u16 = 6
                texDiv: vec2 = { 3, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 160
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                period: option[f32] = {
                    1
                }
                timeActiveDuringPeriod: option[f32] = {
                    1
                }
                emitterName: string = "Trail1"
                disabled: bool = true
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 350, 0 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 100, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 100, 0, 0 }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = -10
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveArbitraryTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 3000, 0, 0 }
                        }
                        mSmoothingMode: u8 = 1
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.0862745121, 0.152941182, 0.580392182, 0.290196091 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.25
                            1
                        }
                        values: list[vec4] = {
                            { 0.0862745121, 0.152941182, 0.580392182, 0.290196091 }
                            { 0.0862745121, 0.152941182, 0.580392182, 0.290196091 }
                            { 0.0862745121, 0.152941182, 0.580392182, 0.290196091 }
                            { 0, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = -10
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                uvScrollClamp: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 160, 200, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/AurelionSol_SmallStarTrail.dds"
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { -0.349999994, 0 }
                }
                emitterUvScrollRate: vec2 = { -0.0350000001, 0 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    0.5
                }
                lifetime: option[f32] = {
                    5
                }
                isSingleParticle: flag = true
                emitterName: string = "Decal_BG1"
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 10, 0 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { -250, 0, 250 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -250, 0, 250 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 75, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.0117647061, 0.388235301, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.0117647061, 0.388235301, 1, 0 }
                            { 0.0117647061, 0.388235301, 1, 1 }
                            { 0.0117647061, 0.388235301, 1, 1 }
                            { 0.0117647061, 0.388235301, 1, 0 }
                        }
                    }
                }
                pass: i16 = -10
                alphaRef: u8 = 0
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.200000003
                    erosionFeatherOut: f32 = 0.200000003
                    erosionMapName: string = "ASSETS/Maps/Particles/TFT/URF_Finisher_Statue_Dust_Erosion.TFT_Set3.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 100, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 100, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 2, 1.5, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_UnitCombination_Bigglow02.SKINS_Veigar_Skin23.dds"
                textureMult: string = "ASSETS/Shared/Particles/Base_Comet_Impact_Smoke.LittleLegends_10_10.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.200000003 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                }
                particleLinger: option[f32] = {
                    0.5
                }
                lifetime: option[f32] = {
                    5
                }
                isSingleParticle: flag = true
                emitterName: string = "Decal_BG2"
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 10, 0 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { -250, 0, 250 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -250, 0, 250 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 75, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.0588235296, 0.952941179, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.0588235296, 0.952941179, 0 }
                            { 1, 0.0588235296, 0.952941179, 1 }
                            { 1, 0.0588235296, 0.952941179, 1 }
                            { 1, 0.0588235296, 0.952941179, 0 }
                        }
                    }
                }
                pass: i16 = -8
                alphaRef: u8 = 0
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 100, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 100, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.5, 1, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_UnitCombination_Bigglow02.SKINS_Veigar_Skin23.dds"
                textureMult: string = "ASSETS/Shared/Particles/Base_Comet_Impact_Smoke.LittleLegends_10_10.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.200000003
                rate: embed = ValueFloat {
                    constantValue: f32 = 12
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    1
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 5000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 1
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 50
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "petalsburst"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { -750, 50, 750 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -750, 50, 750 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 20, 20, 20 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 20, 20, 20 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.952941179, 0.411764711, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.952941179, 0.411764711, 1, 0 }
                            { 0.952941179, 0.411764711, 1, 1 }
                            { 0.952941179, 0.411764711, 1, 1 }
                            { 0.952941179, 0.411764711, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 50, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0 }
                            { 1, 1, 1 }
                            { 0.300000012, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Library/TFT_Environment/Morgana_Blackthorn_Petals.dds"
                birthFrameRate: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    2
                }
                emitterName: string = "rayglow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.980392158, 0.380392164, 1, 1 }
                            { 0.552941203, 0.294117659, 1, 1 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.419607848 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.419607848 }
                            { 1, 1, 1, 0.419607848 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 10
                alphaRef: u8 = 0
                depthBiasFactors: vec2 = { -1, -10 }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 120, 150, 50 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.649999976
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                            0.200000003
                            0.346379638
                            0.452054799
                            0.581213295
                            0.99804306
                        }
                        values: list[vec3] = {
                            { 120, 0, 0 }
                            { 144, 0, 0 }
                            { 55, 0, 0 }
                            { 138, 0, 0 }
                            { 65, 0, 0 }
                            { 34, 0, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.200000003, 0.5, 0 }
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Item_Spectral_Flare.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1.5
                }
                isSingleParticle: flag = true
                emitterName: string = "Temp_GroundGlow1"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 100, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.970000744, 0.540001512, 0.450003803 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.970000744, 0.540001512, 0 }
                            { 1, 0.970000744, 0.540001512, 0.450003803 }
                            { 1, 0.970000744, 0.540001512, 0.450003803 }
                            { 1, 0.970000744, 0.540001512, 0 }
                        }
                    }
                }
                pass: i16 = -500
                depthBiasFactors: vec2 = { -1, -10 }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 350, 150, 50 }
                }
                texture: string = "ASSETS/Shared/Particles/bigglow02.TFT_Set5.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    5
                }
                isSingleParticle: flag = true
                emitterName: string = "Temp_GroundGlow2"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.450003803 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.289628178
                            0.360078275
                            0.409001946
                            0.463796467
                            0.522504866
                            0.575342476
                            0.663405061
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 0.980392158, 0.380392164, 1, 0 }
                            { 0.980392158, 0.380392164, 1, 0.450003803 }
                            { 0.650980413, 0.160784319, 1, 0.315885037 }
                            { 0.521568656, 0.203921571, 0.800000012, 0.430591881 }
                            { 0.470588237, 0.172549024, 0.733333349, 0.172942638 }
                            { 0.517647088, 0.215686277, 0.733333349, 0.388238579 }
                            { 0.376470596, 0.196078435, 0.768627465, 0.134118795 }
                            { 0.615686297, 0.435294122, 1, 0.421768278 }
                            { 0.498039216, 0.278431386, 0.752941191, 0.215295941 }
                            { 0.400000006, 0.254901975, 0.764705896, 0.450003803 }
                            { 0.168627456, 0.168627456, 0.545098066, 0 }
                        }
                    }
                }
                pass: i16 = -350
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 10
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 250, 150, 50 }
                }
                texture: string = "ASSETS/Shared/Particles/bigglow02.TFT_Set5.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 160
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1.5
                        }
                        values: list[f32] = {
                            0.600000024
                            0.180000007
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    2
                }
                period: option[f32] = {
                    1
                }
                timeActiveDuringPeriod: option[f32] = {
                    1
                }
                emitterName: string = "blownoutsmoke"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { -1200, 350, 1200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.109589055
                            0.258317024
                            0.424657494
                            0.545988202
                            0.679452002
                            0.818590939
                            0.969471574
                            1.18688834
                            1.306458
                            1.49168301
                            2
                        }
                        values: list[vec3] = {
                            { -0, 350, 0 }
                            { -675, 289.236115, 683.200012 }
                            { -541.666687, 182.291672, 408.066681 }
                            { -1141.66663, 187.152771, 1149.53333 }
                            { -991.666687, 150.694443, 932.866638 }
                            { -1166.66663, 213.888885, 1141.33325 }
                            { -891.666687, 148.263885, 866.666626 }
                            { -1116.66675, 238.194443, 1075.53333 }
                            { -658.333374, 187.152771, 699.599976 }
                            { -966.666687, 279.513885, 983.866638 }
                            { -0, 247.916672, 0 }
                            { -0, 350, 0 }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = -10
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveArbitraryTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 3000, 0, 0 }
                        }
                        mSmoothingMode: u8 = 1
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1.64999998
                            1.85000002
                            2
                        }
                        values: list[vec4] = {
                            { 1, 0.419607848, 0.992156863, 1 }
                            { 0.960784316, 0.717647076, 1, 1 }
                            { 0.600000024, 0.447058827, 0.694117665, 0.541176498 }
                            { 0.419607848, 0.352941185, 0.545098066, 0 }
                        }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.649999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -10
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 120, 80, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 120, 80, 0 }
                            { 60, 80, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/TFT2_MasterYi_WispTrail_Add.TFT_Set3.dds"
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { -0.5, 0 }
                }
                texDiv: vec2 = { 0.5, 1 }
                emitterUvScrollRate: vec2 = { -0.400000006, 0 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1.79999995
                rate: embed = ValueFloat {
                    constantValue: f32 = 160
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    5
                }
                period: option[f32] = {
                    1
                }
                timeActiveDuringPeriod: option[f32] = {
                    1
                }
                emitterName: string = "lingersmoke"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { -50, 350, 45 }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = -10
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveArbitraryTrail {
                    mTrail: embed = VfxTrailDefinitionData {
                        mBirthTilingSize: embed = ValueVector3 {
                            constantValue: vec3 = { 3000, 0, 0 }
                        }
                        mSmoothingMode: u8 = 1
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.737254918, 0.541176498, 0.905882359, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                            4.5
                            5
                        }
                        values: list[vec4] = {
                            { 0.737254918, 0.541176498, 0.905882359, 0 }
                            { 0.737254918, 0.541176498, 0.905882359, 1 }
                            { 0.737254918, 0.541176498, 0.905882359, 1 }
                            { 0.737254918, 0.541176498, 0.905882359, 0.540001512 }
                            { 0.737254918, 0.541176498, 0.905882359, 0 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.880003035 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.649999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.880003035 }
                            { 1, 1, 1, 0.880003035 }
                            { 1, 1, 1, 0.880003035 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -10
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 150
                }
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 60, 80, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/TFT2_MasterYi_WispTrail_Add.TFT_Set3.dds"
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { -0.5, 0 }
                }
                texDiv: vec2 = { 0.5, 1 }
                emitterUvScrollRate: vec2 = { -0.100000001, 0 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.75
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    5
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 5000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 1
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 50
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "petalslinger"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { -250, 50, 250 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.349999994
                        }
                        values: list[vec3] = {
                            { -250, 0, 250 }
                            { -0, 0, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 20, 20, 20 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 20, 20, 20 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.952941179, 0.411764711, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.952941179, 0.411764711, 1, 0 }
                            { 0.952941179, 0.411764711, 1, 1 }
                            { 0.952941179, 0.411764711, 1, 1 }
                            { 0.952941179, 0.411764711, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 50, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0 }
                            { 1, 1, 1 }
                            { 0.300000012, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Library/TFT_Environment/Morgana_Blackthorn_Petals.dds"
                birthFrameRate: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.200000003
                rate: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    1
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 5000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 1
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 50
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "petalsburst1"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { -750, 50, 750 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -750, 50, 750 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 20, 20, 20 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 20, 20, 20 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.309803933, 0.262745112, 1, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0.25
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 0.525490224, 0.0666666701, 0.243137255, 0 }
                        }
                    }
                }
                pass: i16 = -5
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 26
                }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherOut: f32 = 0.300000012
                    erosionMapName: string = "ASSETS/Maps/Particles/TFT/Base_SmokeErode.TFT_Set4_Act2.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 50, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0 }
                            { 1, 1, 1 }
                            { 0.300000012, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/TFT_Kami_Embers.TFT_ArenaSkin_SpiritBlossom.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1.5
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    5
                }
                emitterName: string = "Temp_GroundGlow3"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 100, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.970000744, 0.540001512, 0.310002297 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.970000744, 0.540001512, 0 }
                            { 1, 0.970000744, 0.540001512, 0.310002297 }
                            { 1, 0.970000744, 0.540001512, 0.310002297 }
                            { 1, 0.970000744, 0.540001512, 0 }
                        }
                    }
                }
                pass: i16 = -500
                depthBiasFactors: vec2 = { -1, -10 }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 350, 150, 50 }
                }
                texture: string = "ASSETS/Shared/Particles/bigglow02.TFT_Set5.dds"
            }
        }
        particleName: string = "TFT_SpiritBlossom_Yokai_Lose_KamiTotem"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_KamiTotem"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_DoorFlash" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1
                }
                emitterName: string = "glowLightLinger"
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 650, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.184313729, 0.498039216, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.823874772
                            0.875733852
                            1
                        }
                        values: list[vec4] = {
                            { 0.184313729, 0.498039216, 1, 0 }
                            { 0.184313729, 0.498039216, 1, 0.401869148 }
                            { 0.184313729, 0.498039216, 1, 1 }
                            { 0.184313729, 0.498039216, 1, 0 }
                        }
                    }
                }
                pass: i16 = 500
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 90 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 750, 500, 50 }
                }
                texture: string = "ASSETS/Shared/Particles/Base_Light.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.100000001
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.79999995
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.79999995
                        }
                    }
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "glowLightBurst"
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 650, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 20, 50, 200 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 20, 50, 200 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            0.166600004
                                            0.166700006
                                            0.5
                                            0.500100017
                                            0.666599989
                                            0.666700006
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            0
                                            90
                                            90
                                            180
                                            180
                                            270
                                            270
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            0.5
                                            0.500100017
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            0
                                            90
                                            90
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 1 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.179995418, 0.500007629, 1, 0.659998477 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.44618395
                            0.872798443
                            0.912915826
                            1
                        }
                        values: list[vec4] = {
                            { 0.179995418, 0.500007629, 1, 0 }
                            { 0.179995418, 0.500007629, 1, 0.209719136 }
                            { 0.179995418, 0.500007629, 1, 0.499625027 }
                            { 0.179995418, 0.500007629, 1, 0.659998477 }
                            { 0.179995418, 0.500007629, 1, 0 }
                        }
                    }
                }
                pass: i16 = 500
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 0, 90 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.949999988
                                    1.04999995
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 0, 90 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 750, 250, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.211350292
                            0.571428537
                            0.799412906
                            0.839530349
                            0.927592993
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0.270833343, 1 }
                            { 1, 0.326388866, 0.647749543 }
                            { 1, 0.520833313, 0.291585118 }
                            { 1, 1, 0 }
                            { 1, 0.805555582, 0 }
                            { 1, 0.604166687, 0 }
                            { 1, 0.5, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Base_Light.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1.25
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLinger: option[f32] = {
                    12
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                emitterName: string = "Temp_GroundGlow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 450, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.179995418, 0.500007629, 1, 0.560006082 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.179995418, 0.500007629, 1, 0 }
                            { 0.179995418, 0.500007629, 1, 0.560006082 }
                            { 0.179995418, 0.500007629, 1, 0 }
                        }
                    }
                }
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 500, 150, 50 }
                }
                texture: string = "ASSETS/Shared/Particles/bigglow02.TFT_Set5.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1.25
                rate: embed = ValueFloat {
                    constantValue: f32 = 25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 4000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 5
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 20
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "brightSnow"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 250, 1000, 250 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 250, 1000, 250 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 1.5, 1.5, 1.5 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -150, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -150, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 300, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 300, 300, 300 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 300, 300, 300 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.97647059, 0.250980407, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.97647059, 0.250980407, 1, 0 }
                            { 0.97647059, 0.250980407, 1, 1 }
                            { 0.97647059, 0.250980407, 1, 0 }
                        }
                    }
                }
                pass: i16 = 200
                particleIsLocalOrientation: flag = true
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                directionVelocityScale: f32 = 0.00200000009
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 12, 12 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_Firefly_Mote.TFT_Set5.dds"
                uvMode: u8 = 2
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1.25
                rate: embed = ValueFloat {
                    constantValue: f32 = 25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                emitterName: string = "TwirlSmoke"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 1000, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.649999976
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 100, 1000, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 2, 0 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 350, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 275, 50, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 275, 50, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.388235301, 0.20784314, 0.701960802, 0.349019617 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 0.764705896, 0.203921571, 0.243137255, 0.650980413 }
                            { 1, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = -200
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.219999999
                    erosionFeatherOut: f32 = 0.219999999
                    erosionMapName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_Erosion_SmokePuff_02.TFT_ArenaSkin_SpiritBlossom.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 150, 150, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.35000002
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1.25
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 150, 150, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            1
                        }
                        values: list[vec3] = {
                            { 0.349999994, 0.349999994, 0 }
                            { 1, 1, 0 }
                            { 1.25, 1.25, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_SmokePuff_02.TFT_ArenaSkin_SpiritBlossom.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Win_DoorFlash"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_DoorFlash"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win3_WindSwirl" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.180000007
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 8
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            8
                        }
                    }
                }
                particleLinger: option[f32] = {
                    8
                }
                emitterName: string = "Trail4"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp_Swirl1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.396078438, 0.290196091, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.396078438, 0.290196091, 1, 0 }
                            { 0.396078438, 0.290196091, 1, 1 }
                            { 0.396078438, 0.290196091, 1, 1 }
                            { 0.396078438, 0.290196091, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                hasPostRotateOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/WispTrail_Add.ARAM_VFX_Update.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.119999997, 0 }
                }
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Win3_WindSwirl"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win3_WindSwirl"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_WindBlow" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 3.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                emitterName: string = "Trail4"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp_Basic1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.396078438, 0.290196091, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.396078438, 0.290196091, 1, 0 }
                            { 0.396078438, 0.290196091, 1, 1 }
                            { 0.396078438, 0.290196091, 1, 1 }
                            { 0.396078438, 0.290196091, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                uvScrollAlphaMult: flag = false
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                hasPostRotateOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/WispTrail_Add.ARAM_VFX_Update.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.600000024, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/Darius_Skin14_Glow.TFT_Set3.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.400000006, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.5, 0 }
                }
                texAddressModeMult: u8 = 3
                uvScaleMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1.39999998, 0.00999999978 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 3.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                lifetime: option[f32] = {
                    2
                }
                isSingleParticle: flag = true
                emitterName: string = "Trail5"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp_Basic1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.0399938971, 0.11999695, 0.300007641, 0.579995394 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.0399938971, 0.11999695, 0.300007641, 0 }
                            { 0.0399938971, 0.11999695, 0.300007641, 0.579995394 }
                            { 0.0399938971, 0.11999695, 0.300007641, 0.579995394 }
                            { 0.0399938971, 0.11999695, 0.300007641, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.400000006
                                0.600000024
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.349999994
                    erosionFeatherOut: f32 = 0.349999994
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                uvScrollAlphaMult: flag = false
                isUniformScale: flag = true
                texture: string = "ASSETS/Maps/Particles/TFT/Base_ChainWisp.TFT_Set3.dds"
                particleUVScrollRate: embed = IntegratedValueVector2 {
                    constantValue: vec2 = { 0, 0.800000012 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            1
                        }
                        values: list[vec2] = {
                            { 0, 0 }
                            { 0, 1.60000002 }
                            { 0, 0 }
                        }
                    }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 90
                }
                textureMult: string = "ASSETS/Shared/Particles/Darius_Skin14_Glow.TFT_Set3.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.400000006, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.5, 0 }
                }
                texAddressModeMult: u8 = 3
                uvScaleMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1.39999998, 0.00999999978 }
                }
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Lose_WindBlow"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_WindBlow"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_SpiritParade" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 12
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0.600000024
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            12
                        }
                    }
                }
                particleLinger: option[f32] = {
                    12
                }
                emitterName: string = "Trail5"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_SB_SpiritParade.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.690196097, 0.41568628, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.690196097, 0.41568628, 1, 0 }
                            { 0.690196097, 0.41568628, 1, 1 }
                            { 0.690196097, 0.41568628, 1, 1 }
                            { 0.690196097, 0.41568628, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 250
                }
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.5
                    erosionFeatherOut: f32 = 0.5
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 1.25, 1.25 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_Kami_GlowSprites_Large.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.0370000005 }
                }
                uvScale: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 3 }
                }
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Idle_SpiritParade"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_SpiritParade"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_KamiTotem" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "Temp_GroundGlow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 100, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.960006118, 0.400000006, 1, 0.110002287 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 0.960006118, 0.400000006, 1, 0 }
                            { 0.960006118, 0.400000006, 1, 0.110002287 }
                            { 0.960006118, 0.400000006, 1, 0.110002287 }
                            { 0.960006118, 0.400000006, 1, 0 }
                        }
                    }
                }
                pass: i16 = -499
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 300, 150, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/bigglow02.TFT_Set5.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "Decal_BG1"
                importance: u8 = 2
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 10, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 75, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.0117647061, 0.388235301, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.0117647061, 0.388235301, 1, 0 }
                            { 0.0117647061, 0.388235301, 1, 1 }
                            { 0.0117647061, 0.388235301, 1, 1 }
                            { 0.0117647061, 0.388235301, 1, 0 }
                        }
                    }
                }
                pass: i16 = 25
                alphaRef: u8 = 0
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.200000003
                    erosionFeatherOut: f32 = 0.200000003
                    erosionMapName: string = "ASSETS/Maps/Particles/TFT/URF_Finisher_Statue_Dust_Erosion.TFT_Set3.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                miscRenderFlags: u8 = 1
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 100, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 100, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 2, 1.5, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_UnitCombination_Bigglow02.SKINS_Veigar_Skin23.dds"
                textureMult: string = "ASSETS/Shared/Particles/Base_Comet_Impact_Smoke.LittleLegends_10_10.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.200000003 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                }
                particleLinger: option[f32] = {
                    0.800000012
                }
                emitterName: string = "Decal_BG2"
                importance: u8 = 2
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 10, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 75, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.0588235296, 0.952941179, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.0588235296, 0.952941179, 0 }
                            { 1, 0.0588235296, 0.952941179, 1 }
                            { 1, 0.0588235296, 0.952941179, 1 }
                            { 1, 0.0588235296, 0.952941179, 0 }
                        }
                    }
                }
                pass: i16 = 24
                alphaRef: u8 = 0
                miscRenderFlags: u8 = 1
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 100, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 100, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.5, 1, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_UnitCombination_Bigglow02.SKINS_Veigar_Skin23.dds"
                textureMult: string = "ASSETS/Shared/Particles/Base_Comet_Impact_Smoke.LittleLegends_10_10.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLinger: option[f32] = {
                    2
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 5000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 1
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 50
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "brightMotes"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 50, 0 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 50, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 20, 20, 20 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 20, 20, 20 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                scaleEmitOffsetByBoundObjectHeight: f32 = 0.00499999989
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.952941179, 0.411764711, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.952941179, 0.411764711, 1, 0 }
                            { 0.952941179, 0.411764711, 1, 1 }
                            { 0.952941179, 0.411764711, 1, 1 }
                            { 0.952941179, 0.411764711, 1, 0 }
                        }
                    }
                }
                pass: i16 = -6
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -300
                                    300
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 50, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0 }
                            { 1, 1, 1 }
                            { 0.300000012, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Library/TFT_Environment/Morgana_Blackthorn_Petals.dds"
                birthFrameRate: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.20000005
                }
                0x538effa4: flag = true
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "rayglow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.97999543, 0.379995435, 1, 0.420004576 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 0.97999543, 0.379995435, 1, 0 }
                            { 0.97999543, 0.379995435, 1, 0.420004576 }
                            { 0.97999543, 0.379995435, 1, 0.420004576 }
                            { 0.97999543, 0.379995435, 1, 0 }
                        }
                    }
                }
                pass: i16 = 10
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                depthBiasFactors: vec2 = { -1, -10 }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 15, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 15, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 225, 150, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Item_Spectral_Flare.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.20000005
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "Temp_GroundGlow1"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 100, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 2
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.970000744, 0.540001512, 0.300007641 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.970000744, 0.540001512, 0 }
                            { 1, 0.970000744, 0.540001512, 0.300007641 }
                            { 1, 0.970000744, 0.540001512, 0.300007641 }
                            { 1, 0.970000744, 0.540001512, 0 }
                        }
                    }
                }
                pass: i16 = -500
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 50
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 350, 150, 50 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/bigglow02.TFT_Set5.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.75
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.4000001
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2.4000001
                        }
                    }
                }
                particleLinger: option[f32] = {
                    2.4000001
                }
                emitterName: string = "Temp_GroundGlow2"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.949996173, 0.340001523, 1, 0.110002287 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 0.949996173, 0.340001523, 1, 0 }
                            { 0.949996173, 0.340001523, 1, 0.110002287 }
                            { 0.949996173, 0.340001523, 1, 0.110002287 }
                            { 0.949996173, 0.340001523, 1, 0 }
                        }
                    }
                }
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 10
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                }
                                keyValues: list[f32] = {
                                    90
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 250, 150, 50 }
                }
                texture: string = "ASSETS/Shared/Particles/bigglow02.TFT_Set5.dds"
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Idle_KamiTotem"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_KamiTotem"
        soundPersistentDefault: string = "Play_sfx_tft_env_spiritblossom_common_shrine_fire"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_JetStream" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            6
                        }
                    }
                }
                particleLinger: option[f32] = {
                    6
                }
                emitterName: string = "Trail3"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_WindWisp1.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.60999465, 0.749996185, 1, 0.140001521 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.60999465, 0.749996185, 1, 0 }
                            { 0.60999465, 0.749996185, 1, 0.140001521 }
                            { 0.60999465, 0.749996185, 1, 0.140001521 }
                            { 0.60999465, 0.749996185, 1, 0 }
                        }
                    }
                }
                pass: i16 = -500
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.5
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.25, 1, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Base_ChainWisp.TFT_Set3.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.300000012 }
                }
                uvRotation: embed = ValueFloat {
                    constantValue: f32 = 90
                }
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Idle_JetStream"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_JetStream"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Temple" = VfxSystemDefinitionData {
        simpleEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                particleLinger: option[f32] = {
                    10
                }
                emitterName: string = "empty"
                particleColorTexture: string = "ASSETS/Shared/Particles/Black.DDS"
                meshRenderFlags: u8 = 0
                texture: string = "ASSETS/Shared/Particles/Black.DDS"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        visibilityRadius: f32 = 1500
        particleName: string = "TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Temple"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Temple"
        soundPersistentDefault: string = "Play_sfx_tft_env_spiritblossom_yokai_amb_temple"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_Skybox_Spirit_Blossom_C" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Base_A"
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -140, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_Spirit_Blossom_Skybox_Base_A.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = -50
                miscRenderFlags: u8 = 4
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.200000003, 0.200000003, 0.200000003 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Skybox_Yokai_Base_A.TFT_ArenaSkin_SpiritBlossom.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.00800000038, 0 }
                }
                scaleOverride: vec3 = { 18, 18, 18 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "MP_A"
                importance: u8 = 2
                translationOverride: vec3 = { 0, -6000, 0 }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 60, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_Spirit_Blossom_Skybox_MP_A.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = -30
                miscRenderFlags: u8 = 4
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.219999999, 0.200000003, 0.200000003 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Skybox_Yokai_MP_A.TFT_ArenaSkin_SpiritBlossom.dds"
                scaleOverride: vec3 = { 17, 17, 17 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Mountain_A"
                importance: u8 = 2
                translationOverride: vec3 = { 0, -6000, 0 }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 60, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_Spirit_Blossom_Skybox_Mountain_A.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = -35
                miscRenderFlags: u8 = 4
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.219999999, 0.200000003, 0.200000003 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Skybox_Yokai_Mountain_A.TFT_ArenaSkin_SpiritBlossom.dds"
                scaleOverride: vec3 = { 17, 17, 17 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Mountain_B"
                importance: u8 = 2
                translationOverride: vec3 = { 0, -6000, 0 }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 60, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_Spirit_Blossom_Skybox_Mountain_B.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = -40
                miscRenderFlags: u8 = 4
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.219999999, 0.200000003, 0.200000003 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Skybox_Yokai_Mountain_A.TFT_ArenaSkin_SpiritBlossom.dds"
                scaleOverride: vec3 = { 17, 17, 17 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Mist_A"
                importance: u8 = 2
                translationOverride: vec3 = { 0, -6000, 0 }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_Spirit_Blossom_Skybox_Mist_A.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.78039217, 0.78039217, 0.78039217, 0.478431374 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.490196079 }
                }
                pass: i16 = -37
                miscRenderFlags: u8 = 4
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.219999999, 0.200000003, 0.200000003 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Skybox_Yokai_Mist_A.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0199999996, 0 }
                }
                textureMult: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Skybox_Yokai_Mist_B.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0299999993, 0.0399999991 }
                }
                scaleOverride: vec3 = { 17, 17, 17 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Mist_B"
                importance: u8 = 2
                translationOverride: vec3 = { 0, -6000, 0 }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 100, 20, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_Spirit_Blossom_Skybox_Mist_A.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.266666681, 0.929411769, 0.843137264, 0.580392182 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.345098048, 1, 0.858823538, 0.592156887 }
                }
                pass: i16 = -33
                miscRenderFlags: u8 = 4
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.219999999, 0.200000003, 0.200000003 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Skybox_Yokai_Mist_A.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0130000003, 0 }
                }
                textureMult: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Skybox_Yokai_Mist_B.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0399999991, 0.0599999987 }
                }
                scaleOverride: vec3 = { 17, 17, 17 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Moon_A"
                importance: u8 = 2
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_Spirit_Blossom_Skybox_Moon_A.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = -42
                miscRenderFlags: u8 = 4
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.200000003, 0.200000003, 0.200000003 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Skybox_Yokai_Moon_A.TFT_ArenaSkin_SpiritBlossom.dds"
                scaleOverride: vec3 = { 18, 18, 18 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Moon_A_Noise"
                importance: u8 = 2
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_Spirit_Blossom_Skybox_Moon_A.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.179995418, 0.259998471, 1, 0.420004576 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            5
                            10
                        }
                        values: list[vec4] = {
                            { 0.179995418, 0.259998471, 1, 0.197399274 }
                            { 0.11339698, 0.117000304, 1, 0.17640385 }
                            { 0.179995418, 0.00779975578, 0.0500038154, 0.163804024 }
                        }
                    }
                }
                pass: i16 = -41
                miscRenderFlags: u8 = 4
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.200000003, 0.200000003, 0.200000003 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Skybox_Yokai_Mist_B.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0299999993, 0.0299999993 }
                }
                textureMult: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Skybox_Yokai_Moon_A.TFT_ArenaSkin_SpiritBlossom.dds"
                scaleOverride: vec3 = { 18, 18, 18 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Facade_A"
                importance: u8 = 2
                translationOverride: vec3 = { 0, -6000, 0 }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 60, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/TFT_Spirit_Blossom_Skybox_Facade_A.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = 1
                miscRenderFlags: u8 = 4
                isUniformScale: flag = true
                isGroundLayer: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.219999999, 0.200000003, 0.200000003 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/Spirit_Blossom_Skybox_Yokai_Facade_A.TFT_ArenaSkin_SpiritBlossom.dds"
                scaleOverride: vec3 = { 17, 17, 17 }
            }
        }
        visibilityRadius: f32 = 12000
        particleName: string = "TFT_Skybox_Spirit_Blossom_C"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_Skybox_Spirit_Blossom_C"
        flags: u8 = 197
    }
    "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_CloudRing" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.150000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 20
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0.600000024
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            20
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "Trail3"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 950, 0, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 250, 25, 250 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 250, 25, 250 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_CloudWisp.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.25
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.552941203, 0.321568638, 0.737254918, 0.639215708 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.552941203, 0.321568638, 0.737254918, 0 }
                            { 0.552941203, 0.321568638, 0.737254918, 0.639215708 }
                            { 0.552941203, 0.321568638, 0.737254918, 0.639215708 }
                            { 0.552941203, 0.321568638, 0.737254918, 0 }
                        }
                    }
                }
                pass: i16 = -500
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 250
                }
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                birthRotation0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    10
                                    -10
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    10
                                    -10
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.5, 1.25, 1.25 }
                }
                texture: string = "ASSETS/Shared/Particles/Teemo_Skin25_CloudsTrail_02.TFT_Set4.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0370000005, 0 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 0 }
                        }
                    }
                }
                uvScale: embed = ValueVector2 {
                    constantValue: vec2 = { 3, 1 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.150000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 20
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0.600000024
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            20
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "Trail4"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 950, 0, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 250, 250, 250 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 250, 250, 250 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/TFT/Spirit_Blossom/SB_CloudWisp.TFT_ArenaSkin_SpiritBlossom.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.25
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.278431386, 0.400000006, 0.741176486, 0.639215708 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.278431386, 0.400000006, 0.741176486, 0 }
                            { 0.278431386, 0.400000006, 0.741176486, 0.639215708 }
                            { 0.278431386, 0.400000006, 0.741176486, 0.639215708 }
                            { 0.278431386, 0.400000006, 0.741176486, 0 }
                        }
                    }
                }
                pass: i16 = -500
                softParticleParams: pointer = VfxSoftParticleDefinitionData {
                    deltaIn: f32 = 250
                }
                censorModulateValue: vec4 = { 0.300000012, 2, 2, 1 }
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.300000012
                                0.699999988
                                1
                            }
                            values: list[f32] = {
                                1
                                0
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherIn: f32 = 0.25
                    erosionFeatherOut: f32 = 0.25
                    erosionMapName: string = "ASSETS/Shared/Particles/Karma_Skin08_ErosionPack01.SRX_FX.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                disableBackfaceCull: bool = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    10
                                    -10
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    10
                                    -10
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.5, 1.25, 1.25 }
                }
                texture: string = "ASSETS/Maps/Particles/TFT/TFT_KamiClouds.TFT_ArenaSkin_SpiritBlossom.dds"
                numFrames: u16 = 3
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0370000005, 0 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 0 }
                        }
                    }
                }
                texDiv: vec2 = { 1, 3 }
                uvScale: embed = ValueVector2 {
                    constantValue: vec2 = { 3, 1 }
                }
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "TFT_SpiritBlossom_Yokai_Idle_CloudRing"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_CloudRing"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Kami/TFT_SpiritBlossom_Click_Purple" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                lifetime: option[f32] = {
                    8
                }
                isSingleParticle: flag = true
                emitterName: string = "Basic"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.779995441 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.970000744 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 0.713725507, 0.313725501, 1, 0.970000744 }
                            { 0.298039228, 0, 0.666666687, 0 }
                        }
                    }
                }
                pass: i16 = -151
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.800000012
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherOut: f32 = 0.200000003
                    erosionSliceWidth: f32 = 1.70000005
                    erosionMapName: string = "ASSETS/Shared/Particles/Base_Mis_AlphaCircleGradient.TFT_Set5.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 10, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.60000002, 1.39999998, 1.39999998 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Base_Mis_AlphaCircleGradient.TFT_Set5.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    11.5
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "fill"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/DefaultFalloff.DDS"
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.570000768 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.352941185, 0, 0.709803939, 0.909803927 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0.352941185, 0, 0.709803939, 0.909803927 }
                            { 0.352941185, 0, 0.709803939, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 75, 75, 75 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.0500000007
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 1.79999995, 1.79999995, 1.79999995 }
                            { 2, 2, 2 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/Kayle_Base_bigglow02.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0149999997
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLinger: option[f32] = {
                    10.1999998
                }
                lifetime: option[f32] = {
                    0.115000002
                }
                emitterName: string = "Avatar"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.145098045, 0, 0.250980407, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.145098045, 0, 0.250980407, 0 }
                            { 0.145098045, 0, 0.250980407, 1 }
                            { 0.145098045, 0, 0.250980407, 1 }
                            { 0.145098045, 0, 0.250980407, 0 }
                        }
                    }
                }
                pass: i16 = -7
                depthBiasFactors: vec2 = { -1, -4 }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 250, 150, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1.20000005, 0, 0 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Flare-Omnimax.TFT_Set4.DDS"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0149999997
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.449999988
                }
                particleLinger: option[f32] = {
                    10.1999998
                }
                lifetime: option[f32] = {
                    0.115000002
                }
                isSingleParticle: flag = true
                emitterLinger: option[f32] = {
                    10
                }
                emitterName: string = "Avatar1"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.125490203, 0.0117647061, 0.152941182, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -1
                depthBiasFactors: vec2 = { -1, -4 }
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 50, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 1.29999995, 1.10000002, 1.10000002 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Perks_SoulReaper_Sparkle.TFT_Set4.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0149999997
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.449999988
                }
                particleLinger: option[f32] = {
                    10.1999998
                }
                lifetime: option[f32] = {
                    0.115000002
                }
                isSingleParticle: flag = true
                emitterLinger: option[f32] = {
                    10
                }
                emitterName: string = "Avatar2"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 10
                depthBiasFactors: vec2 = { -1, -4 }
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 50, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 1.29999995, 1.10000002, 1.10000002 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Perks_SoulReaper_Sparkle.TFT_Set4.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0149999997
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLinger: option[f32] = {
                    10.1999998
                }
                lifetime: option[f32] = {
                    0.115000002
                }
                emitterName: string = "Avatar3"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.615686297, 0.0705882385, 0.764705896, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0.615686297, 0.0705882385, 0.764705896, 0 }
                            { 0.615686297, 0.0705882385, 0.764705896, 1 }
                            { 0.615686297, 0.0705882385, 0.764705896, 0 }
                        }
                    }
                }
                pass: i16 = -5
                depthBiasFactors: vec2 = { -1, -4 }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 220, 150, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1.20000005, 0, 0 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Flare-Omnimax.TFT_Set4.DDS"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0149999997
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLinger: option[f32] = {
                    10.1999998
                }
                lifetime: option[f32] = {
                    0.115000002
                }
                isSingleParticle: flag = true
                emitterLinger: option[f32] = {
                    10
                }
                emitterName: string = "Avatar4"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 11
                depthBiasFactors: vec2 = { -1, -4 }
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 150, 50, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 1.29999995, 1.29999995, 1.10000002 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Perks_SoulReaper_Sparkle.TFT_Set4.dds"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0399999991
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.150000006
                }
                lifetime: option[f32] = {
                    1.34500003
                }
                isSingleParticle: flag = true
                emitterName: string = "Hit_Distort"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                particleColorTexture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/TFT_Akali_Base_color-heatbell.TFT_Set4.dds"
                blendMode: u8 = 1
                pass: i16 = 5
                distortionDefinition: pointer = VfxDistortionDefinitionData {
                    distortion: f32 = 0.0900000036
                    distortionMode: u8 = 2
                    normalMapTexture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/TFT_Akali_Base_Q_normal.TFT_Set4.dds"
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 90, 90 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 180, 250, 250 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.25, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Lux_Skin07_Q_distort.TFT_Set4.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0149999997
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.10000002
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.3000002
                }
                lifetime: option[f32] = {
                    2.0999999
                }
                isSingleParticle: flag = true
                emitterLinger: option[f32] = {
                    10
                }
                emitterName: string = "SparksBurst"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 1000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1000, 0, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 6, 6, 6 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 60, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 1 }
                        { 0, 0, 1 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 1, 0.388235301, 0.70588237, 1 }
                            { 0.70588237, 0.0117647061, 1, 1 }
                            { 0.235294119, 0, 0.329411775, 0 }
                        }
                    }
                }
                pass: i16 = -3
                miscRenderFlags: u8 = 1
                isDirectionOriented: flag = true
                directionVelocityScale: f32 = 0.0500000007
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 5, 9 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.800000012, 1, 1 }
                            { 0.100000001, 0, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Warwick_Base_Q_Yasuo_skin01_Q_sword.TFT_Set4.dds"
                birthFrameRate: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0149999997
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.10000002
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.200000003
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.3000002
                }
                lifetime: option[f32] = {
                    2.0999999
                }
                isSingleParticle: flag = true
                emitterLinger: option[f32] = {
                    10
                }
                emitterName: string = "SparksBurst1"
                disabled: bool = true
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 2000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2000, 0, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 6, 6, 6 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 60, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 3, 0, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.862745106, 0.737254918, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.862745106, 0.737254918, 1 }
                            { 1, 0.734179139, 0, 1 }
                            { 1, 0, 0, 1 }
                            { 0.330006868, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = -4
                miscRenderFlags: u8 = 1
                isDirectionOriented: flag = true
                directionVelocityScale: f32 = 0.0500000007
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 10, 9 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.800000012, 1, 1 }
                            { 0.100000001, 0, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Warwick_Base_Q_Yasuo_skin01_Q_sword.TFT_Set4.dds"
                birthFrameRate: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        particleName: string = "TFT_SpiritBlossom_Click_Purple"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Kami/TFT_SpiritBlossom_Click_Purple"
    }
    "Maps/Particles/TFT/Spirit_Blossom/Kami/TFT_SpiritBlossom_Click_Blue" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                lifetime: option[f32] = {
                    8
                }
                isSingleParticle: flag = true
                emitterName: string = "Basic"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.779995441 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.970000744 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.25
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 0.192156866, 0.921568632, 1, 0.970000744 }
                            { 0, 0.152941182, 0.666666687, 0 }
                        }
                    }
                }
                pass: i16 = -151
                alphaErosionDefinition: pointer = VfxAlphaErosionDefinitionData {
                    erosionDriveCurve: embed = ValueFloat {
                        dynamics: pointer = VfxAnimatedFloatVariableData {
                            times: list[f32] = {
                                0
                                0.800000012
                            }
                            values: list[f32] = {
                                0
                                1
                            }
                        }
                    }
                    erosionFeatherOut: f32 = 0.200000003
                    erosionSliceWidth: f32 = 1.70000005
                    erosionMapName: string = "ASSETS/Shared/Particles/Base_Mis_AlphaCircleGradient.TFT_Set5.dds"
                    erosionMapChannelMixer: embed = ValueColor {
                        constantValue: vec4 = { 1, 0, 0, 0 }
                    }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 10, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.60000002, 1.39999998, 1.39999998 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Base_Mis_AlphaCircleGradient.TFT_Set5.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLinger: option[f32] = {
                    11.5
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "fill"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Shared/Particles/DefaultFalloff.DDS"
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.570000768 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0, 0.270588249, 0.709803939, 0.909803927 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0.270588249, 0.709803939, 0.909803927 }
                            { 0, 0.270588249, 0.709803939, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 75, 75, 75 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.0500000007
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 1.79999995, 1.79999995, 1.79999995 }
                            { 2, 2, 2 }
                        }
                    }
                }
                scaleBirthScaleByBoundObjectSize: f32 = 0.00499999989
                texture: string = "ASSETS/Shared/Particles/Kayle_Base_bigglow02.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0149999997
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLinger: option[f32] = {
                    10.1999998
                }
                lifetime: option[f32] = {
                    0.115000002
                }
                emitterName: string = "Avatar"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.0196078438, 0.00392156886, 0.250980407, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.0196078438, 0.00392156886, 0.250980407, 0 }
                            { 0.0196078438, 0.00392156886, 0.250980407, 1 }
                            { 0.0196078438, 0.00392156886, 0.250980407, 1 }
                            { 0.0196078438, 0.00392156886, 0.250980407, 0 }
                        }
                    }
                }
                pass: i16 = -7
                depthBiasFactors: vec2 = { -1, -4 }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 250, 150, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1.20000005, 0, 0 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Flare-Omnimax.TFT_Set4.DDS"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0149999997
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.449999988
                }
                particleLinger: option[f32] = {
                    10.1999998
                }
                lifetime: option[f32] = {
                    0.115000002
                }
                isSingleParticle: flag = true
                emitterLinger: option[f32] = {
                    10
                }
                emitterName: string = "Avatar1"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.00784313772, 0.0588235296, 0.152941182, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -1
                depthBiasFactors: vec2 = { -1, -4 }
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 50, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 1.29999995, 1.10000002, 1.10000002 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Perks_SoulReaper_Sparkle.TFT_Set4.dds"
                numFrames: u16 = 4
                paletteDefinition: pointer = VfxPaletteDefinitionData {
                    paletteTexture: string = "ASSETS/Maps/Particles/TFT/TFT_Glb_Gradient.TFT_Set5.dds"
                    paletteSelector: embed = ValueVector3 {
                        constantValue: vec3 = { 6, 0, 0 }
                    }
                    paletteCount: i32 = 16
                }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0149999997
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.449999988
                }
                particleLinger: option[f32] = {
                    10.1999998
                }
                lifetime: option[f32] = {
                    0.115000002
                }
                isSingleParticle: flag = true
                emitterLinger: option[f32] = {
                    10
                }
                emitterName: string = "Avatar2"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 10
                depthBiasFactors: vec2 = { -1, -4 }
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 50, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 1.29999995, 1.10000002, 1.10000002 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Perks_SoulReaper_Sparkle.TFT_Set4.dds"
                numFrames: u16 = 4
                paletteDefinition: pointer = VfxPaletteDefinitionData {
                    paletteTexture: string = "ASSETS/Maps/Particles/TFT/TFT_Glb_Gradient.TFT_Set5.dds"
                    paletteSelector: embed = ValueVector3 {
                        constantValue: vec3 = { 6, 0, 0 }
                    }
                    paletteCount: i32 = 16
                }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0149999997
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLinger: option[f32] = {
                    10.1999998
                }
                lifetime: option[f32] = {
                    0.115000002
                }
                emitterName: string = "Avatar3"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.0627451017, 0.345098048, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0.0627451017, 0.345098048, 1, 0 }
                            { 0.0627451017, 0.345098048, 1, 1 }
                            { 0.0627451017, 0.345098048, 1, 0 }
                        }
                    }
                }
                pass: i16 = -5
                depthBiasFactors: vec2 = { -1, -4 }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 220, 150, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1.20000005, 0, 0 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Flare-Omnimax.TFT_Set4.DDS"
                numFrames: u16 = 4
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0149999997
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLinger: option[f32] = {
                    10.1999998
                }
                lifetime: option[f32] = {
                    0.115000002
                }
                isSingleParticle: flag = true
                emitterLinger: option[f32] = {
                    10
                }
                emitterName: string = "Avatar4"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 11
                depthBiasFactors: vec2 = { -1, -4 }
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 150, 50, 1 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 1.29999995, 1.29999995, 1.10000002 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Perks_SoulReaper_Sparkle.TFT_Set4.dds"
                numFrames: u16 = 4
                paletteDefinition: pointer = VfxPaletteDefinitionData {
                    paletteTexture: string = "ASSETS/Maps/Particles/TFT/TFT_Glb_Gradient.TFT_Set5.dds"
                    paletteSelector: embed = ValueVector3 {
                        constantValue: vec3 = { 6, 0, 0 }
                    }
                    paletteCount: i32 = 16
                }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0399999991
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.150000006
                }
                lifetime: option[f32] = {
                    1.34500003
                }
                isSingleParticle: flag = true
                emitterName: string = "Hit_Distort"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 70, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                particleColorTexture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/TFT_Akali_Base_color-heatbell.TFT_Set4.dds"
                blendMode: u8 = 1
                pass: i16 = 5
                distortionDefinition: pointer = VfxDistortionDefinitionData {
                    distortion: f32 = 0.0900000036
                    distortionMode: u8 = 2
                    normalMapTexture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/TFT_Akali_Base_Q_normal.TFT_Set4.dds"
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 90, 90 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 180, 250, 250 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1.25, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Lux_Skin07_Q_distort.TFT_Set4.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0149999997
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.10000002
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.3000002
                }
                lifetime: option[f32] = {
                    2.0999999
                }
                isSingleParticle: flag = true
                emitterLinger: option[f32] = {
                    10
                }
                emitterName: string = "SparksBurst"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 1000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1000, 0, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 6, 6, 6 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 60, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 1 }
                        { 0, 0, 1 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                            { 0.305882365, 1, 1, 1 }
                            { 0.0941176489, 0.215686277, 1, 1 }
                            { 0, 0.0313725509, 0.329411775, 0 }
                        }
                    }
                }
                pass: i16 = -3
                miscRenderFlags: u8 = 1
                isDirectionOriented: flag = true
                directionVelocityScale: f32 = 0.0500000007
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 5, 9 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.800000012, 1, 1 }
                            { 0.100000001, 0, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Warwick_Base_Q_Yasuo_skin01_Q_sword.TFT_Set4.dds"
                birthFrameRate: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                paletteDefinition: pointer = VfxPaletteDefinitionData {
                    paletteTexture: string = "ASSETS/Maps/Particles/TFT/TFT_Glb_Gradient.TFT_Set5.dds"
                    paletteSelector: embed = ValueVector3 {
                        constantValue: vec3 = { 6, 0, 0 }
                    }
                    paletteCount: i32 = 16
                }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.0149999997
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.10000002
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.200000003
                        }
                    }
                }
                particleLinger: option[f32] = {
                    10.3000002
                }
                lifetime: option[f32] = {
                    2.0999999
                }
                isSingleParticle: flag = true
                emitterLinger: option[f32] = {
                    10
                }
                emitterName: string = "SparksBurst1"
                disabled: bool = true
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 2000, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2000, 0, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 6, 6, 6 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 60, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 3, 0, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.862745106, 0.737254918, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.862745106, 0.737254918, 1 }
                            { 1, 0.734179139, 0, 1 }
                            { 1, 0, 0, 1 }
                            { 0.330006868, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = -4
                miscRenderFlags: u8 = 1
                isDirectionOriented: flag = true
                directionVelocityScale: f32 = 0.0500000007
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 10, 9 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.800000012, 1, 1 }
                            { 0.100000001, 0, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Characters/TFT4_Akali/Skins/Base/Particles/Warwick_Base_Q_Yasuo_skin01_Q_sword.TFT_Set4.dds"
                birthFrameRate: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        particleName: string = "TFT_SpiritBlossom_Click_Blue"
        particlePath: string = "Maps/Particles/TFT/Spirit_Blossom/Kami/TFT_SpiritBlossom_Click_Blue"
    }
    "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/SpiritBlossom_Design_Base" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0xf7e857de = MapLocator {
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Spawn_Green"
                sceneLayer: string = "Locators"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2925.44067, 11.2485962, 2372.40405, 1
                }
                name: string = "GoldMineLocatorAway"
            }
            0x9b9787df = MapLocator {
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Generic_Green"
                sceneLayer: string = "Locators"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1080.87866, 11.2485962, 1732.44397, 1
                }
                name: string = "GoldMineLocator"
            }
            0x4bff90c5 = MapLocator {
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Generic_Green"
                sceneLayer: string = "Locators"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2731.4104, 0, 2911.16626, 1
                }
                name: string = "BenchAwayLocator"
            }
            0x90883f04 = MapLocator {
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Generic_Green"
                sceneLayer: string = "Locators"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1247.84705, 0, 1140.53381, 1
                }
                name: string = "BenchHomeLocator"
            }
            0x4cb64046 = MapLocator {
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Generic_Green"
                sceneLayer: string = "Locators"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3134.06812, 0, 2996.61182, 1
                }
                name: string = "ItemBenchAwayLocator"
            }
            0x1cd3dd02 = MapLocator {
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Generic_Green"
                sceneLayer: string = "Locators"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    840.168335, 0, 1166.90344, 1
                }
                name: string = "ItemBenchLocator"
            }
            0x2f580834 = MapLocator {
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Generic_Green"
                sceneLayer: string = "Locators"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1421.01526, 0, 1458, 1
                }
                name: string = "BoardLocator"
            }
            0x717bb0ac = MapLocator {
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Generic_Green"
                sceneLayer: string = "Locators"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1956.11304, 0, 1628.69995, 1
                }
                name: string = "Camera_Island"
            }
            0xf874b8e7 = MapLocator {
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Generic_Green"
                sceneLayer: string = "Locators"
                transform: mtx44 = {
                    -1, -8.74227766e-08, 0, 0
                    -8.74227766e-08, 1, -8.74227766e-08, 0
                    7.64274186e-15, -8.74227766e-08, -1, 0
                    2067, 0, 2427.01318, 1
                }
                name: string = "Camera_Flipped_Island"
            }
            0xe9d84b9b = MapLocator {
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Generic_Green"
                sceneLayer: string = "Locators"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1088.84741, 0, 1388.43628, 1
                }
                name: string = "PerchLocator"
            }
            0x58f4606b = MapLocator {
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Generic_Green"
                sceneLayer: string = "Locators"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2939.91089, 0, 2718.00928, 1
                }
                name: string = "PerchAwayLocator"
            }
            0xe1404aa4 = MapLocator {
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Generic_Green"
                sceneLayer: string = "Locators"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2000, 0, 2000, 1
                }
                name: string = "BoardCenterLocator"
            }
            0xc723a0b3 = MapCamera {
                0x563a1941: f32 = 3700
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2056.11304, 0, 1700.69995, 1
                }
                name: string = "Camera_TFT_IslandHome_PC"
            }
            0xd0ce0321 = MapCamera {
                0x563a1941: f32 = 3700
                yaw: f32 = 180
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1967, 0, 2355, 1
                }
                name: string = "Camera_TFT_IslandAway_PC"
            }
            0x7fd48cc3 = MapCamera {
                0x6f3e4327: f32 = 1200
                0x563a1941: f32 = 3180
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1956.11304, 0, 1920.69995, 1
                }
                name: string = "Camera_TFT_IslandHome_Mobile"
            }
            0xb9b64b31 = MapCamera {
                0x6f3e4327: f32 = 1200
                0x563a1941: f32 = 3180
                yaw: f32 = 180
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2067, 0, 2135, 1
                }
                name: string = "Camera_TFT_IslandAway_Mobile"
            }
            0x608bfae5 = MapCamera {
                0x563a1941: f32 = 4500
                pitch: f32 = 41
                FieldOfView: f32 = 55
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2056.11304, 0, 1700.69995, 1
                }
                name: string = "Camera_TFT_StoreView"
            }
            0x2e12e907 = MapCamera {
                0x563a1941: f32 = 4500
                pitch: f32 = 89.9000015
                FieldOfView: f32 = 55
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2056.11304, 100, 1700.69995, 1
                }
                name: string = "Camera_TFT_StoreThumb"
            }
        }
        path: string = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/SpiritBlossom_Design_Base"
    }
    "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Periph_Yokai" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0xcdb29ed7 = null
            0x4dca5aa3 = null
            0x2970a7f1 = null
            0xc1e7d55c = null
            0x41f27221 = null
            0x788bb2ae = null
            0xd0875f95 = null
            0xfd9b7a8f = null
            0xd79b35cd = null
            0x5e3674c4 = MapGroup {
                members: list2[string] = {
                    "06df8eaa-562e-4c0c-ba7c-fa33a9dac5f6"
                    "df4a0c8a-9219-4f77-88d3-41d0fbdabab8"
                }
                transform: mtx44 = {
                    1.0521363, -0.17083928, -0.583360195, 0
                    0.332546622, 1.13791943, 0.266530335, 0
                    0.508829713, -0.390435487, 1.03205562, 0
                    778.069458, -491.569275, 957.318298, 1
                }
                name: string = "group9"
            }
            0xaa0f2e76 = null
            0xdba566b4 = MapGroup {
                transform: mtx44 = {
                    0.542688131, 0, -0.83993423, 0
                    0, 1, 0, 0
                    0.83993423, 0, 0.542688131, 0
                    572.23291, -455.262512, 746.796326, 1
                }
                name: string = "group10"
            }
            0x3c6bcd08 = null
            0x83b77a47 = null
            0x06867ec5 = null
            0xf78c8fe3 = MapGroup {
                members: list2[string] = {
                    "6e19e0f7-1797-46eb-95af-d68451cb6483"
                    "6159a317-d7df-4ddd-8994-c14f6832db25"
                    "7b24e594-6e58-4b66-8696-3bed39e558b8"
                    "78b42d8b-9260-4958-af40-7f87302b1a08"
                }
                transform: mtx44 = {
                    0.778818429, -0.0542591847, -0.0766082704, 0
                    0.0821012557, 0.704097569, 0.335971624, 0
                    0.0455221832, -0.341574997, 0.704716444, 0
                    485.002686, -1150.6416, 2727.7417, 1
                }
                name: string = "group11"
            }
            0xfe45835e = null
            0xa147d20a = null
            0xdc9b036b = null
            0xf6ce10e5 = null
            0x81c0f8ec = null
            0x47ae173a = null
            0xf34be254 = null
            0x30d75ac4 = null
            0x3fc87017 = null
            0x4273f09b = null
            0x1ebc9967 = null
            0xbe728a8f = MapGroup {
                members: list2[string] = {
                    "87cf2019-f121-47f5-882b-156789c78d6f"
                    "0e9ad207-324e-4230-91a2-4f6f6191d093"
                    "7479c035-4d1b-4fa1-8702-f88b277904f8"
                    "64270ca7-a0f2-4b1e-9fd6-3776575ae406"
                    "cfa93a15-b0f7-42c9-8bc5-c4cdc9680eb7"
                    "11741d86-c2fb-455c-9178-b02d2cba6736"
                    "7ea61008-4846-435e-8347-0854114fb089"
                    "f8165a3f-5677-44e4-97aa-aff16bb42802"
                    "5c1da686-45c8-45d9-9ccc-864535c10194"
                    "3f122cfb-37d0-411a-8fbf-2db8874ac112"
                    "7941d3ec-fc23-4bea-8239-7d03ee127763"
                }
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    -156.310516, -1018.81561, 553.952759, 1
                }
                name: string = "group12"
            }
            0xfe6e08a1 = null
            0xbdff1898 = null
            0xb04c981a = null
            0x8bf98cea = null
            0xdefb1861 = null
            0x2e5ae85a = null
            0x4c7d201d = null
            0xbd1fc929 = null
            0x843f7ff4 = null
            0x17b368d1 = null
            0x27aa14be = null
            0xe9c21c34 = null
            0x59653e03 = null
            0xf3fbf825 = null
            0x8350b5fd = null
            0x695621ea = null
            0x03bb3ab8 = null
            0x3d235f00 = null
            0xd249546b = null
            0x7d44b594 = null
            0x5a61a565 = null
            0xa1cca266 = null
            0x29cbe9a6 = null
            0x5013d173 = null
            0x2e6426b9 = null
            0x6b8b48ec = null
            0x9539ace0 = null
            0x9eb573c9 = null
            0x69af818f = null
            0xa055a947 = null
            0x095be1b5 = null
            0xaa7ce04a = null
            0xace85a27 = null
            0x89ce623e = null
            0x2eeb10d2 = null
            0xac7db794 = null
            0x2affd246 = null
            0x0545862f = null
            0xf032cf25 = null
            0x42b5c103 = null
            0xc7fbb1fb = null
            0xfd8ec769 = null
            0x68d409e4 = null
            0x4ebd762b = null
            0x9ae8875c = null
            0x307fb1e5 = null
            0xe807759b = null
            0x821e9ff1 = null
            0xe4942277 = null
            0x77761fa1 = null
            0x667798da = null
            0x02a88460 = null
            0x36f957e7 = null
            0xc10bd3e3 = null
            0xc24b16f7 = null
            0x49062cb5 = null
            0xf854c5c3 = null
            0xab1900f4 = null
            0xb2168fd9 = null
            0xec19de79 = null
            0x99444910 = null
        }
        path: string = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Periph_Yokai"
    }
    "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/AnimProps_Yokai" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0xf7d0085a = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "Idle1"
                SkinID: u32 = 1
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.669770241, 0, -0.742569625, 0
                    0, 1, 0, 0
                    0.742569625, 0, 0.669770241, 0
                    1081.33484, 29.0833473, 1087.44592, 1
                }
                name: string = "Spirit_Wisp_Yokai_Standing1"
            }
            0xbd88c9fd = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "Idle1"
                SkinID: u32 = 1
                quality: i32 = 28
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.202263609, 0, -0.979332149, 0
                    0, 1, 0, 0
                    0.979332149, 0, 0.202263609, 0
                    774.374512, 67.0524063, 1361.29199, 1
                }
                name: string = "Spirit_Wisp_Yokai_Standing2"
            }
            0x3bb97f98 = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "LoungeIdle1"
                SkinID: u32 = 1
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.734725237, 0, -0.678365946, 0
                    0, 1, 0, 0
                    0.678365946, 0, 0.734725237, 0
                    1016.96252, 68.5127945, 1128.00317, 1
                }
                name: string = "Spirit_Wisp_Yokai_Lounging1"
            }
            0xb0f6986c = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "SitIdle1"
                SkinID: u32 = 1
                quality: i32 = 16
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.500384688, 0, 0.86580348, 0
                    0, 1, 0, 0
                    -0.86580348, 0, -0.500384688, 0
                    2810.8291, 51.0627403, 3081.95435, 1
                }
                name: string = "Spirit_Wisp_Yokai_Sitting1"
            }
            0x5f08bc2a = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "SitIdle1"
                SkinID: u32 = 1
                quality: i32 = 16
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.991934419, 0, 0.126754403, 0
                    0, 1, 0, 0
                    -0.126754403, 0, -0.991934419, 0
                    2871.76929, 73.8982544, 3078.15186, 1
                }
                name: string = "Spirit_Wisp_Yokai_Sitting2"
            }
            0x67910893 = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Fox"
                0x8e058751: bool = true
                0x74180b10: string = "Idle1"
                isClickable: bool = true
                0xad304db5: string = "Characters/TFT4_Spirit_Fox/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.159330159, 0.0127516948, 0.987143099, 0
                    -0.266230822, 0.962315679, -0.0554020666, 0
                    -0.950649798, -0.271635175, -0.149931058, 0
                    3038.95068, 18.8127117, 1985.94214, 1
                }
                name: string = "Spirit_Fox1"
            }
            0x5eb5112d = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "SitIdle1"
                SkinID: u32 = 1
                quality: i32 = 30
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.407305181, 0, 0.913292408, 0
                    0, 1, 0, 0
                    -0.913292408, 0, -0.407305181, 0
                    3056.69897, 516.990051, 1805.98315, 1
                }
                name: string = "Spirit_Wisp_Yokai_Sitting3"
            }
            0xa1982b30 = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "SitIdle1"
                SkinID: u32 = 1
                quality: i32 = 30
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.705030739, 0, 0.709176779, 0
                    0, 1, 0, 0
                    -0.709176779, 0, -0.705030739, 0
                    3082.95044, 515.945312, 1768.23511, 1
                }
                name: string = "Spirit_Wisp_Yokai_Sitting4"
            }
            0x331fd1d7 = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "Idle1"
                SkinID: u32 = 1
                quality: i32 = 28
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.348136544, 0, 0.937443852, 0
                    0, 1, 0, 0
                    -0.937443852, 0, 0.348136544, 0
                    3092.89697, 0.217163086, 1410.95264, 1
                }
                name: string = "Spirit_Wisp_Yokai_Standing3"
            }
            0x41edd5a5 = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "LoungeIdle1"
                SkinID: u32 = 1
                quality: i32 = 28
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.37084657, 0, 0.928694129, 0
                    0, 1, 0, 0
                    -0.928694129, 0, 0.37084657, 0
                    3058.20996, 4.50682068, 1487.93579, 1
                }
                name: string = "Spirit_Wisp_Yokai_Lounging2"
            }
            0x97838759 = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "Idle1"
                SkinID: u32 = 1
                quality: i32 = 16
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.486392617, 0, 0.873740375, 0
                    0, 1, 0, 0
                    -0.873740375, 0, 0.486392617, 0
                    3157.2666, 1.05001354, 1216.20374, 1
                }
                name: string = "Spirit_Wisp_Yokai_Standing4"
            }
            0x0af7b982 = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "SitIdle1"
                SkinID: u32 = 1
                quality: i32 = 24
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.798586011, 0, -0.601880431, 0
                    0, 1, 0, 0
                    0.601880431, 0, -0.798586011, 0
                    613.298218, 88.2229462, 2575.21216, 1
                }
                name: string = "Spirit_Wisp_Yokai_Sitting5"
            }
            0x806b9cbe = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "Idle1"
                SkinID: u32 = 1
                quality: i32 = 24
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.390072286, 0, -0.920783997, 0
                    0, 1, 0, 0
                    0.920783997, 0, -0.390072286, 0
                    564.597961, 61.9127312, 2531.052, 1
                }
                name: string = "Spirit_Wisp_Yokai_Standing5"
            }
            0x5c54e802 = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "Idle1"
                SkinID: u32 = 1
                quality: i32 = 24
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.150638103, 0, 0.988589227, 0
                    0, 1, 0, 0
                    -0.988589227, 0, -0.150638103, 0
                    3025.6709, 623.068665, 1963.10303, 1
                }
                name: string = "Spirit_Wisp_Yokai_Standing6"
            }
            0x08034ef4 = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "Idle1"
                SkinID: u32 = 1
                quality: i32 = 16
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.201377988, 0, 0.979513824, 0
                    0, 1, 0, 0
                    -0.979513824, 0, -0.201377988, 0
                    3147.92334, 512.352722, 1763.07117, 1
                }
                name: string = "Spirit_Wisp_Yokai_Standing7"
            }
            0x6686bcec = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "SitIdle1"
                SkinID: u32 = 1
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.613528311, 0, -0.789672792, 0
                    0, 1, 0, 0
                    0.789672792, 0, 0.613528311, 0
                    1151.51758, 61.5724182, 1464.10144, 1
                }
                name: string = "Spirit_Wisp_Yokai_Sitting6"
            }
            0xb24f34dc = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "SitIdle1"
                SkinID: u32 = 1
                quality: i32 = 30
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.153208807, 0, -0.98819387, 0
                    0, 1, 0, 0
                    0.98819387, 0, 0.153208807, 0
                    1193.31982, 61.2887955, 1374.84766, 1
                }
                name: string = "Spirit_Wisp_Yokai_Sitting7"
            }
            0x7992fc1d = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "Idle1"
                SkinID: u32 = 1
                quality: i32 = 16
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.999835849, 0, -0.0181207284, 0
                    0, 1, 0, 0
                    0.0181207284, 0, -0.999835849, 0
                    2703.59326, 57.386776, 3198.63184, 1
                }
                name: string = "Spirit_Wisp_Yokai_Standing8"
            }
            0x1320049b = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "LoungeIdle1"
                SkinID: u32 = 1
                quality: i32 = 28
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.327002168, 0, -0.945023477, 0
                    0, 1, 0, 0
                    0.945023477, 0, 0.327002168, 0
                    1160.96118, -4.57763672e-05, 1589.80249, 1
                }
                name: string = "Spirit_Wisp_Yokai_Lounging3"
            }
            0x0042ec2a = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "SitIdle1"
                SkinID: u32 = 1
                quality: i32 = 30
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.571673453, 0, -0.820481181, 0
                    0, 1, 0, 0
                    0.820481181, 0, 0.571673453, 0
                    1044.62732, 61.9833603, 1533.02978, 1
                }
                name: string = "Spirit_Wisp_Yokai_Sitting8"
            }
            0xcc9b136f = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "LoungeIdle1"
                SkinID: u32 = 1
                quality: i32 = 28
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.467786074, 0, -0.883841813, 0
                    0, 1, 0, 0
                    0.883841813, 0, -0.467786074, 0
                    908.512512, -3.3978138, 2532.66064, 1
                }
                name: string = "Spirit_Wisp_Yokai_Lounging4"
            }
            0xfd0c60a4 = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "Idle1"
                SkinID: u32 = 1
                quality: i32 = 24
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.487615764, 0, 0.873058319, 0
                    0, 1, 0, 0
                    -0.873058319, 0, 0.487615764, 0
                    3172.85083, 85.0685425, 1521.95239, 1
                }
                name: string = "Spirit_Wisp_Yokai_Standing9"
            }
            0xbef61021 = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "SitIdle1"
                SkinID: u32 = 1
                quality: i32 = 24
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.910726726, 0, 0.413009375, 0
                    0, 1, 0, 0
                    -0.413009375, 0, 0.910726726, 0
                    2835.16479, 39.1087456, 826.483521, 1
                }
                name: string = "Spirit_Wisp_Yokai_Sitting9"
            }
            0x6ee47b9f = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "Idle1"
                SkinID: u32 = 1
                quality: i32 = 24
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.912873864, 0, 0.408241719, 0
                    0, 1, 0, 0
                    -0.408241719, 0, 0.912873864, 0
                    2901.31616, 63.5152054, 756.493164, 1
                }
                name: string = "Spirit_Wisp_Yokai_Standing10"
            }
            0x30118a88 = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "Idle1"
                SkinID: u32 = 1
                quality: i32 = 28
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.967355788, 0, -0.253422171, 0
                    0, 1, 0, 0
                    0.253422171, 0, 0.967355788, 0
                    1250.32898, 2.9492836, 1007.45496, 1
                }
                name: string = "Spirit_Wisp_Yokai_Standing11"
            }
            0x6c334eb6 = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "LoungeIdle1"
                SkinID: u32 = 1
                quality: i32 = 24
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.875188947, 0, 0.483781636, 0
                    0, 1, 0, 0
                    -0.483781636, 0, 0.875188947, 0
                    2947.0376, 15.2365818, 1020.66504, 1
                }
                name: string = "Spirit_Wisp_Yokai_Lounging5"
            }
            0x315a146f = 0xc0c056f1 {
                PropName: string = "TFT4_Spirit_Wisp"
                0x8e058751: bool = true
                0x74180b10: string = "SitIdle1"
                SkinID: u32 = 1
                quality: i32 = 16
                0xad304db5: string = "Characters/TFT4_Spirit_Wisp/Skins/Skin1"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.0631191432, 0, 0.998005986, 0
                    0, 1, 0, 0
                    -0.998005986, 0, 0.0631191432, 0
                    3267.49976, 231.045563, 1271.58313, 1
                }
                name: string = "Spirit_Wisp_Yokai_Sitting10"
            }
            0x0bb5e026 = 0xc0c056f1 {
                PropName: string = "TFT4_Lantern_Yokai"
                0x8e058751: bool = true
                0x74180b10: string = "Idle1"
                0xad304db5: string = "Characters/TFT4_Lantern_Yokai/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3120.84497, 515.49292, 1293.57104, 1
                }
                name: string = "Lantern_Yokai1"
            }
            0x6b96d21d = 0xc0c056f1 {
                PropName: string = "TFT_Generic_Interaction"
                isClickable: bool = true
                0xad304db5: string = "Characters/TFT_Generic_Interaction/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.580987096, 0, 0.813912749, 0
                    0, 0.75, 0, 0
                    -0.813912749, 0, 0.580987096, 0
                    874.682983, -20, 2829.625, 1
                }
                name: string = "Generic_Interaction3"
            }
            0xd46f0e6e = 0xc0c056f1 {
                PropName: string = "TFT_Generic_Interaction"
                isClickable: bool = true
                0xad304db5: string = "Characters/TFT_Generic_Interaction/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.5, 0, 0, 0
                    0, 0.200000003, 0, 0
                    0, 0, 0.400000006, 0
                    1031.97595, -20, 1141.47803, 1
                }
                name: string = "Generic_Interaction2"
            }
            0xbf0b1fa1 = 0xc0c056f1 {
                PropName: string = "TFT_Generic_Interaction"
                isClickable: bool = true
                0xad304db5: string = "Characters/TFT_Generic_Interaction/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.390455186, 0, -0.312321573, 0
                    0, 0.200000003, 0, 0
                    0.249857262, 0, 0.312364161, 0
                    1122.83899, -15, 1507.33704, 1
                }
                name: string = "Generic_Interaction2_Copy1"
            }
        }
        path: string = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/AnimProps_Yokai"
    }
    "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Lighting_Yokai" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0x6c37f34f = MapPointLight {
                type: link = 0x51710564
                radiusScale: f32 = 1.05975211
                intensityScale: f32 = 0.899999976
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3013.94653, 386.96228, 1205.34351, 1
                }
                name: string = "Freljord_FG_Highlight3"
            }
            0xe5a91d4e = MapPointLight {
                type: link = 0x51710564
                radiusScale: f32 = 0.290216714
                intensityScale: f32 = 0.800000012
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    891.226074, 127.92775, 2824.63599, 1
                }
                name: string = "Freljord_FG_Highlight4"
            }
            0xe2a6ba57 = MapPointLight {
                type: link = 0x7ec5340e
                radiusScale: f32 = 0.150000006
                intensityScale: f32 = 0.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1679.8606, 366.269226, 2131.0835, 1
                }
                name: string = "Light_Point_AmbientSurface_DragonOcean1"
            }
            0x30b21d06 = MapPointLight {
                type: link = 0x7ca5e4f1
                radiusScale: f32 = 0.655633211
                intensityScale: f32 = 1.20000005
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1223.58081, 386, 1396.51379, 1
                }
                name: string = "Freljord_WC_Blue_Fill2"
            }
            0xc60a06a5 = MapPointLight {
                type: link = 0x731a7318
                radiusScale: f32 = 0.999999881
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3025.54102, 327.22464, 990.913086, 1
                }
                name: string = "Blue_Point_Reality2"
            }
            0x462c34bc = MapPointLight {
                type: link = 0x731a7318
                radiusScale: f32 = 0.999999881
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3206.38159, 327.22464, 1121.46436, 1
                }
                name: string = "Blue_Point_Reality3"
            }
            0x94e13b88 = MapPointLight {
                type: link = 0x7ec5340e
                radiusScale: f32 = 0.349999994
                intensityScale: f32 = 2
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3255.729, 596.128784, 647.487305, 1
                }
                name: string = "Light_Point_AmbientSurface_DragonOcean4"
            }
            0xa8d767e9 = MapPointLight {
                type: link = 0x7ec5340e
                radiusScale: f32 = 0.120000005
                intensityScale: f32 = 4
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3456.56104, 100.04068, 637.176575, 1
                }
                name: string = "Light_Point_AmbientSurface_DragonOcean6"
            }
            0x111091ae = MapPointLight {
                type: link = 0x7ec5340e
                radiusScale: f32 = 0.354912877
                intensityScale: f32 = 1.39999998
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3340.87769, 551.232178, 958.989746, 1
                }
                name: string = "Light_Point_AmbientSurface_DragonOcean7"
            }
            0x8fc0191b = MapPointLight {
                type: link = 0x3823df74
                radiusScale: f32 = 1.67145133
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2662.25293, 530.376343, 3180.12939, 1
                }
                name: string = "SoftBlue_Point_Reality2"
            }
            0x97812d0f = MapPointLight {
                type: link = 0x71b5db70
                radiusScale: f32 = 1.82687438
                intensityScale: f32 = 2
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3526.83325, 318.507782, 2003.22412, 1
                }
                name: string = "Teal_Point_Kami1"
            }
            0x113d08d9 = MapPointLight {
                type: link = 0x71b5db70
                radiusScale: f32 = 1.48622072
                intensityScale: f32 = 3
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    537.894043, 391.504303, 3068.68091, 1
                }
                name: string = "Teal_Point_Kami2"
            }
            0xa4f39680 = MapPointLight {
                type: link = 0x7ec5340e
                radiusScale: f32 = 0.259353578
                intensityScale: f32 = 3
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    938.633667, 255.467194, 2358.11841, 1
                }
                name: string = "Light_Point_AmbientSurface_DragonOcean2"
            }
            0x449d21f6 = MapPointLight {
                type: link = 0x7ec5340e
                radiusScale: f32 = 0.250899523
                intensityScale: f32 = 3
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1210.2699, 464.994385, 2903.39282, 1
                }
                name: string = "Light_Point_AmbientSurface_DragonOcean5"
            }
            0x060a7834 = MapPointLight {
                type: link = 0x51710564
                radiusScale: f32 = 1.05999994
                intensityScale: f32 = 1.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    938.139343, 545.591431, 2778.98853, 1
                }
                name: string = "Freljord_FG_Highlight1"
            }
            0x7febb8e5 = MapPointLight {
                type: link = 0xe97fef09
                radiusScale: f32 = 0.629103065
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1555.66809, 481.0495, 2893.66772, 1
                }
                name: string = "SoftYellow_Center_Reality1"
            }
            0x712405f0 = MapPointLight {
                type: link = 0xe97fef09
                radiusScale: f32 = 0.601208329
                intensityScale: f32 = 0.699999988
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2127.24463, 481.0495, 1120.16602, 1
                }
                name: string = "SoftYellow_Center_Reality2"
            }
            0x6a204808 = MapPointLight {
                type: link = 0xe97fef09
                radiusScale: f32 = 0.800000012
                intensityScale: f32 = 1.29999995
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1997.59338, 572.2724, 2011.25549, 1
                }
                name: string = "SoftYellow_Center_Reality3"
            }
            0xddc39686 = MapPointLight {
                type: link = 0x71b5db70
                radiusScale: f32 = 1.91688192
                intensityScale: f32 = 0.699999988
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1555.57861, 533.745239, 2893.59131, 1
                }
                name: string = "Teal_Point_Kami3"
            }
            0x47a696a8 = MapPointLight {
                type: link = 0x71b5db70
                radiusScale: f32 = 1.91688216
                intensityScale: f32 = 0.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2121.6416, 533.745239, 1139.91296, 1
                }
                name: string = "Teal_Point_Kami4"
            }
            0x38e830f5 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 1.37897837
                intensityScale: f32 = 1.29999995
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1188.76233, 296.724915, 1347.25, 1
                }
                name: string = "Red_Point_Reality2"
            }
            0xc755ec17 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 1.37897837
                intensityScale: f32 = 1.29999995
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2822.90625, 296.724915, 2705.17944, 1
                }
                name: string = "Red_Point_Reality1"
            }
            0xae355858 = MapPointLight {
                type: link = 0x7ca5e4f1
                radiusScale: f32 = 0.655633211
                intensityScale: f32 = 1.20000005
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2799.13184, 386, 2657.24976, 1
                }
                name: string = "Freljord_WC_Blue_Fill1"
            }
            0x2496ad07 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 1.0358994
                intensityScale: f32 = 1.29999995
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3090.87109, 296.724915, 1462.39099, 1
                }
                name: string = "Red_Point_Reality4"
            }
            0x60d02368 = MapPointLight {
                type: link = 0x7ca5e4f1
                radiusScale: f32 = 0.451385915
                intensityScale: f32 = 1.20000005
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3125.6897, 278.677307, 1473.29138, 1
                }
                name: string = "Freljord_WC_Blue_Fill4"
            }
            0x4bca7b30 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 1.37897837
                intensityScale: f32 = 1.29999995
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1612.71423, 296.724915, 3174.55566, 1
                }
                name: string = "Red_Point_Reality5"
            }
            0x404a0482 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 0.899999976
                intensityScale: f32 = 3
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3368.03345, 842.163147, 1187.40002, 1
                }
                name: string = "Red_Point_Reality11"
            }
            0xaf481086 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 1.25863087
                intensityScale: f32 = 1.75
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3239.47583, 1061.27466, 2609.73755, 1
                }
                name: string = "Red_Point_Reality12"
            }
            0xd4cda68d = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 1.42281818
                intensityScale: f32 = 1.89999998
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3119.99243, 1235.18542, -65.6856384, 1
                }
                name: string = "Red_Point_Reality14"
            }
            0x7e2640c4 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 1.20000005
                intensityScale: f32 = 1.89999998
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2008.27051, 643.142151, 608.609009, 1
                }
                name: string = "Red_Point_Reality16"
            }
            0x069e8c27 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 1.34576702
                intensityScale: f32 = 3
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3136.78516, 772.232117, 3030.02368, 1
                }
                name: string = "Red_Point_Reality15"
            }
            0x1d96e6df = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 1.42281818
                intensityScale: f32 = 1.89999998
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3478.78564, 1111.02124, 275.522949, 1
                }
                name: string = "Red_Point_Reality17"
            }
            0x153f3407 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 0.905067563
                intensityScale: f32 = 2.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3403.55176, 606.289856, 3735.85132, 1
                }
                name: string = "Red_Point_Reality23"
            }
            0x8849b991 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 1.38867962
                intensityScale: f32 = 2
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1863.67236, -135.633408, 203.04834, 1
                }
                name: string = "Red_Point_Reality24"
            }
            0x438c8809 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 1.34576702
                intensityScale: f32 = 2.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3340.39331, 1255.60962, 3407.71411, 1
                }
                name: string = "Red_Point_Reality26"
            }
            0x9f3ffcc7 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 1.21770632
                intensityScale: f32 = 2.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    87.1083679, -258.875976, 530.85144, 1
                }
                name: string = "Red_Point_Reality27"
            }
            0x8cd35ca2 = MapPointLight {
                type: link = 0x51710564
                radiusScale: f32 = 0.288900465
                intensityScale: f32 = 1.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1079.18005, 119.643188, 1733.71338, 1
                }
                name: string = "Freljord_FG_Highlight2"
            }
            0xc58c34ae = MapGroup {
                members: list2[string] = {
                    "c2de7e9b-dc3c-4202-8457-1a9089fdb03c"
                    "eb34b260-8631-4c55-8dc6-8930c45b25ca"
                    "4f9d0019-a418-42a5-b4a6-e9c6483d796c"
                    "f6f74ac1-05da-4b24-b803-2ee417d0d066"
                    "9d668d9b-2c85-49b2-8f79-3e56d5367d3a"
                }
                transform: mtx44 = {
                    -1, 0, 2.38418579e-07, 0
                    0, 1, 0, 0
                    -2.38418579e-07, 0, -1, 0
                    2858.07397, 0, 2381.34839, 1
                }
                name: string = "group14"
            }
            0xe758e52c = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 0.877329111
                intensityScale: f32 = 2
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    -136.502609, -552.018188, 2168.06836, 1
                }
                name: string = "Red_Point_Reality29"
            }
            0xf7e50e6e = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 1.38143921
                intensityScale: f32 = 2.29999995
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1432.77966, -72.8592148, 443.354797, 1
                }
                name: string = "Red_Point_Reality7"
            }
            0x129dfc17 = MapPointLight {
                type: link = 0x71b5db70
                radiusScale: f32 = 1.82687438
                intensityScale: f32 = 2.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3526.83325, 318.507782, 2003.22412, 1
                }
                name: string = "Teal_Point_Kami6"
            }
            0x3b3f2616 = MapPointLight {
                type: link = 0x731a7318
                radiusScale: f32 = 1.89643729
                intensityScale: f32 = 1.29999995
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3253.24609, 1335.14551, 2025.69055, 1
                }
                name: string = "Blue_Point_Reality1"
            }
            0x3081e811 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 1.82473731
                intensityScale: f32 = 2
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1774.3706, -225.985855, 3887.30908, 1
                }
                name: string = "Red_Point_Reality3"
            }
            0x8d8cb52c = MapPointLight {
                type: link = 0x51710564
                radiusScale: f32 = 0.855708957
                intensityScale: f32 = 2
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    -919.992432, -525.573792, 1475.6947, 1
                }
                name: string = "Freljord_FG_Highlight14"
            }
            0x7ff05f21 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 0.944999993
                intensityScale: f32 = 0.800000012
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    375.794403, -539.016663, 1478.37366, 1
                }
                name: string = "Red_Point_Reality8"
            }
            0x42fd658c = MapPointLight {
                type: link = 0x7ec5340e
                radiusScale: f32 = 0.129999995
                intensityScale: f32 = 3.29999995
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    926.563049, 243.290985, 1339.42798, 1
                }
                name: string = "Light_Point_AmbientSurface_DragonOcean3"
            }
            0x982c06dd = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 0.723940253
                intensityScale: f32 = 2.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    247.758606, -272.530273, 1170.6134, 1
                }
                name: string = "Red_Point_Reality19"
            }
            0x2fa1045a = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 0.723940253
                intensityScale: f32 = 1.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    196.972839, -280.53479, 1936.6062, 1
                }
                name: string = "Red_Point_Reality21"
            }
            0xcbf2d850 = MapPointLight {
                type: link = 0x7d4509b7
                radiusScale: f32 = 0.523348331
                intensityScale: f32 = 2
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    53.5253601, -459.68158, 1588.20337, 1
                }
                name: string = "Red_Point_Reality25"
            }
            0x9132f734 = MapPointLight {
                type: link = 0x51710564
                radiusScale: f32 = 0.288900465
                intensityScale: f32 = 1.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1079.18005, 119.643188, 1892.39307, 1
                }
                name: string = "Freljord_FG_Highlight5"
            }
            0xb54660d9 = MapPointLight {
                type: link = 0x51710564
                radiusScale: f32 = 0.288900465
                intensityScale: f32 = 1.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1079.18005, 119.643188, 2052.60718, 1
                }
                name: string = "Freljord_FG_Highlight6"
            }
            0x6b66c978 = MapPointLight {
                type: link = 0x51710564
                radiusScale: f32 = 0.288900465
                intensityScale: f32 = 1.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1079.18005, 119.643188, 2209.54443, 1
                }
                name: string = "Freljord_FG_Highlight7"
            }
            0x093d6867 = MapPointLight {
                type: link = 0x51710564
                radiusScale: f32 = 0.288900465
                intensityScale: f32 = 1.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1079.18005, 119.643188, 2374.08374, 1
                }
                name: string = "Freljord_FG_Highlight8"
            }
            0xc63865fa = MapPointLight {
                type: link = 0xa9203c0a
                radiusScale: f32 = 0.49999997
                intensityScale: f32 = 1.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    773.791992, 73.6526718, 3133.18506, 1
                }
                name: string = "Purple_Point_Reality1"
            }
            0x88f9c3b2 = MapPointLight {
                type: link = 0xa9203c0a
                radiusScale: f32 = 1.98300004
                intensityScale: f32 = 2
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1004.09302, -144.511993, 3661.45801, 1
                }
                name: string = "Purple_Point_Reality2"
            }
            0xb29d7192 = MapPointLight {
                type: link = 0xa9203c0a
                radiusScale: f32 = 0.639999986
                intensityScale: f32 = 2.5
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    656.533997, 67.5100021, 2314.93604, 1
                }
                name: string = "Purple_Point_Reality3"
            }
            0x7be3be35 = MapPointLight {
                type: link = 0xa9203c0a
                radiusScale: f32 = 0.796999991
                intensityScale: f32 = 1.60000002
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    635.52301, -114.228996, 2450.32007, 1
                }
                name: string = "Purple_Point_Reality4"
            }
            0xd617a1f5 = MapPointLight {
                type: link = 0xa9203c0a
                intensityScale: f32 = 1.29999995
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    646.284973, -128.878006, 1760.72302, 1
                }
                name: string = "Purple_Point_Reality5"
            }
            0x93d57efe = MapPointLight {
                type: link = 0xa9203c0a
                radiusScale: f32 = 0.850000024
                intensityScale: f32 = 1.79999995
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    640.416992, -223.604996, 1542.42395, 1
                }
                name: string = "Purple_Point_Reality6"
            }
            0x899daa2f = MapPointLight {
                type: link = 0xa9203c0a
                radiusScale: f32 = 1.70000005
                intensityScale: f32 = 2
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    868.473999, -134.787994, 715.997986, 1
                }
                name: string = "Purple_Point_Reality7"
            }
        }
        path: string = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Lighting_Yokai"
    }
    "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Skybox_Yokai" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0xc69717fc = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_Skybox_Spirit_Blossom_C"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1975.41028, -11.0056152, 1962.57056, 1
                }
                name: string = "TFT_Skybox_Spirit_Blossom_C1"
            }
            0x10b987ca = null
        }
        path: string = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Skybox_Yokai"
    }
    "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Board_Yokai" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0x0e383c20 = null
            0x78cf0667 = null
            0xc6867adb = null
            0x5412e957 = null
            0x722d8690 = null
            0x2d17869b = null
            0x95bf5baa = null
            0xe46e15d8 = null
            0x176f4b21 = null
            0xb5763f09 = null
            0x596dde6a = null
            0x9e754676 = null
            0x2bd6dcd9 = null
            0x807b25bc = null
            0x052ca829 = null
            0xb6324ab5 = null
            0x340b480b = null
            0x93d12f0e = null
            0x67317315 = null
            0x8e061d99 = null
            0x02ada6a2 = null
            0x51fbfceb = null
            0x977b53dc = null
            0x39485d67 = null
            0x220366cf = null
            0x923bc81a = null
            0x3eb37312 = null
            0xbe759268 = null
            0xe5a978f4 = null
            0x5a7ce1db = null
            0xc5a94dab = null
            0x2dd0b23f = null
            0xbe98bb7e = null
            0x6393da56 = null
            0x4a55ffa7 = null
            0x6b7eed6a = null
            0xd03d302d = null
            0xd993ef4e = null
            0x83c6e4e3 = null
            0x840cca6d = null
            0x1c55ecd8 = null
            0xba05739d = null
            0x2f58d39e = null
            0x3ef41faf = MapGroup {
                members: list2[string] = {
                    "dd8f0408-27d2-4704-870c-04a906fdd443"
                }
                transform: mtx44 = {
                    0.774311841, 0, 0, 0
                    0, 0.958768249, 0, 0
                    0, 0, 0.958768249, 0
                    1826.92578, -184.837677, 413.689636, 1
                }
                name: string = "group1"
            }
            0xaf06376c = MapGroup {
                members: list2[string] = {
                    "92cb8b29-33b3-446a-a21f-0205bdc5297e"
                    "e8916544-b12c-49f5-8260-34eaefe0949e"
                }
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1.27658308, 0, 0
                    0, 0, 1, 0
                    804.921143, -220.406952, 1368.7135, 1
                }
                name: string = "group2"
            }
            0xac5fa1be = MapGroup {
                members: list2[string] = {
                    "e69e2696-29df-4ad4-9556-3eeaddc46b7e"
                    "5f553657-7643-42ae-b257-06a160f31d8a"
                    "e8880047-eed6-4c14-b424-adff2ddec868"
                    "f2c43081-5b58-40f3-a0e7-f70f53421051"
                    "d0ab7abe-438e-4968-9509-774788f81a25"
                }
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    619.175049, -215.269165, 1741.79077, 1
                }
                name: string = "group3"
            }
            0x80528780 = null
            0x0b00a36d = null
            0xf772da3a = MapGroup {
                members: list2[string] = {
                    "1050a4eb-403c-49cd-a95f-6ff6711cfd7c"
                    "ecfd48fd-55a9-4e51-97ca-4be404e40ac7"
                }
                transform: mtx44 = {
                    0.798393607, 0, -0.602135837, 0
                    0, 1, 0, 0
                    0.602135837, 0, 0.798393607, 0
                    3104.26929, 188.474609, 224.284668, 1
                }
                name: string = "group5"
            }
            0x0cb5f06d = null
            0x59596ac2 = null
            0x82e5fe3a = MapGroup {
                members: list2[string] = {
                    "1050a4eb-403c-49cd-a95f-6ff6711cfd7c"
                    "89b0a268-563a-4102-b4eb-e9ad4144a7d4"
                    "475719b0-83f6-4f25-bd89-2a742f2782e0"
                }
                transform: mtx44 = {
                    0.87480396, 0, -0.142081544, 0
                    0, 0.886266947, 0, 0
                    0.142081544, 0, 0.87480396, 0
                    3268.52539, 714.903625, 497.889343, 1
                }
                name: string = "group6"
            }
            0x8b8d8ade = null
            0x9f657cb3 = null
            0x4d85d3b9 = MapGroup {
                members: list2[string] = {
                    "54455aa9-c8c8-4c85-a9eb-5bce6baca9a2"
                    "dccc9ef3-f793-4dc0-a74a-4282a7b8289d"
                }
                transform: mtx44 = {
                    0.438392431, 0, -0.308927447, 0
                    0, 0.536306024, 0, 0
                    0.308927447, 0, 0.438392431, 0
                    675.685242, -726.927917, 2189.07666, 1
                }
                name: string = "group7"
            }
            0x219c52dc = null
            0x5b39555e = null
            0xd2f68de3 = null
            0x848e23f2 = null
            0x5d2a8bae = null
            0x6a320cf9 = MapGroup {
                members: list2[string] = {
                    "30bcd53b-3777-4d5c-80b5-d2e4fef7ac74"
                    "408795fc-2f57-4940-b8fd-dc842f2c190d"
                    "3fea92c4-4d59-4686-b8e7-317d107d7b26"
                    "ca9a87c0-568e-4680-9eec-e910c747329b"
                    "39132c6c-abbb-4ebd-8459-b58080e0571c"
                    "7eeca1c3-cd8b-4919-8a2d-47153ba61573"
                }
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2781.06592, 42.3247833, 3226.43677, 1
                }
                name: string = "group8"
            }
            0xd2932804 = null
            0xcc706d5d = null
            0xb5f404ee = null
            0x684a85da = null
            0x9851ed03 = null
            0xa05fe557 = null
            0x69f479dc = null
            0xc12f003c = null
            0x863d64f6 = MapGroup {
                transform: mtx44 = {
                    0.814427495, 0, 0, 0
                    0, 0.814427495, 0, 0
                    0, 0, 0.814427495, 0
                    427.661774, -620.434692, 1761.23413, 1
                }
                name: string = "group13"
            }
            0xc30afecf = MapGroup {
                members: list2[string] = {
                    "5a7fa259-c83a-40b1-88da-10f488e351ed"
                    "b3099a47-83dd-44b4-bcb4-0773d322ec3b"
                    "5407180c-c8fe-4d95-824f-298922344473"
                    "79f3fd19-4785-4a57-99bc-5ddf58e49703"
                }
                transform: mtx44 = {
                    0.594137609, 0, 0, 0
                    0, 0.594137609, 0, 0
                    0, 0, 0.594137609, 0
                    593.437683, -569.806396, 390.669861, 1
                }
                name: string = "group15"
            }
            0xbba9d4bf = null
            0xb5b5d452 = null
            0x1f0b3d95 = null
            0x6fbd3695 = null
            0x5b1540be = null
            0xd94ca88e = null
            0xcbafe1a0 = null
            0x02600a05 = null
            0x0794b77b = null
            0x087cfe5f = null
            0xf6b554ae = null
            0x1a6f82fb = null
            0x24f81782 = null
            0xf1508fda = null
            0xe44adcf9 = MapGroup {
                members: list2[string] = {
                    "df6b30ba-3b3f-4049-bb42-628531112cdc"
                    "23992c1c-11e0-4e37-b31d-e10dd8da069f"
                    "f6fd26ae-2826-4d9b-9a12-46dea8b775a6"
                    "0b35d9eb-efe4-48f6-80d5-2a2eb7b2a3f1"
                }
                transform: mtx44 = {
                    0.781428695, 0, 0, 0
                    0, 0.781428695, 0, 0
                    0, 0, 0.781428695, 0
                    1247.44849, -365.390076, 702.663086, 1
                }
                name: string = "group16"
            }
            0xe1462044 = null
            0x357ecdc8 = null
            0xd6ca54e6 = null
            0xe050e62c = null
            0xf055c19c = null
            0xa77b2c04 = null
            0x4f9c822b = null
            0x2d0981f0 = null
            0x207d2e3d = null
            0x323f8ec0 = null
            0x162fec0e = null
            0xcbf57697 = null
            0xfc375cff = null
            0x0cbe06a8 = null
            0xc70eb473 = null
            0x5f98b0d6 = null
            0x47f6d228 = null
            0x5a5922c9 = null
            0x07785bf1 = null
            0x0f1dbe35 = null
            0xfab46f7d = null
            0xc2bdbf03 = null
            0x11c96efb = null
            0xc0da6284 = null
            0x1d46d6b9 = null
            0xb2b86de6 = null
            0xb1f3889a = null
            0x9c624acc = null
            0x087d73d4 = null
            0x3b318808 = null
            0x9ada0524 = null
            0xc7b7ae0d = null
            0x089e9b3a = null
            0xe5483f5d = null
            0xb9c9f35b = null
            0xebb82c95 = null
            0xd374cb12 = null
            0x072b25cb = null
            0x5a729dcc = null
            0x98fd6e7c = null
            0x6e9bc005 = null
            0x9ba2720d = null
            0x0a86b2fb = null
            0x8af44a44 = null
            0xcea73072 = null
            0x9e21880b = null
            0xac8a8bca = null
            0x9c6806f9 = null
            0xb626dd17 = null
            0x1ae18aae = null
            0xae9ae169 = null
            0x4b17e241 = null
            0xb775362a = null
            0xc8cb1f5e = null
            0x70290ff1 = null
            0x338cf941 = null
            0x0a4ca15b = null
            0x34c856b5 = null
            0x1201606b = null
            0x2e36e0b5 = null
            0x372d8a3e = null
            0x2274ed36 = null
            0xa1c924c5 = null
            0xffc75089 = null
            0xe51c345f = null
            0xf0423a4a = null
            0x4e6bfa69 = null
            0x6e62f77d = null
            0xe084b07a = null
            0x9285d1b8 = null
            0x58ab66c8 = null
            0x052e0aea = null
            0x80031a32 = null
            0xb75cea84 = null
            0x9e30ef6c = null
            0xe13df111 = null
            0x02113f00 = null
            0x79995af5 = null
            0x71dc78e2 = null
            0x22262cc6 = null
            0xd39e90b2 = null
            0xbd8ae84c = null
            0xb26b6eb0 = null
            0x4bc2cba0 = null
            0xc376b02c = null
            0x88c368ff = null
            0x4671f974 = null
            0xc73f645d = null
            0x38d3f4e8 = null
            0x37eb9235 = null
            0xfcd092d8 = null
            0x0f4712b9 = null
            0x2752f5c8 = null
            0xdbf2ed6f = null
            0xb589567d = null
            0xe6096625 = null
            0x76da20e0 = null
            0x6d8cadfc = null
            0xfa3b1b86 = null
            0xd795c544 = null
            0xf5ea1e18 = null
            0x8eee85ac = null
            0x449db62d = null
            0x20897be2 = null
            0x7ec1f921 = null
            0xa7fc2411 = null
            0xc53808ba = null
            0x5f24e6f7 = null
            0x8653e363 = null
            0x70c9bec8 = null
            0xb21566ed = null
            0xed9f5eaf = null
            0x743f1df5 = null
            0xe8d3425d = null
            0xf193f448 = null
            0x3e976ef0 = null
            0x8ed223c3 = null
            0x3df4b637 = null
            0x68660936 = null
            0xf7c08543 = null
            0x8098adf1 = null
            0x27280d55 = null
            0xf3227521 = null
            0x5690d25c = null
            0xfbde0252 = null
            0xbb4a67c3 = null
            0x49d4d977 = null
            0x960d0896 = null
            0x86d48fdd = null
            0xa235ae3e = null
            0x6eb0c1e0 = null
            0x738bc52a = null
            0xeb18581b = null
            0x1060295f = null
            0x64c1c60f = null
            0x45362a8c = null
            0x1fe218c2 = null
            0x17affced = null
            0x3b8b350f = null
            0xed041563 = null
            0xd5b65b5c = null
            0x9c4132d8 = null
            0x89ead539 = null
            0x0b5e2402 = null
            0x8ed34400 = null
            0xe2e84b98 = null
            0xc3f2a832 = null
            0x0b8c65d5 = null
            0x3fee6bb5 = null
            0x3544156f = null
            0x73327658 = null
            0x16e6fd07 = null
            0xef640384 = null
            0x2039c2e6 = null
            0x6acbac10 = null
            0xcdcac34f = null
            0x70e19c5e = null
            0x32d4cf83 = null
            0x330c5a99 = null
            0x5df30416 = null
            0xefa297e4 = null
            0x2698692a = null
            0xa549ded4 = null
            0x53ce674c = null
            0x2ce2059c = null
            0x4127700c = null
            0x5d8af40b = null
            0x4e2ee450 = null
            0x39b7fc33 = null
            0x405fbc84 = null
            0x124bc4c6 = null
            0xb75a019d = null
            0xfd885c88 = null
            0x5bdac2ac = null
            0x6e66ad03 = null
            0x96d7a58f = null
            0x0346c080 = null
            0x7501d5eb = null
            0x2120dc40 = null
            0x874c104f = null
            0xf4be195b = null
            0x21152485 = null
            0x21818c30 = null
            0xef0b0e08 = null
            0x351efcc7 = null
            0x796861ee = null
            0x761f44ff = null
            0xb114f743 = null
            0xff3d6780 = null
            0x53d30b4c = null
            0x685188d6 = null
            0x121b9046 = null
            0xccb7dc4e = null
            0x9ed8b09a = null
            0x3ea1c723 = null
            0xd400495e = null
            0xfd536fca = null
            0xd4346791 = null
            0x7c7afca7 = null
            0x9f109c67 = null
            0xd9adae35 = null
            0x55d24694 = null
            0x64df5959 = null
            0xc35e600a = null
            0x1822f5a2 = null
            0xf6fd16a2 = null
            0x2c4ecf7b = null
            0x6eed74f1 = null
            0xa65194f1 = null
            0x6e6e218a = null
            0xbf955570 = null
            0xdd2e4649 = null
            0xff847c64 = null
            0xc21eb3e8 = null
            0x8764b512 = null
            0xe4e49aa5 = null
            0xd8ee1234 = null
            0xc742f7ea = null
            0x5f2cf943 = null
            0x7840f81a = null
            0x36fc12fd = null
            0x90e3d741 = null
            0x8bedc291 = null
            0x1537507a = null
            0x0a322d6e = null
            0x79250bb1 = null
            0x2cef90fc = null
            0xfb6733c8 = null
            0x8fce86a4 = null
            0x8a79af71 = null
            0xad2bbae3 = null
            0x033c773f = null
            0x363b2ecc = null
            0xe7c60d29 = null
            0x40037b6d = null
            0x0a9d7d78 = null
            0xb1a5b578 = null
            0x58e5628e = null
            0xecbdae41 = null
            0x5d0a0bcb = null
            0xf2795942 = null
            0x0042e890 = null
            0x5a9240a9 = null
            0xfa407d20 = null
            0x2b053e9b = null
            0x4e72c8eb = null
            0x87a1a677 = null
            0xa0c63029 = null
            0xf2f3c6d5 = null
            0x40a075cf = null
            0x991090a7 = null
            0xc70d5ba6 = null
        }
        path: string = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Board_Yokai"
    }
    "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/VFX_Yokai" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0x6f27e7b3 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Motes"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1976.83545, 828.31958, 1974.11572, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Motes1"
            }
            0xea31a8e0 = MapGroup {
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2860.23169, -3.65238953, 1571.64514, 1
                }
                name: string = "group4"
            }
            0x15c875a6 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_KamiTotem"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    869.697876, 42.3456268, 2857.49609, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Idle_KamiTotem1"
            }
            0x8110df2c = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_DoorGlow"
                transform: mtx44 = {
                    1.76384951e-08, -8.56249187e-08, 0.99999994, 0
                    -0.979434907, -0.201760858, 0, 0
                    0.201760828, -0.979434848, -8.74227766e-08, 0
                    3656.34399, 303.111267, 2046.33997, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Idle_DoorGlow1"
            }
            0xf1225059 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_CloudRing"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1734.90796, 0, 2231.27051, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Idle_CloudRing1"
            }
            0x0cc1add7 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_WindSwirl"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3102.09717, 904.240967, 1612.76453, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Idle_WindSwirl1"
            }
            0xaca1af10 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_WindBlow"
                transform: mtx44 = {
                    0.963629723, 0, 0.267241061, 0
                    0, 1, 0, 0
                    -0.267241061, 0, 0.963629723, 0
                    1329.39343, 358.535644, 616.702881, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Idle_WindBlow1"
            }
            0x40501314 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_WindSwirl"
                transform: mtx44 = {
                    0.235415787, 0, -0.97189492, 0
                    0, 1, 0, 0
                    0.97189492, 0, 0.235415787, 0
                    1716.81079, -33.134613, 3765.06641, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Idle_WindSwirl2"
            }
            0xc49ae323 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_WindBlow"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2803.54688, 1050.31519, -129.901779, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Idle_WindBlow2"
            }
            0x180affb4 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win3_WindBlow"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2871.88916, 668.596191, -38.4513245, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Win3_WindBlow1"
            }
            0x4e45a6c2 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win3_WindBlow"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    982.224487, -335.08252, 1742.55151, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Win3_WindBlow2"
            }
            0x5d386986 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win3_WindSwirl"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3133.6499, 646.899902, 1865.71069, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Win3_WindSwirl1"
            }
            0xcde3819b = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win3_WindSwirl"
                startDisabled: bool = true
                transform: mtx44 = {
                    0.450386524, 0, -0.89283371, 0
                    0, 1, 0, 0
                    0.89283371, 0, 0.450386524, 0
                    1744.8717, -407.460571, 3875.79443, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Win3_WindSwirl2"
            }
            0xb4e0f425 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_SpiritParade"
                startDisabled: bool = true
                transform: mtx44 = {
                    -0.0381714106, 0, -0.999271274, 0
                    0, 1, 0, 0
                    0.999271274, 0, -0.0381714106, 0
                    -1656.15039, -4392.83838, 6215.80518, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Idle_SpiritParade1"
            }
            0xf236aad6 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_CaveMist"
                transform: mtx44 = {
                    -0.720146179, 0, 0.693822861, 0
                    -0.0896459669, 0.991617799, -0.0930470899, 0
                    -0.688007116, -0.129205838, -0.714109778, 0
                    3405.74146, 102.640701, 1262.16321, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Idle_CaveMist1"
            }
            0x901ab34e = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_DoorMist"
                transform: mtx44 = {
                    -8.53084501e-08, -1.91104697e-08, 0.99999994, 0
                    -0.218598291, 0.975814939, 0, 0
                    -0.975814879, -0.218598276, -8.74227766e-08, 0
                    3415.20508, 135.523544, 2023.59558, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Idle_DoorMist1"
            }
            0x920cc674 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_DoorFlash"
                startDisabled: bool = true
                transform: mtx44 = {
                    1.76384951e-08, -8.56249187e-08, 0.99999994, 0
                    -0.979434907, -0.201760858, 0, 0
                    0.201760828, -0.979434848, -8.74227766e-08, 0
                    3656.34399, 303.111267, 2046.33997, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Win_DoorFlash1"
            }
            0x4231049f = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Idle_JetStream"
                transform: mtx44 = {
                    0.976268291, 0, 0.216564581, 0
                    0, 1, 0, 0
                    -0.216564581, 0, 0.976268291, 0
                    2505.43555, -161.070221, 2188.68433, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Idle_JetStream1"
            }
            0x40d8b1a6 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win3_JetStream"
                startDisabled: bool = true
                transform: mtx44 = {
                    0.976268291, 0, 0.216564581, 0
                    0, 1, 0, 0
                    -0.216564581, 0, 0.976268291, 0
                    2505.43555, -161.070221, 2188.68433, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Win3_JetStream1"
            }
            0x587fc61c = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_SpiritGust"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    4267.72314, 1541.81177, 1273.40613, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Win_SpiritGust1"
            }
            0x0b4b6272 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_SpiritGust"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1198.02942, -447.900391, 1301.0304, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Win_SpiritGust2"
            }
            0x8e80be4c = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_KamiTotem"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    874.79834, 73.7866669, 2850.54126, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Win_KamiTotem1"
            }
            0x886a7ddc = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win3_YokaiTotem"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    848.85199, 25.8724365, 2885.18848, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Win3_YokaiTotem1"
            }
            0x7228a10f = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_SpiritGustLarge"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1743.35498, 1421.04297, 314.442535, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Win_SpiritGustLarge1"
            }
            0x97217708 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_DarkWind"
                startDisabled: bool = true
                transform: mtx44 = {
                    -0.683228076, 0, 0.730205417, 0
                    0, 1, 0, 0
                    -0.730205417, 0, -0.683228076, 0
                    2520.6792, 76.6023254, 1308.31262, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Lose_DarkWind1"
            }
            0xdac144a9 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_JetStream"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2494.5166, 0, 1665.10815, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Lose_JetStream1"
            }
            0x5fca25a7 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_JetStream"
                startDisabled: bool = true
                transform: mtx44 = {
                    0.986458898, 0, -0.164008766, 0
                    0, 1, 0, 0
                    0.164008766, 0, 0.986458898, 0
                    3726.9917, 209.586914, 2564.10498, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Lose_JetStream2"
            }
            0xd1ffd5ed = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_WindSwirl"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2964.49268, 480.243683, 1875.12109, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Lose_WindSwirl1"
            }
            0x51fa2851 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_WindBlow"
                startDisabled: bool = true
                transform: mtx44 = {
                    0.896411419, 0, 0.443223, 0
                    0, 1, 0, 0
                    -0.443223, 0, 0.896411419, 0
                    2173.61011, 197.735901, 1109.72583, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Lose_WindBlow1"
            }
            0x83470e9e = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_KamiTotem"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    874.105896, 62.6843262, 2826.13232, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Lose_KamiTotem1"
            }
            0xa6e42399 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Lose_WindBlow"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1099.74951, 183.44397, 2828.71826, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Lose_WindBlow2"
            }
            0xedb71e2e = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_CameraSpiritGust"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2174.75635, 869.223267, -98.2140808, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Win_CameraSpiritGust1"
            }
            0x6fcc963f = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_SpiritBlossom_Yokai_Win_SpiritGustFollowUp"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1248.24951, 667.27655, -669.738892, 1
                }
                name: string = "TFT_SpiritBlossom_Yokai_Win_SpiritGustFollowUp1"
            }
            0x2b5b58ea = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Kami/TFT_SpiritBlossom_Click_Purple"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1096.16235, 99.3491516, 1113.68066, 1
                }
                name: string = "TFT_SpiritBlossom_Click_Purple2"
            }
            0x00f4d65c = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Kami/TFT_SpiritBlossom_Click_Purple"
                0x8d6d21cf: bool = true
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    903.789307, 63.231369, 2797.53833, 1
                }
                name: string = "TFT_SpiritBlossom_Click_Purple1"
            }
            0x68a9598a = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Kami/TFT_SpiritBlossom_Click_Blue"
                startDisabled: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2940.41357, 83.7254639, 1957.729, 1
                }
                name: string = "TFT_SpiritBlossom_Click_Blue1"
            }
        }
        path: string = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/VFX_Yokai"
    }
    "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Art_Shared" = MapPlaceableContainer {
        path: string = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Art_Shared"
    }
    "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/MapBehaviors_Yokai" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0x3693f872 = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Cue_Top4"
                0xb5b54664: list[pointer] = {
                    0x7f3c5086 {
                        0x0262b4a7: string = "Play_sfx_tft_phasetransition_top4_celebration"
                        0xf7cb2205: string = "BoardCenterLocator"
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Fox1"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        animationName: string = "LoungeWin1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging2"
                        animationName: string = "LoungeWin1"
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        animationName: string = "LoungeWin1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging4"
                        animationName: string = "LoungeWin1"
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging5"
                        animationName: string = "LoungeWin1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting1"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting2"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting3"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting4"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting5"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting9"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting10"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing3"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing4"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing5"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing6"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing7"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing8"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing9"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing10"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.25
                    }
                }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2138.64624, 11.1607666, -298.552002, 1
                }
                name: string = "MapBehavior_Top4"
            }
            0xcd307bf6 = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Cue_Victory"
                0xb5b54664: list[pointer] = {
                    0x7f3c5086 {
                        0x0262b4a7: string = "Play_sfx_tft_env_spiritblossom_yokai_round_victory"
                        0xf7cb2205: string = "BoardCenterLocator"
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_DoorFlash1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust2"
                            "TFT_SpiritBlossom_Yokai_Win_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Win_CameraSpiritGust1"
                        }
                        startTime: f32 = 0.100000001
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_DoorFlash1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust2"
                            "TFT_SpiritBlossom_Yokai_Win_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Win_CameraSpiritGust1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 5
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGustFollowUp1"
                        }
                        startTime: f32 = 2
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGustFollowUp1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 7
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Fox1"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging2"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging4"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging5"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting1"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting2"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting3"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting4"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting5"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting9"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting10"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing3"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing4"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing5"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing6"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing7"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing8"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing9"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing10"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.649999976
                    }
                }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2312.98071, 11.1607666, -298.552002, 1
                }
                name: string = "MapBehavior_Victory"
            }
            0xb472d3fd = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Cue_Defeat"
                0xb5b54664: list[pointer] = {
                    0x7f3c5086 {
                        0x0262b4a7: string = "Play_sfx_tft_env_spiritblossom_yokai_round_defeat"
                        0xf7cb2205: string = "BoardCenterLocator"
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Lose_DarkWind1"
                            "TFT_SpiritBlossom_Yokai_Lose_JetStream1"
                            "TFT_SpiritBlossom_Yokai_Lose_JetStream2"
                            "TFT_SpiritBlossom_Yokai_Lose_WindBlow1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindSwirl1"
                        }
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Lose_DarkWind1"
                            "TFT_SpiritBlossom_Yokai_Lose_JetStream1"
                            "TFT_SpiritBlossom_Yokai_Lose_JetStream2"
                            "TFT_SpiritBlossom_Yokai_Lose_WindBlow1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindSwirl1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 5
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Lose_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindBlow2"
                        }
                        startTime: f32 = 0.800000012
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Lose_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindBlow2"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 5
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Idle_KamiTotem1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 0.5
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Idle_KamiTotem1"
                        }
                        startTime: f32 = 5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Fox1"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging2"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging4"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging5"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting1"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting2"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting3"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting4"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting5"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting9"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting10"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing3"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing4"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing5"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing6"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing7"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing8"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing9"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing10"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.600000024
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging2"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.400000006
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging4"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.550000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging5"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting1"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting2"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.400000006
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting3"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting4"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.5
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting5"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.349999994
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.349999994
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting9"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.600000024
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting10"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.25
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.349999994
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing3"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing4"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.25
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing5"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.600000024
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing6"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.5
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing7"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing8"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing9"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.300000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing10"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.300000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.600000024
                    }
                }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2495.90918, 11.1607666, -298.552002, 1
                }
                name: string = "MapBehavior_Defeat"
            }
            0x41f50966 = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Cue_WinStreak1"
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2657.83252, 11.1607666, -298.552002, 1
                }
                name: string = "MapBehavior_WinStreak1"
            }
            0x7895796c = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Cue_WinStreak2"
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2820.17261, 11.1607666, -298.552002, 1
                }
                name: string = "MapBehavior_WinStreak2"
            }
            0x2ebbabcb = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Cue_WinStreak3"
                0xb5b54664: list[pointer] = {
                    0x7f3c5086 {
                        0x0262b4a7: string = "Play_sfx_tft_env_spiritblossom_yokai_round_win3"
                        0xf7cb2205: string = "BoardCenterLocator"
                    }
                    0x7f3c5086 {
                        0x0262b4a7: string = "Play_sfx_tft_env_spiritblossom_yokai_round_victory"
                        0xf7cb2205: string = "BoardCenterLocator"
                    }
                    0x7f3c5086 {
                        0x0262b4a7: string = "Play_sfx_tft_env_spiritblossom_yokai_round_win3_loop"
                        0xf7cb2205: string = "BoardCenterLocator"
                        startTime: f32 = 4
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Idle_WindBlow1"
                            "TFT_SpiritBlossom_Yokai_Idle_WindBlow2"
                            "TFT_SpiritBlossom_Yokai_Idle_WindSwirl1"
                            "TFT_SpiritBlossom_Yokai_Idle_WindSwirl2"
                            "TFT_SpiritBlossom_Yokai_Idle_JetStream1"
                        }
                        0xce294716: bool = false
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_DoorFlash1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust2"
                            "TFT_SpiritBlossom_Yokai_Win_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Win_CameraSpiritGust1"
                        }
                        startTime: f32 = 0.100000001
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win3_JetStream1"
                            "TFT_SpiritBlossom_Yokai_Win3_WindBlow1"
                            "TFT_SpiritBlossom_Yokai_Win3_WindBlow2"
                            "TFT_SpiritBlossom_Yokai_Win3_WindSwirl1"
                            "TFT_SpiritBlossom_Yokai_Win3_WindSwirl2"
                            "TFT_SpiritBlossom_Yokai_Win3_YokaiTotem1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGustLarge1"
                            "TFT_SpiritBlossom_Yokai_Idle_SpiritParade1"
                        }
                        startTime: f32 = 0.25
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGustFollowUp1"
                        }
                        startTime: f32 = 2
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_DoorFlash1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust2"
                            "TFT_SpiritBlossom_Yokai_Win_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Win_CameraSpiritGust1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 5
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGustFollowUp1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 7
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging4"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging5"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Fox1"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting2"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting3"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting9"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing10"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing5"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing6"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting4"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting10"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing7"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting1"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging2"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting5"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing4"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing9"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing8"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing3"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.699999988
                    }
                }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2982.55225, 11.1607666, -298.552002, 1
                }
                name: string = "MapBehavior_WinStreak3"
            }
            0x9e93c78d = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Cue_WinStreakEnd"
                0xb5b54664: list[pointer] = {
                    0x7f3c5086 {
                        0x0262b4a7: string = "Play_sfx_tft_env_spiritblossom_yokai_round_defeat"
                        0xf7cb2205: string = "BoardCenterLocator"
                    }
                    0x7f3c5086 {
                        0x0262b4a7: string = "Play_sfx_tft_env_spiritblossom_yokai_round_defeat_rally"
                        0xf7cb2205: string = "BoardCenterLocator"
                        startTime: f32 = 10
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win3_JetStream1"
                            "TFT_SpiritBlossom_Yokai_Win3_WindBlow1"
                            "TFT_SpiritBlossom_Yokai_Win3_WindBlow2"
                            "TFT_SpiritBlossom_Yokai_Win3_WindSwirl1"
                            "TFT_SpiritBlossom_Yokai_Win3_WindSwirl2"
                            "TFT_SpiritBlossom_Yokai_Win3_YokaiTotem1"
                            "TFT_SpiritBlossom_Yokai_Idle_SpiritParade1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGustLarge1"
                        }
                        0xce294716: bool = false
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Idle_WindBlow1"
                            "TFT_SpiritBlossom_Yokai_Idle_WindBlow2"
                            "TFT_SpiritBlossom_Yokai_Idle_WindSwirl1"
                            "TFT_SpiritBlossom_Yokai_Idle_WindSwirl2"
                            "TFT_SpiritBlossom_Yokai_Idle_JetStream1"
                            "TFT_SpiritBlossom_Yokai_Idle_KamiTotem1"
                        }
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Lose_DarkWind1"
                            "TFT_SpiritBlossom_Yokai_Lose_JetStream1"
                            "TFT_SpiritBlossom_Yokai_Lose_JetStream2"
                            "TFT_SpiritBlossom_Yokai_Lose_WindBlow1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindSwirl1"
                        }
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Idle_KamiTotem1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 0.5
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Lose_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindBlow2"
                        }
                        startTime: f32 = 0.800000012
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Lose_DarkWind1"
                            "TFT_SpiritBlossom_Yokai_Lose_JetStream1"
                            "TFT_SpiritBlossom_Yokai_Lose_JetStream2"
                            "TFT_SpiritBlossom_Yokai_Lose_WindBlow1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindSwirl1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 5
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Lose_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindBlow2"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 5
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Idle_KamiTotem1"
                        }
                        startTime: f32 = 5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting10"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing4"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Fox1"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing9"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing10"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting2"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging5"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting3"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing3"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing7"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing8"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting4"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing6"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging4"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting9"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing5"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging2"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting1"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting5"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting10"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.25
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing4"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.25
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing9"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.300000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing10"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.300000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.349999994
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.349999994
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.349999994
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.400000006
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting2"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.400000006
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging5"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting3"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing3"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing7"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing8"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting4"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.5
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing6"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.5
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging4"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.550000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting9"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.600000024
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing5"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.600000024
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.600000024
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging2"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting1"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting5"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.649999976
                    }
                }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3148.08179, 11.1607666, -298.552002, 1
                }
                name: string = "MapBehavior_WinStreakEnd"
            }
            0x94a81a0f = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Cue_StartCombat"
                0xb5b54664: list[pointer] = {
                    0x7f3c5086 {
                        0x0262b4a7: string = "Play_sfx_tft_phasetransition_fight_start"
                        0xf7cb2205: string = "BoardCenterLocator"
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Idle_JetStream1"
                            "TFT_SpiritBlossom_Yokai_Idle_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Idle_WindBlow1"
                            "TFT_SpiritBlossom_Yokai_Idle_WindBlow2"
                            "TFT_SpiritBlossom_Yokai_Idle_WindSwirl1"
                            "TFT_SpiritBlossom_Yokai_Idle_WindSwirl2"
                        }
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win3_JetStream1"
                            "TFT_SpiritBlossom_Yokai_Win3_WindBlow1"
                            "TFT_SpiritBlossom_Yokai_Win3_WindBlow2"
                            "TFT_SpiritBlossom_Yokai_Win3_WindSwirl1"
                            "TFT_SpiritBlossom_Yokai_Win3_WindSwirl2"
                            "TFT_SpiritBlossom_Yokai_Win3_YokaiTotem1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGustLarge1"
                            "TFT_SpiritBlossom_Yokai_Idle_SpiritParade1"
                        }
                        0xce294716: bool = false
                    }
                }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3646.07471, 11.1607666, -298.552002, 1
                }
                name: string = "MapBehavior_StartCombat"
            }
            0xf2fe56cb = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Cue_3StarUnitDiesAlly"
                0xb5b54664: list[pointer] = {
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Lose_JetStream1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindBlow1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindSwirl1"
                        }
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Lose_JetStream1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindBlow1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindSwirl1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Fox1"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        animationName: string = "LoungeLose1"
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging2"
                        animationName: string = "LoungeLose1"
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        animationName: string = "LoungeLose1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging4"
                        animationName: string = "LoungeLose1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging5"
                        animationName: string = "LoungeLose1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting1"
                        animationName: string = "SitLose1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting2"
                        animationName: string = "SitLose1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting3"
                        animationName: string = "SitLose1"
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting4"
                        animationName: string = "SitLose1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting5"
                        animationName: string = "SitLose1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        animationName: string = "SitLose1"
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        animationName: string = "SitLose1"
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        animationName: string = "SitLose1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting9"
                        animationName: string = "SitLose1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting10"
                        animationName: string = "SitLose1"
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing3"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing4"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing5"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing6"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing7"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing8"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing9"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing10"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.600000024
                    }
                }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3825.13818, 11.1607666, -298.552002, 1
                }
                name: string = "MapBehavior_3StarUnitDiesAlly"
            }
            0x2d83ab16 = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Cue_3StarUnitDiesEnemy"
                0xb5b54664: list[pointer] = {
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_DoorFlash1"
                        }
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_DoorFlash1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Fox1"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        animationName: string = "LoungeWin1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging2"
                        animationName: string = "LoungeWin1"
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        animationName: string = "LoungeWin1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging4"
                        animationName: string = "LoungeWin1"
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging5"
                        animationName: string = "LoungeWin1"
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting1"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting2"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting3"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting4"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting5"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting9"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting10"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing3"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing4"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing5"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing6"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing7"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing8"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing9"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing10"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.300000012
                    }
                }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3992.79834, 11.1607666, -298.552002, 1
                }
                name: string = "MapBehavior_3StarUnitDiesEnemy"
            }
            0x11821343 = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Cue_PlanningPhaseStart"
                0xb5b54664: list[pointer] = {
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        animationName: string = "LoungeIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging2"
                        animationName: string = "LoungeIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        animationName: string = "LoungeIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging4"
                        animationName: string = "LoungeIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging5"
                        animationName: string = "LoungeIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting1"
                        animationName: string = "SitIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting2"
                        animationName: string = "SitIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting3"
                        animationName: string = "SitIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting4"
                        animationName: string = "SitIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting5"
                        animationName: string = "SitIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        animationName: string = "SitIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        animationName: string = "SitIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        animationName: string = "SitIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting9"
                        animationName: string = "SitIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting10"
                        animationName: string = "SitIdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        animationName: string = "IdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        animationName: string = "IdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing3"
                        animationName: string = "IdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing4"
                        animationName: string = "IdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.699999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing5"
                        animationName: string = "IdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing6"
                        animationName: string = "IdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing7"
                        animationName: string = "IdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing8"
                        animationName: string = "IdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing9"
                        animationName: string = "IdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing10"
                        animationName: string = "IdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        animationName: string = "IdleFromLoss"
                        looping: bool = true
                        startTime: f32 = 0.349999994
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.699999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging2"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.600000024
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.550000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging4"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.25
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging5"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting1"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.5
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting2"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.349999994
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting3"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting4"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.25
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting5"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.550000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.349999994
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.300000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting9"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting10"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.699999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.349999994
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing3"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.5
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing4"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.699999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing5"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.550000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing6"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.550000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing7"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.300000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing8"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.550000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing9"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.550000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing10"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.5
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        Key: string = "FadeValue"
                        startTime: f32 = 0.349999994
                    }
                }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    4155.03906, 11.1610003, -298.552002, 1
                }
                name: string = "MapBehavior_PlanningPhaseStart"
            }
            0x4c788429 = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Clickable_Interaction2"
                0xb5b54664: list[pointer] = {
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        animationName: string = "SitWin1"
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        animationName: string = "LoungeWin1"
                        startTime: f32 = 0.100000001
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        animationName: string = "SitWin1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.150000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        animationName: string = "IdleWin1"
                        startTime: f32 = 0.200000003
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        animationName: string = "LoungeWin1"
                        startTime: f32 = 0.300000012
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Click_Purple2"
                        }
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Click_Purple2"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 1.20000005
                    }
                }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    4480.27197, 11.1610003, -298.552002, 1
                }
                name: string = "MapBehavior_Clickable_SpiritWisp"
            }
            0xa3d9eac7 = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Clickable_Interaction1"
                0xb5b54664: list[pointer] = {
                    0xb3a20911 {
                        PropName: string = "Spirit_Fox1"
                        animationName: string = "IdleWin1"
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Click_Blue1"
                        }
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Click_Blue1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 1.20000005
                    }
                }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    4318.94824, 11.1610003, -298.552002, 1
                }
                name: string = "MapBehavior_Clickable_SpiritFox"
            }
            0x99f8e35a = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Clickable_Interaction3"
                0xb5b54664: list[pointer] = {
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_DoorFlash1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust2"
                            "TFT_SpiritBlossom_Yokai_Win_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Win_CameraSpiritGust1"
                            "TFT_SpiritBlossom_Click_Purple1"
                        }
                        startTime: f32 = 0.100000001
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGustFollowUp1"
                        }
                        startTime: f32 = 2
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_DoorFlash1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust2"
                            "TFT_SpiritBlossom_Yokai_Win_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Win_CameraSpiritGust1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGustFollowUp1"
                            "TFT_SpiritBlossom_Click_Purple1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 5
                    }
                }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    4631.89502, 11.1610003, -298.552002, 1
                }
                name: string = "MapBehavior_Clickable_Shrine"
            }
            0x959938a2 = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Cue_LossStreak3"
                0xb5b54664: list[pointer] = {
                    0x7f3c5086 {
                        0x0262b4a7: string = "Play_sfx_tft_env_spiritblossom_yokai_round_defeat"
                        0xf7cb2205: string = "BoardCenterLocator"
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Lose_DarkWind1"
                            "TFT_SpiritBlossom_Yokai_Lose_JetStream1"
                            "TFT_SpiritBlossom_Yokai_Lose_JetStream2"
                            "TFT_SpiritBlossom_Yokai_Lose_WindBlow1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindSwirl1"
                        }
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Idle_KamiTotem1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 0.5
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Lose_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindBlow2"
                        }
                        startTime: f32 = 0.800000012
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Lose_DarkWind1"
                            "TFT_SpiritBlossom_Yokai_Lose_JetStream1"
                            "TFT_SpiritBlossom_Yokai_Lose_JetStream2"
                            "TFT_SpiritBlossom_Yokai_Lose_WindBlow1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindSwirl1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 5
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Lose_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Lose_WindBlow2"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 5
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Idle_KamiTotem1"
                        }
                        startTime: f32 = 5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting10"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing4"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Fox1"
                        animationName: string = "IdleLose1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing9"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing10"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting2"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.400000006
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging5"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting3"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing3"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing7"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing8"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting4"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing6"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging4"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting9"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing5"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging2"
                        animationName: string = "LoungeLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting1"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting5"
                        animationName: string = "SitLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        animationName: string = "IdleLoseLoop"
                        looping: bool = true
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting10"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.25
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing4"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.25
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing9"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.300000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing10"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.300000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.349999994
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.349999994
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.349999994
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.400000006
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting2"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.400000006
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging5"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting3"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing3"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing7"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing8"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.449999988
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting4"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.5
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing6"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.5
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging4"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.550000012
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting9"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.600000024
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing5"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.600000024
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.600000024
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging2"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting1"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting5"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.649999976
                    }
                    0x49da656e {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        Key: string = "FadeValue"
                        value: f32 = 1
                        startTime: f32 = 0.649999976
                    }
                }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3317.36719, 11.1607666, -298.552002, 1
                }
                name: string = "MapBehavior_LossStreak3"
            }
            0x5d659e71 = 0x3c6aaabb {
                0xe5561300: string = "ArenaSkin_Cue_LossStreakEnd"
                0xb5b54664: list[pointer] = {
                    0x7f3c5086 {
                        0x0262b4a7: string = "Play_sfx_tft_env_spiritblossom_yokai_round_victory"
                        0xf7cb2205: string = "BoardCenterLocator"
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_DoorFlash1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust2"
                            "TFT_SpiritBlossom_Yokai_Win_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Win_CameraSpiritGust1"
                        }
                        startTime: f32 = 0.100000001
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGustFollowUp1"
                        }
                        startTime: f32 = 2
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "TFT_SpiritBlossom_Yokai_Win_DoorFlash1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGust2"
                            "TFT_SpiritBlossom_Yokai_Win_KamiTotem1"
                            "TFT_SpiritBlossom_Yokai_Win_CameraSpiritGust1"
                            "TFT_SpiritBlossom_Yokai_Win_SpiritGustFollowUp1"
                        }
                        0xce294716: bool = false
                        startTime: f32 = 5
                    }
                    0xced6ab09 {
                        0x1ee02108: list[string] = {
                            "\"TFT_SpiritBlossom_Yokai_Win_SpiritGustFollowUp1\""
                        }
                        0xce294716: bool = false
                        startTime: f32 = 5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging1"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging4"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging5"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.25
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Fox1"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting2"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting3"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting9"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing2"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing10"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.300000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting6"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing5"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing6"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.349999994
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting4"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting7"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting10"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing7"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.449999988
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting1"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.5
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging2"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Lounging3"
                        animationName: string = "LoungeVictoryLong1"
                        startTime: f32 = 0.550000012
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting5"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Sitting8"
                        animationName: string = "SitVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing1"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing4"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing9"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.600000024
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing8"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing11"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.649999976
                    }
                    0xb3a20911 {
                        PropName: string = "Spirit_Wisp_Yokai_Standing3"
                        animationName: string = "IdleVictoryLong1"
                        startTime: f32 = 0.699999988
                    }
                }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Camera_Yellow"
                sceneLayer: string = "MapBehaviors"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3483.63086, 11.1607666, -298.552002, 1
                }
                name: string = "MapBehavior_LossStreakEnd1"
            }
        }
        path: string = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/MapBehaviors_Yokai"
    }
    "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Audio_Yokai" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0x682e93c7 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Center"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1679.89954, 944.19751, 810.561035, 1
                }
                name: string = "TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Center1"
            }
            0x9b6ccbc1 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Distant"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1332.79394, -66.3015747, 1446.20056, 1
                }
                name: string = "TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Distant1"
            }
            0x2ff61536 = MapParticle {
                system: link = "Maps/Particles/TFT/Spirit_Blossom/Yokai/TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Temple"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3194.42896, 0, 1982.63281, 1
                }
                name: string = "TFT_Audio-Emitter_SpiritBlossom_Yokai_Amb_Temple1"
            }
        }
        path: string = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Audio_Yokai"
    }
    "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/LightingVolume_Yokai" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0x8d37d06a = MapLightingVolume {
                sunColor: vec4 = { 0.301960796, 0.368627459, 0.596078455, 1 }
                sunDirection: vec3 = { 0.25, 0.827000022, 0.300000012 }
                0xd8851203: f32 = 75
                0xba02f116: f32 = 0.100000001
                skyLightColor: vec4 = { 0.400000006, 0.501960814, 0.701960802, 1 }
                horizonColor: vec4 = { 0.494117647, 0.552941203, 0.827450991, 1 }
                groundColor: vec4 = { 0.549019635, 0.372549027, 0.607843161, 1 }
                skyLightScale: f32 = 0.449999988
                lightMapColorScale: f32 = 2
                fogColor: vec4 = { 0.309803933, 0.619607866, 0.721568644, 1 }
                fogAlternateColor: vec4 = { 0.427450985, 0.294117659, 0.694117665, 1 }
                fogStartAndEnd: vec2 = { 500, -1500 }
                transform: mtx44 = {
                    3406.6084, 0, 0, 0
                    0, 5183.96924, 0, 0
                    0, 0, 3702.83521, 0
                    2000, 0, 2000, 1
                }
                name: string = "LightingVolume2"
            }
        }
        path: string = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/LightingVolume_Yokai"
    }
    "Maps/MapGeometry/Map22/SpiritBlossom_Yokai" = mapContainer {
        mapPath: string = "Maps/MapGeometry/Map22/SpiritBlossom_Yokai"
        components: list[pointer] = {
            MapSunProperties {
                sunColor: vec4 = { 0.647058845, 0.666666687, 0.623529434, 1 }
                sunDirection: vec3 = { -0.385433108, 0.828491211, -0.406255662 }
                0xd8851203: f32 = 75
                skyLightColor: vec4 = { 0.70588237, 0.741176486, 0.650980413, 1 }
                horizonColor: vec4 = { 0.274509817, 0.419607848, 0.509803951, 1 }
                groundColor: vec4 = { 0.450980395, 0.568627477, 0.650980413, 1 }
                skyLightScale: f32 = 1
                fogEnabled: bool = false
                fogColor: vec4 = { 0.100007631, 0.059998475, 0.110002287, 1 }
                fogAlternateColor: vec4 = { 0.420004576, 0.379995435, 0.420004576, 1 }
                fogStartAndEnd: vec2 = { -1000, -20000 }
                fogEmissiveRemap: f32 = 1
                useBloom: bool = true
            }
            MapBakeProperties {
                0x22d24a9a: f32 = 1.29999995
                lightGridCharacterFullBrightIntensity: f32 = 0.5
                0x2f3b5471: f32 = 2
                lightGridFileName: string = "ASSETS/Maps/Lightmaps/Maps/MapGeometry/Map22/SpiritBlossom_Yokai/LightGrid.TFT_1023_LightingUpdate.dat"
            }
            MapLightingV2 {
                0xee91017d: f32 = 0.899999976
            }
            MapNavGrid {
                0xf7197db9: string = "ASSETS/Maps/NavGrid/Map22/SpiritBlossom_Yokai_Navgrid.aimesh_ngrid"
            }
        }
        boundsMax: vec2 = { 4000, 4000 }
        chunks: map[hash,link] = {
            0x47e52dc9 = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Art_Shared"
            "SpiritBlossom_Design_Base" = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/SpiritBlossom_Design_Base"
            0x9880572b = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Board_Yokai"
            0xba24e9f4 = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/LightingVolume_Yokai"
            0x385441ac = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Audio_Yokai"
            0x9d349f2c = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Skybox_Yokai"
            0x8edf961e = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/VFX_Yokai"
            0xcb4f1046 = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Lighting_Yokai"
            0x8c7d1e38 = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/Periph_Yokai"
            "MapBehaviors_Yokai" = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/MapBehaviors_Yokai"
            "AnimProps_Yokai" = "Maps/MapGeometry/Map22/Chunks/SpiritBlossom/AnimProps_Yokai"
        }
    }
    0x3823df74 = MapPointLightType {
        lightColor: vec4 = { 0.482352942, 0.745098054, 0.945098042, 1 }
        Impact: i32 = 1
    }
    0x71b5db70 = MapPointLightType {
        lightColor: vec4 = { 0, 0.494117647, 0.56078434, 1 }
        Impact: i32 = 1
    }
    0x731a7318 = MapPointLightType {
        lightColor: vec4 = { 0.286274523, 0.360784322, 0.858823538, 1 }
        specular: bool = false
        Impact: i32 = 1
    }
    0x7d4509b7 = MapPointLightType {
        lightColor: vec4 = { 1, 0, 0.0156862754, 1 }
        castStaticShadows: bool = false
        Impact: i32 = 1
    }
    0xa9203c0a = MapPointLightType {
        lightColor: vec4 = { 0.643137276, 0.160784319, 0.764705896, 1 }
    }
    0xe97fef09 = MapPointLightType {
        lightColor: vec4 = { 0.807843149, 0.721568644, 0.368627459, 1 }
        falloffColor: vec4 = { 0, 0, 0.00392156886, 1 }
        radius: f32 = 1500
        Impact: i32 = 1
    }
    0x51710564 = MapPointLightType {
        lightColor: vec4 = { 0.890196085, 0.552941203, 0.949019611, 1 }
        radius: f32 = 519
        castStaticShadows: bool = false
        Impact: i32 = 1
    }
    0x7ca5e4f1 = MapPointLightType {
        lightColor: vec4 = { 0.105882354, 0.321568638, 0.713725507, 1 }
        radius: f32 = 1096
        castStaticShadows: bool = false
        Impact: i32 = 1
    }
    0x7ec5340e = MapPointLightType {
        lightColor: vec4 = { 0.0509803928, 0.0862745121, 0.0980392173, 1 }
        radius: f32 = 3000
    }
}
