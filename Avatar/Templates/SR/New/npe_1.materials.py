#PROP_text
type: string = "PROP"
version: u32 = 3
linked: list[string] = {}
entries: map[hash,embed] = {
    "Maps/KitPieces/SRX/Materials/Default/Terrain_River_Midlane_Island_D_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_River_Midlane_Island_D_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_River_Midlane_Island_D.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_South_Walls_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_South_Walls_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_base_south_walls_b_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                        blendEnable: bool = true
                        srcColorBlendFactor: u32 = 6
                        srcAlphaBlendFactor: u32 = 6
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Botlane_Island_C_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Botlane_Island_C_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Botlane_Island_C.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_North_RedCamp_Ground_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_North_RedCamp_Ground_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_h.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Midlane_Island_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Midlane_Island_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Midlane_Island_B.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_South_BlueCamp_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_South_BlueCamp_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_South_BlueCamp_Island_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Transition_Start_End"
                value: vec4 = { -500, 1000, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Transition_Speed_Factor"
                value: vec4 = { 3, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "WS_Mask_Location"
                value: vec4 = { 3150, 150, 8560, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "WS_Mask_SmoothStep"
                value: vec4 = { 150, 500, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Alpha_Test_Value"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "USE_WS_MASK"
            }
            StaticMaterialSwitchDef {
                name: string = "DEBUG_VIEW_MASK"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Earth_Island"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_North_Ground_C_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_North_Ground_C_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_i.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_North_Ground_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_North_Ground_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_e.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_North_WolfCamp_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_North_WolfCamp_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_North_WolfCamp_Island_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Transition_Start_End"
                value: vec4 = { -700, 1000, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Transition_Speed_Factor"
                value: vec4 = { 3.5, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "WS_Mask_Location"
                value: vec4 = { 10560, 200, 8029, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "WS_Mask_SmoothStep"
                value: vec4 = { 250, 750, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Alpha_Test_Value"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "USE_WS_MASK"
            }
            StaticMaterialSwitchDef {
                name: string = "DEBUG_VIEW_MASK"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Earth_Island"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_North_Botlane_Periph_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_North_Botlane_Periph_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_North_Botlane_Periph_B.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_RaptorCamp_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_RaptorCamp_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_RaptorCamp_Island_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_BotJungle_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_BotJungle_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_South_BotJungle_Island_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Transition_Start_End"
                value: vec4 = { -900, 800, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Transition_Speed_Factor"
                value: vec4 = { 3.5, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "WS_Mask_Location"
                value: vec4 = { 7957, 150, 2816, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "WS_Mask_SmoothStep"
                value: vec4 = { 300, 700, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Alpha_Test_Value"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "USE_WS_MASK"
            }
            StaticMaterialSwitchDef {
                name: string = "DEBUG_VIEW_MASK"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Earth_Island"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_River_DragonCamp_Ground_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_River_DragonCamp_Ground_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_River_DragonCamp_Ground_A.SRX_EnvArt.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_SHADOWS" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_BotLane_Ground_E_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_BotLane_Ground_E_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Base_BotLane_Ground_E.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_South_Ground_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_South_Ground_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_q.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Toplane_Island_C_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Toplane_Island_C_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Toplane_Island_C.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Toplane_Island_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Toplane_Island_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Toplane_Island_B.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_South_Ground_D_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_South_Ground_D_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_v.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_North_Midlane_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_North_Midlane_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_North_Midlane_Island_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_TopLane_Ground_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_TopLane_Ground_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_North_TopLane_Ground_B.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_River_DragonCamp_Island_C_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_River_DragonCamp_Island_C_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Diffuse_Texture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_River_DragonCamp_Island_B.SRX_EnvArt.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Noise_Texture"
                textureName: string = "ASSETS/Shared/Materials/SRX_Mountain_Noise.dds"
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Height_Start_End"
                value: vec4 = { -375, 750, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Transition_Speed_Factor"
                value: vec4 = { 4, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
            "DISABLE_SHADOWS" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Generic_Island"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_South_Walls_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_South_Walls_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_base_south_walls_c_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                        blendEnable: bool = true
                        srcColorBlendFactor: u32 = 6
                        srcAlphaBlendFactor: u32 = 6
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_North_BlueCamp_Ground_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_North_BlueCamp_Ground_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_North_BlueCamp_Ground_A.SRX_EnvArt.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_River_Midlane_Island_C_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_River_Midlane_Island_C_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_River_Midlane_Island_C.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Botlane_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Botlane_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Botlane_Island_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Alcove_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Alcove_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Alcove_Island_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_BotLane_Ground_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_BotLane_Ground_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_w.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_BotLane_Ground_C_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_BotLane_Ground_C_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_BotLane_Ground_C.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_North_Botlane_Periph_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_North_Botlane_Periph_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_North_Botlane_Periph_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Botlane_Periph_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Botlane_Periph_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Botlane_Periph_B.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_North_Midlane_Island_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_North_Midlane_Island_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_North_Midlane_Island_B.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_North_Alcove_Periph_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_North_Alcove_Periph_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_North_Alcove_Periph_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.899999976, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_North_RedCamp_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_North_RedCamp_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_North_RedCamp_Island_A.SRX_EnvArt.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Noise_Texture"
                textureName: string = "ASSETS/Shared/Materials/SRX_FireTest_B.dds"
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Height_Start_End"
                value: vec4 = { -300, 750, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Transition_Speed_Factor"
                value: vec4 = { 6.5, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Infernal_Island"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_River_DragonCamp_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_River_DragonCamp_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Diffuse_Texture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_River_DragonCamp_Island_A.SRX_EnvArt.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Noise_Texture"
                textureName: string = "ASSETS/Shared/Materials/SRX_Mountain_Noise.dds"
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Height_Start_End"
                value: vec4 = { -375, 750, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Transition_Speed_Factor"
                value: vec4 = { 4, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Generic_Island"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_South_BlueCamp_Island_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_South_BlueCamp_Island_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_South_BlueCamp_Island_B.SRX_EnvArt.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Noise_Texture"
                textureName: string = "ASSETS/Shared/Materials/SRX_FireTest_B.dds"
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Height_Start_End"
                value: vec4 = { -400, 750, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Transition_Speed_Factor"
                value: vec4 = { 5, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Infernal_Island"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_North_BlueCamp_Island_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_North_BlueCamp_Island_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_North_BlueCamp_Island_B.SRX_EnvArt.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Noise_Texture"
                textureName: string = "ASSETS/Shared/Materials/SRX_FireTest_B.dds"
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Height_Start_End"
                value: vec4 = { -300, 750, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Transition_Speed_Factor"
                value: vec4 = { 6.5, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Infernal_Island"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_TopLane_Ground_E_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_TopLane_Ground_E_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_c.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_River_DragonCamp_Island_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_River_DragonCamp_Island_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Diffuse_Texture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_River_DragonCamp_Island_B.SRX_EnvArt.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Noise_Texture"
                textureName: string = "ASSETS/Shared/Materials/SRX_Mountain_Noise.dds"
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Height_Start_End"
                value: vec4 = { -375, 750, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Transition_Speed_Factor"
                value: vec4 = { 4, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Generic_Island"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Toplane_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Toplane_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Toplane_Island_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_South_RedCamp_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_South_RedCamp_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_South_RedCamp_Island_A.SRX_EnvArt.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Noise_Texture"
                textureName: string = "ASSETS/Shared/Materials/SRX_FireTest_B.dds"
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Height_Start_End"
                value: vec4 = { -300, 750, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Transition_Speed_Factor"
                value: vec4 = { 6.5, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Infernal_Island"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Toplane_Periph_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Toplane_Periph_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Toplane_Periph_B.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Toplane_Periph_C_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Toplane_Periph_C_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Toplane_Periph_C.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_South_Ground_C_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_South_Ground_C_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_u.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_North_BlueCamp_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_North_BlueCamp_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_North_BlueCamp_Island_A.SRX_EnvArt.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
            StaticMaterialShaderSamplerDef {
                samplerName: string = "Noise_Texture"
                textureName: string = "ASSETS/Shared/Materials/SRX_Mountain_Noise.dds"
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Transition_Start_End"
                value: vec4 = { -600, 750, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Transition_Speed_Factor"
                value: vec4 = { 3.5, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "WS_Mask_Location"
                value: vec4 = { 11750, 0, 6349, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "WS_Mask_SmoothStep"
                value: vec4 = { 250, 750, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Alpha_Test_Value"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "USE_WS_MASK"
            }
            StaticMaterialSwitchDef {
                name: string = "DEBUG_VIEW_MASK"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Earth_Island"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Alcove_Periph_C_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Alcove_Periph_C_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_south_f1.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
            "DISABLE_SHADOWS" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_North_BotLane_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_North_BotLane_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_North_BotLane_Island_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_River_Midlane_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_River_Midlane_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_River_Midlane_Island_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_North_Alcove_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_North_Alcove_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_North_Alcove_Island_A.SRX_Polish.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_TopLane_Ground_D_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_TopLane_Ground_D_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_b.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_North_TopLane_Periph_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_North_TopLane_Periph_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_North_TopLane_Periph_B.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_North_BotLane_Island_C_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_North_BotLane_Island_C_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_North_BotLane_Island_C.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_MidLane_Ground_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_MidLane_Ground_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_m.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Alcove_Periph_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Alcove_Periph_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Alcove_Periph_B.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_SHADOWS" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Base_South_Platform_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Base_South_Platform_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/pally_platform.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_North_Walls_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_North_Walls_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_base_north_walls_b_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                        blendEnable: bool = true
                        srcColorBlendFactor: u32 = 6
                        srcAlphaBlendFactor: u32 = 6
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_BotLane_Ground_D_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_BotLane_Ground_D_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Base_BotLane_Ground_D.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Alcove_Periph_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Alcove_Periph_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Alcove_Periph_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
            "DISABLE_SHADOWS" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Botlane_Island_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Botlane_Island_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Botlane_Island_B.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Midlane_Island_C_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Midlane_Island_C_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Midlane_Island_C.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Botlane_Island_D_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Botlane_Island_D_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Botlane_Island_D.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_South_WolfCamp_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_South_WolfCamp_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_South_WolfCamp_Island_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Transition_Start_End"
                value: vec4 = { -900, 1000, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Transition_Speed_Factor"
                value: vec4 = { 3, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "WS_Mask_Location"
                value: vec4 = { 4128, 300, 6767, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "WS_Mask_SmoothStep"
                value: vec4 = { 225, 700, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Alpha_Test_Value"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "USE_WS_MASK"
            }
            StaticMaterialSwitchDef {
                name: string = "DEBUG_VIEW_MASK"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Earth_Island"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_River_DragonCamp_Ground_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_River_DragonCamp_Ground_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_River_DragonCamp_Ground_A.SRX_EnvArt.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Base_North_Platform_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Base_North_Platform_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/mage_spawn_pad_b.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_South_RedCamp_Ground_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_South_RedCamp_Ground_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_r.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_North_RaptorCamp_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_North_RaptorCamp_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_North_RaptorCamp_Island_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Alcove_Island_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Alcove_Island_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Alcove_Island_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
            "DISABLE_SHADOWS" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_TopLane_Ground_C_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_TopLane_Ground_C_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_TopLane_Ground_C.SRX_Polish.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_South_Ground_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_South_Ground_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_p.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_TopLane_Ground_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_TopLane_Ground_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_TopLane_Ground_A.SRX_Polish.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_BotLane_Ground_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_BotLane_Ground_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_x.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Toplane_Periph_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_South_Toplane_Periph_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_South_Toplane_Periph_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_North_Ground_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_North_Ground_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_d.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_North_Ground_D_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_North_Ground_D_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_j.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_North_Alcove_Periph_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_North_Alcove_Periph_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_North_Alcove_Periph_B.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.899999976, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_South_BlueCamp_Ground_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_South_BlueCamp_Ground_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_l.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Jungle_River_BaronCamp_Ground_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Jungle_River_BaronCamp_Ground_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/grnd_terrain_g.dds"
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_North_Walls_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_Base_North_Walls_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_base_north_walls_d_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "MASK_FX_IN_MAP_CENTER"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Master"
                        blendEnable: bool = true
                        srcColorBlendFactor: u32 = 6
                        srcAlphaBlendFactor: u32 = 6
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_North_TopJungle_Island_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_North_TopJungle_Island_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Jungle_North_TopJungle_Island_A.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "Transition_Start_End"
                value: vec4 = { -550, 1000, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Transition_Speed_Factor"
                value: vec4 = { 3, 0, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "WS_Mask_Location"
                value: vec4 = { 6990, 250, 12100, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "WS_Mask_SmoothStep"
                value: vec4 = { 250, 750, 0, 0 }
            }
            StaticMaterialShaderParamDef {
                name: string = "Alpha_Test_Value"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        switches: list[embed] = {
            StaticMaterialSwitchDef {
                name: string = "USE_WS_MASK"
            }
            StaticMaterialSwitchDef {
                name: string = "DEBUG_VIEW_MASK"
                on: bool = false
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/SRX_Blend_Earth_Island"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
        childTechniques: list[embed] = {
            StaticMaterialChildTechniqueDef {
                name: string = "env_transition"
                parentName: string = "normal"
                shaderMacros: map[string,string] = {
                    "ENV_TRANSITION" = "1"
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_River_Midlane_Island_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_River_Midlane_Island_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_River_Midlane_Island_B.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/SRX/Materials/Default/Terrain_North_TopLane_Island_E_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/SRX/Materials/Default/Terrain_North_TopLane_Island_E_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/SRX/textures/Terrain_North_TopLane_Island_E.SRX_EnvArt.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_southeast_c4_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_southeast_c4_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_southeast_c3.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
            "DISABLE_SHADOWS" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/lambert3_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/lambert3_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_north_island_i_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/lambert177343_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/lambert177343_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_north_island_j_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/lambert177360_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/lambert177360_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/jungle_north_island_fb.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_north_k_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_north_k_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_north_k.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_east_d11_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_east_d11_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_east_d2.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_east_island_b_Alpha_3dcUV_Atlas_color_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_east_island_b_Alpha_3dcUV_Atlas_color_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_east_island_b_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_west_island_i_Alpha_3dcUV_Atlas_color_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_west_island_i_Alpha_3dcUV_Atlas_color_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_west_island_i_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/_chunk_base_north_platform_Alpha_3dcUV_Atlas_color_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/_chunk_base_north_platform_Alpha_3dcUV_Atlas_color_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_base_north_platform_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_north_l7_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_north_l7_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_north_l.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/base_south_foliage_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/base_south_foliage_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/base_south_foliage.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_south_g_combined2_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_south_g_combined2_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_south_g_combined2.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_west_a4_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_west_a4_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_west_a4.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/base_north_arches_periph4_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/base_north_arches_periph4_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/base_north_arches_periph.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_southeast_d2SG2_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_southeast_d2SG2_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_southeast_d2.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
            "DISABLE_SHADOWS" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/lambert177356_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/lambert177356_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_south_island_i_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_west_c4_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_west_c4_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_west_c4.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_south_e9_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_south_e9_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_south_e1.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_north_island_d_Alpha_3dcUV_Atlas_color_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_north_island_d_Alpha_3dcUV_Atlas_color_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_north_island_d_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_north_island_l_Alpha_3dcUV_Atlas_color_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_north_island_l_Alpha_3dcUV_Atlas_color_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_north_island_l_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/pally_base_side_walls_bot3_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/pally_base_side_walls_bot3_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/pally_base_side_walls_bot1.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/lambert177148_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/lambert177148_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_base_south_west_a.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/_chunk_base_north_shop_Alpha_3dcUV_Atlas_color_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/_chunk_base_north_shop_Alpha_3dcUV_Atlas_color_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_base_north_shop_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_east_island_e_Alpha_3dcUV_Atlas_color_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_east_island_e_Alpha_3dcUV_Atlas_color_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_east_island_e_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_west_d24_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_west_d24_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_west_d3.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/lambert177337_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/lambert177337_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_north_island_g_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_east_island_h_Alpha_3dcUV_Atlas_color2_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_east_island_h_Alpha_3dcUV_Atlas_color2_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_east_island_h_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_north_g_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_north_g_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_north_g.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/south_platform_periph_coll2_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/south_platform_periph_coll2_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/south_platform_periph_coll.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_west_island_h_Alpha_3dcUV_Atlas_color_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_west_island_h_Alpha_3dcUV_Atlas_color_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_west_island_h_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_north_island_e_Alpha_3dcUV_Atlas_color_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_north_island_e_Alpha_3dcUV_Atlas_color_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_north_island_e_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/_chunk_base_north_walls_f_Alpha_3dcUV_Atlas_color_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/_chunk_base_north_walls_f_Alpha_3dcUV_Atlas_color_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_base_north_walls_f_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/base_north_arches_periph2_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/base_north_arches_periph2_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/base_north_arches_periph.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_east_g_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_east_g_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_east_g.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_south_f1_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_south_f1_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_south_f1.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/bk_distant_horizon_a4_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/bk_distant_horizon_a4_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/bk_distant_horizon_a.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/_chunk_base_north_walls_g_Alpha_3dcUV_Atlas_color_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/_chunk_base_north_walls_g_Alpha_3dcUV_Atlas_color_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_base_north_walls_g_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/lambert177299_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/lambert177299_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_south_island_g_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_north_island_k_Alpha_3dcUV_Atlas_color_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/_chunk_jungle_north_island_k_Alpha_3dcUV_Atlas_color_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_north_island_k_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/MSI_trophy_Mat_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/MSI_trophy_Mat_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/FtC_POI_Diff_A.SR_Worlds_MapsMountainConversion.dds"
                addressW: u32 = 1
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/lambert177359_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/lambert177359_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_south_island_d_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/paly_south_base_edge_wall_right_a5_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/paly_south_base_edge_wall_right_a5_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/paly_south_base_edge_wall_right_a1.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_north_j11_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_north_j11_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_north_j1.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_north_base_b4_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_north_base_b4_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_north_base_b.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/_chunk_base_north_walls_d_Alpha_3dcUV_Atlas_color2_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/_chunk_base_north_walls_d_Alpha_3dcUV_Atlas_color2_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_base_north_walls_d_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/pally_platform_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/pally_platform_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/pally_platform.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_east_b1_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_east_b1_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_east_b1.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_south_walls_f8_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_south_walls_f8_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_south_walls_f.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_north_m2_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_north_m2_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_north_m.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/jungle_north_island_fa3_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/jungle_north_island_fa3_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/jungle_north_island_fa.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_north_d13_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_north_d13_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_north_d.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_southeast_eb2_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_southeast_eb2_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_southeast_eb.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
            "DISABLE_SHADOWS" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/lambert177284_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/lambert177284_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_southeast_a1.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
            "DISABLE_SHADOWS" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/lambert177344_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/lambert177344_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_south_island_c_alpha_3dcuv_atlas_color.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Summoners_Rift/Materials/periph_west_e1_Alpha_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Summoners_Rift/Materials/periph_west_e1_Alpha_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/periph_west_e.dds"
                addressU: u32 = 1
                addressV: u32 = 1
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/NPE/Materials/Default/Platform_North_Walls_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/NPE/Materials/Default/Platform_North_Walls_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/NPE/Textures/Platform_North_Walls_A.NPE_MapsMountain.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/NPE/Materials/Default/Flowers_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/NPE/Materials/Default/Flowers_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_west_island_h_alpha_3dcuv_atlas_color.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/NPE/Materials/Default/Platform_South_Ground_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/NPE/Materials/Default/Platform_South_Ground_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/NPE/Textures/Platform_South_Ground_A.NPE_MapsMountain.dds"
                addressW: u32 = 1
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/NPE/Materials/Default/Wall_B_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/NPE/Materials/Default/Wall_B_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_south_island_k_alpha_3dcuv_atlas_color.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/NPE/Materials/Default/Platform_North_Ground_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/NPE/Materials/Default/Platform_North_Ground_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/NPE/Textures/Platform_North_Ground_A.NPE_MapsMountain.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/NPE/Materials/Default/Trees_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/NPE/Materials/Default/Trees_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_west_island_i_alpha_3dcuv_atlas_color.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/NPE/Materials/Default/Wall_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/NPE/Materials/Default/Wall_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/_chunk_jungle_south_island_j_alpha_3dcuv_atlas_color.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/NPE/Materials/Default/Platform_South_Walls_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/NPE/Materials/Default/Platform_South_Walls_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/NPE/Textures/Platform_South_Walls_A.NPE_MapsMountain.dds"
                addressW: u32 = 1
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/KitPieces/NPE/Materials/Default/Platform_North_Ivy_A_MAT" = StaticMaterialDef {
        name: string = "Maps/KitPieces/NPE/Materials/Default/Platform_North_Ivy_A_MAT"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Summoners_Rift/textures/base_north_arches_periph.dds"
                addressW: u32 = 1
            }
        }
        paramValues: list[embed] = {
            StaticMaterialShaderParamDef {
                name: string = "AlphaTestValue"
                value: vec4 = { 0.300000012, 0, 0, 0 }
            }
        }
        shaderMacros: map[string,string] = {
            "NO_BAKED_LIGHTING" = "1"
            "DISABLE_DEPTH_FOG" = "1"
            "PREMULTIPLIED_ALPHA" = "1"
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat_AlphaTest"
                        blendEnable: bool = true
                        dstColorBlendFactor: u32 = 7
                        dstAlphaBlendFactor: u32 = 7
                    }
                }
            }
        }
    }
    "Maps/KitPieces/Prototype/Materials/GroundMat_inst" = StaticMaterialDef {
        name: string = "Maps/KitPieces/Prototype/Materials/GroundMat_inst"
        type: u32 = 0
        defaultTechnique: string = "normal"
        samplerValues: list[embed] = {
            StaticMaterialShaderSamplerDef {
                samplerName: string = "DiffuseTexture"
                textureName: string = "ASSETS/Maps/KitPieces/Prototype/textures/TMP_GroundMat.dds"
                addressW: u32 = 1
            }
        }
        techniques: list[embed] = {
            StaticMaterialTechniqueDef {
                name: string = "normal"
                passes: list[embed] = {
                    StaticMaterialPassDef {
                        shader: link = "Shaders/Environment/DefaultEnv_Flat"
                    }
                }
            }
        }
    }
    "Maps/Particles/SR/SRU_Chaos_platform_waterfall_hair_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.449999988
                }
                emitterName: string = "Waterfall_plane1"
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_magehair_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 50, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_01.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.800000012 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.300000012 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.449999988
                }
                emitterName: string = "WhiteFalls1"
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[vec3] = {
                                { 10, 0, 0 }
                                { 30, 0, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_magehair_02.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.800000012 }
                            { 1, 1, 1, 0.800000012 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 20
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 50, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.800000012 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.300000012 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.449999988
                }
                emitterName: string = "SideFoam"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_magehair_edge_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 50, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfalll_SideFoam_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.699999988 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_waterfall_SideFoam_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.600000024 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                emitterName: string = "TopEdgeHightlight"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_magehair_highlight_01.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 30
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 50, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfalll_Highlight_Small_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                textureMult: string = "ASSETS/Shared/Particles/SRU_WaterFall_Small_Highlight_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.300000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -1.5 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_Chaos_platform_waterfall_hair_01"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_platform_waterfall_hair_01"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRU_Chaos_Shopkeeper_WeaponSparkle" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.800000012
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.699999988
                                    0.709999979
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    0
                                    1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.800000012
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.10000002
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                emitterName: string = "whitesparks"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_magebase_shopkeeper_sword.scb"
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                particleColorTexture: string = "ASSETS/Shared/Particles/color-hold.TFT_Set5.dds"
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.701960802 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                colorLookUpScales: vec2 = { 1, 0.400000006 }
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    90
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    90
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 45, 0, 45 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 45, 0, 45 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 14, 14, 14 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.10000002
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 14, 14, 14 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.200000003, 0.200000003, 0.200000003 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_Shopkeeper_weaponRack_sparkle.dds"
            }
        }
        particleName: string = "SRU_Chaos_Shopkeeper_WeaponSparkle"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_WeaponSparkle"
        flags: u8 = 132
    }
    "Maps/Particles/SR/Audio-Emitter_SRU_NorthShopExhaust" = VfxSystemDefinitionData {
        simpleEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                particleLinger: option[f32] = {
                    10
                }
                emitterName: string = "empty"
                particleColorTexture: string = "ASSETS/Shared/Particles/Black.DDS"
                meshRenderFlags: u8 = 0
                texture: string = "ASSETS/Shared/Particles/Black.DDS"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        particleName: string = "Audio-Emitter_SRU_NorthShopExhaust"
        particlePath: string = "Maps/Particles/SR/Audio-Emitter_SRU_NorthShopExhaust"
        soundPersistentDefault: string = "Play_sfx_Env_Map11_Emitter_northshopkeeper_exhaust"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRU_River_WaterCaustics_04" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emitterName: string = "WaterCausticx"
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 0, 25 }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 1 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 120, 1, 120 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 120, 1, 120 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 41
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/SRU_river_watercaustics_01.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -8000
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -235, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 2 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_River_WaterCaustics_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, -0.100000001 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_River_WaterCaustics_01_Mult.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0799999982, -0.180000007 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1.5
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.0799999982, -0.180000007 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_River_WaterCaustics_04"
        particlePath: string = "Maps/Particles/SR/SRU_River_WaterCaustics_04"
    }
    "Maps/Particles/SR/SRU_River_Shore_South_1" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.5
                }
                emitterName: string = "Shore_01"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_river_shore_south_1.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -8000
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_River_Shore_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0500000007, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_RiverEdging_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.400000006 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                emitterName: string = "Shore_02"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_river_shore_south_1.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -8000
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_River_Shore_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0500000007, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_RiverEdging_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.200000003 }
                }
            }
        }
        visibilityRadius: f32 = 150
        particleName: string = "SRU_River_Shore_South_1"
        particlePath: string = "Maps/Particles/SR/SRU_River_Shore_South_1"
    }
    "Maps/Particles/SR/SRU_Chaos_flowerGlow_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "SoftGlow"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 10, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 10, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.560800016 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 100, 100, 100 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_FlowerGlow_soft_01.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 9
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.200000003
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            9
                        }
                    }
                }
                particleLinger: option[f32] = {
                    19
                }
                emitterName: string = "motes"
                drag: embed = ValueVector3 {
                    constantValue: vec3 = { -1, -1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { -0, -0, 0 }
                            { -1, -1, 0 }
                        }
                    }
                }
                acceleration: embed = ValueVector3 {
                    constantValue: vec3 = { -1, 1, -1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { -0, 0, -0 }
                            { -4, 1, -20 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -10, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 25, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 25, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.517601013 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 25, 25 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_chaos_FlowerGlow_01.dds"
                numFrames: u16 = 2
                texDiv: vec2 = { 2, 1 }
            }
        }
        particleName: string = "SRU_Chaos_flowerGlow_01"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_flowerGlow_01"
    }
    "Maps/Particles/SR/SRU_River_WaterCaustics_03" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emitterName: string = "WaterCausticx"
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 70, 0, 15 }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 1 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 120, 1, 120 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 120, 1, 120 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 41
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/SRU_river_watercaustics_01.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -9000
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -60, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 2 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_River_WaterCaustics_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, -0.100000001 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_River_WaterCaustics_01_Mult.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0799999982, -0.180000007 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1.5
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.0799999982, -0.180000007 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_River_WaterCaustics_03"
        particlePath: string = "Maps/Particles/SR/SRU_River_WaterCaustics_03"
    }
    "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_runeTimer_top" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 320
                }
                isSingleParticle: flag = true
                emitterName: string = "runeTimeGlow"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_chaos_inhibitor_respawn_base.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.90196085 }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRUAP_Chaos_Inhibitor_RuneCountdown_glow.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00167999999, 0 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 7
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            7
                        }
                    }
                }
                emitterName: string = "pulseTimer"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_chaos_inhibitor_respawn_base.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000072 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.800000072 }
                        }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            0.699999988
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0, 1, -0 }
                            { 1, 1, 1, 0.298038989 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0.298038989 }
                            { 0, 0, 1, -0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRUAP_Chaos_Inhibitor_RuneCountdown.dds"
            }
        }
        particleName: string = "SRUAP_Chaos_Inhibitor_runeTimer_top"
        particlePath: string = "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_runeTimer_top"
        flags: u8 = 133
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0xaa3a888f
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Order_Inhibitor_RuneCountdown_glow.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x37d25f93
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Order_Inhibitor_RuneCountdown.dds"
            }
        }
    }
    "Maps/Particles/SR/SRU_Chaos_Shopkeeper_smoke" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 12
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    0.810000002
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    0
                                    1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            12
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.79999995
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.79999995
                        }
                    }
                }
                emitterName: string = "Smoke"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 90, -40, 90 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 90, -40, 90 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 2.0999999, 1, 2.0999999 }
                }
                birthAcceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 120, 10 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.600000024
                                    0.610000014
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    0
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 10, 120, 10 }
                        }
                    }
                }
                velocity: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 1 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 5, 0, 5 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 5, 0, 5 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 10, 1, 10 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.333332986, 0.290196002, 0.235293999, 0.600000024 }
                            { 0.380391985, 0.380391985, 0.380391985, 0.247105002 }
                            { 0.674510002, 0.647059023, 0.600000024, 0.145098001 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 10, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 30, 30 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 90, 30, 30 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 30, 30 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 30, 30 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.75, 1.75, 1.75 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 0.525000036, 0.525000036, 0.525000036 }
                            { 0.699999988, 0.699999988, 0.699999988 }
                            { 1.05000007, 1.05000007, 1.05000007 }
                            { 1.39999998, 1.39999998, 1.39999998 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_shopkeeper_smoke.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.400000006 }
                }
            }
        }
        particleName: string = "SRU_Chaos_Shopkeeper_smoke"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_smoke"
    }
    "Maps/Particles/SR/SRU_Chaos_BaseDoor_GlowChild" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                emitterName: string = "GlowChild"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_basedoor_glowchild.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 5
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Glow.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.300000012, -0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.300000012, -0.5 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_Chaos_BaseDoor_GlowChild"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_BaseDoor_GlowChild"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x8ced37d7
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Glow.dds"
            }
        }
    }
    "Maps/Particles/SR/SRU_NJungle_wisps" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 6
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.200000003
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    15
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldDragDefinitions: list[embed] = {
                        VfxFieldDragDefinitionData {
                            position: embed = ValueVector3 {
                                constantValue: vec3 = { 0, 500, 0 }
                            }
                            radius: embed = ValueFloat {
                                constantValue: f32 = 1000
                            }
                            strength: embed = ValueFloat {
                                constantValue: f32 = 0.300000012
                            }
                        }
                    }
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            position: embed = ValueVector3 {
                                constantValue: vec3 = { 0, 1, 0 }
                            }
                            radius: embed = ValueFloat {
                                constantValue: f32 = 2000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 4
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 5
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "Wisps"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 1, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        50
                                        500
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        50
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 1, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.298039228 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 20, 20 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 20, 20 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0.300000012 }
                            { 1, 1, 1 }
                            { 0.300000012, 0.300000012, 0.300000012 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_NJungle_Wisps.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        particleName: string = "SRU_NJungle_wisps"
        particlePath: string = "Maps/Particles/SR/SRU_NJungle_wisps"
    }
    "Maps/Particles/SR/SRU_Chaos_Shopkeeper_weaponSparkle_goldCoins" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.899999976
                                    0.901000023
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.200000003
                                    0.200000003
                                    1.29999995
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    0.899999976
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                emitterName: string = "whitesparks"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 15, 15, 1 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 15, 15, 1 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                particleColorTexture: string = "ASSETS/Shared/Particles/color-hold.TFT_Set5.dds"
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.980392218, 1, 0.600000024, 1 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.992156982, 1, 0.686275005, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.992156982, 1, 0.686275005, 0 }
                            { 0.992156982, 1, 0.686275005, 0.800000012 }
                            { 0.992156982, 1, 0.686275005, 0.128639996 }
                            { 0.992156982, 1, 0.686275005, 0 }
                        }
                    }
                }
                colorLookUpScales: vec2 = { 1, 0.400000006 }
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    90
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    90
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 90 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 90, 0, 90 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 35, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.600000024
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.600000024
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.600000024
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 35, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                            { 0.200000003, 0.200000003, 0.200000003 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_Shopkeeper_weaponRack_sparkle.dds"
            }
        }
        particleName: string = "SRU_Chaos_Shopkeeper_weaponSparkle_goldCoins"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_weaponSparkle_goldCoins"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRUAP_Order_Inhibitor_Rubble_dust" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                emitterName: string = "sparkles1"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -1.5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.899999976
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    0.200000003
                                    0.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -1.5, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 0, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                drag: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0, -0.875, 0 }
                            { 0, -2.20000005, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 30, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 30, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 75, 0, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.525489986, 1, 0.843137026, 0.738003016 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.525489986, 1, 0.843137026, 0 }
                            { 0.525489986, 1, 0.843137026, 0.516602099 }
                            { 0.525489986, 1, 0.843137026, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 45, 45, 45 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.400000006
                                    0.800000012
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 45, 45, 45 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_brightSparks_teal.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.39999998
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            4
                        }
                    }
                }
                particleLinger: option[f32] = {
                    14
                }
                emitterName: string = "pitGlow"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 35, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 35, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 15, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 15, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -100, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 3, 3, 3 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -30
                                        30
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -30
                                        30
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -10
                                        10
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 3, 3, 3 }
                            }
                        }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.258823991, 1, 0.811765015, 0.738003016 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.25
                            0.349999994
                            0.5
                            0.75
                            1
                        }
                        values: list[vec4] = {
                            { 0.258823991, 1, 0.811765015, -0 }
                            { 0.258823991, 1, 0.811765015, 0.387451559 }
                            { 0.258823991, 1, 0.811765015, 0.571952343 }
                            { 0.258823991, 1, 0.811765015, 0.53505218 }
                            { 0.258823991, 1, 0.811765015, 0.369001508 }
                            { 0.258823991, 1, 0.811765015, 0.202950835 }
                            { 0.258823991, 1, 0.811765015, 0 }
                        }
                    }
                }
                pass: i16 = -100
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { -90, 45, 90 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -90, 45, 90 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { -10, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -10
                                    10
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -10, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 150, 150, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    0.899999976
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    0.899999976
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 150, 150, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { -0, -0, 0 }
                            { 0.949999988, 0.975000024, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRUAP_ChaosTurret1_ambientGlow.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.400000006
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.600000024
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            6
                        }
                    }
                }
                particleLinger: option[f32] = {
                    16
                }
                emitterName: string = "DustCloud"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    5
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 50, 1 }
                        }
                    }
                }
                velocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.449999988
                            1
                        }
                        values: list[vec3] = {
                            { -0, 0, 0 }
                            { -0, 0, -0 }
                            { -0, 0, -0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 30, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    0.400000006
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 30, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -200, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 75, 75, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 75, 75, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.301960796, 0.517647088, 0.615686297, 0.800000072 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 0.301960796, 0.517647088, 0.615686297, 0.800000072 }
                        }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0500000007
                            0.550000012
                            0.699999988
                            0.850000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0.400000006 }
                            { 1, 1, 1, 0.125 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -15
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 240, 240, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.5
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 240, 240, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.649999976
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 1 }
                            { 0.5, 0.5, 1 }
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_OrderTurret1_Rubble_dustCloud.dds"
                textureMult: string = "ASSETS/Shared/Particles/SRU_dustCloud_mult.dds"
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRUAP_Order_Inhibitor_Rubble_dust"
        particlePath: string = "Maps/Particles/SR/SRUAP_Order_Inhibitor_Rubble_dust"
        flags: u8 = 135
    }
    "Maps/Particles/SR/SRU_Chaos_Shopkeeper_bladeglow_front" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                emitterName: string = "whitesparks"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0.699999988
                                    -1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 0, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 40, 0, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 15, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -0.5
                                        -1.5
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 15, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = -40
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                emissionMeshScale: f32 = 0.600000024
                particleColorTexture: string = "ASSETS/Shared/Particles/color-hold.TFT_Set5.dds"
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000072 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.179995 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.699999988
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.179995 }
                            { 1, 1, 1, 0.143996 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 10
                disableBackfaceCull: bool = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 50 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    0.899999976
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    0.899999976
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    0.899999976
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 50 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 0.5, 0.5, 0.5 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_Shopkeeper_Blade_Glow.dds"
            }
        }
        particleName: string = "SRU_Chaos_Shopkeeper_bladeglow_front"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_bladeglow_front"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRU_Peref_OrderSide_SouthFog_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.0799999982
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 7.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    2.5
                                    3
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            7.5
                        }
                    }
                }
                emitterName: string = "GlowRocks_BearRock"
                importance: u8 = 0
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_peref_orderside_southfog_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.161228001
                            0.296544999
                            0.714971006
                            0.881958008
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.733031988 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0.710407019 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRU_Peref_OrderSide_SouthFog_01.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.0799999982 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 0.0799999982 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Peref_OrderSide_SouthFog_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.0900000036 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_Peref_OrderSide_SouthFog_01"
        particlePath: string = "Maps/Particles/SR/SRU_Peref_OrderSide_SouthFog_01"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRU_RaptorNest_Magic_Glow_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.150000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 8
                }
                emitterName: string = "GlowBot1"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_raptornest_glow_02.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                texture: string = "ASSETS/Shared/Particles/SRU_RaptorNest_Glow_1.dds"
            }
        }
        visibilityRadius: f32 = 150
        particleName: string = "SRU_RaptorNest_Magic_Glow_01"
        particlePath: string = "Maps/Particles/SR/SRU_RaptorNest_Magic_Glow_01"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRU_SJungle_ButterFlies_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.0500000007
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.0500000007
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 34
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.200000003
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            34
                        }
                    }
                }
                childParticleSetDefinition: embed = VfxChildParticleSetDefinitionData {
                    childrenIdentifiers: list[embed] = {
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_Sjungle_ButterFlyGlow_01"
                        }
                    }
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldAttractionDefinitions: list[embed] = {
                        VfxFieldAttractionDefinitionData {
                            position: embed = ValueVector3 {
                                constantValue: vec3 = { 50, 50, 50 }
                            }
                            radius: embed = ValueFloat {
                                constantValue: f32 = 2200
                            }
                            acceleration: embed = ValueFloat {
                                constantValue: f32 = 259
                            }
                        }
                    }
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 1350
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 2.5
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 500
                            }
                            axisFraction: vec3 = { 0, 1, 0 }
                        }
                    }
                }
                emitterName: string = "Butterfly_Anim1"
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 10, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2.5
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -25
                                    25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 10, 1 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 100, 0.600000024 }
                }
                acceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 4, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.200000003
                            0.300000012
                            0.400000006
                            0.5
                            0.600000024
                            0.699999988
                            0.800000012
                            0.899999976
                            1
                        }
                        values: list[vec3] = {
                            { 0, -400, 0 }
                            { 0, 200, 0 }
                            { 0, -320, 0 }
                            { 0, 360, 0 }
                            { 0, -240, 0 }
                            { 0, 80, 0 }
                            { 0, -800, 0 }
                            { 0, 320, 0 }
                            { 0, -160, 0 }
                            { 0, 200, 0 }
                            { 0, -40, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 30, 30, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 30, 30, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Shared/Particles/SRU_Butterfly_Fly.skn"
                        mMeshSkeletonName: string = "ASSETS/Shared/Particles/SRU_Butterfly_Fly.skl"
                        mAnimationName: string = "ASSETS/Shared/Particles/SRU_Butterfly_Fly.anm"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                doesCastShadow: flag = true
                isRotationEnabled: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -100, 0 }
                }
                rotation0: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            1
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                            { 0, -0.200000003, 0 }
                            { 0, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.899999976, 0.899999976, 0.899999976 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.0253459997
                            0.965438008
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 1, 0.998465359 }
                            { 0.997503817, 0.997503817, 0.995969176 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Butterfly_TX_CM.dds"
                uvMode: u8 = 2
            }
        }
        visibilityRadius: f32 = 200
        particleName: string = "SRU_SJungle_ButterFlies_01"
        particlePath: string = "Maps/Particles/SR/SRU_SJungle_ButterFlies_01"
    }
    "Maps/Particles/SR/SRU_Chaos_Platform_waterfall_02" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.639999986
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "Waterfall_plane1"
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_03.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -9, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_01.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.25 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.25 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.639999986
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "WhiteFalls1"
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[vec3] = {
                                { 10, 0, 0 }
                                { 30, 0, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_04.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 20
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -9, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.300000012 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.0700000003 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.639999986
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "SideFoam"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_sidefoam_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 20, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfalll_SideFoam_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.400000006 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_waterfall_SideFoam_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.699999988 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                emitterName: string = "TopEdgeHightlight"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 8, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_hightlight_01.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 30
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 20, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfalll_Highlight_Small_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                textureMult: string = "ASSETS/Shared/Particles/SRU_WaterFall_Small_Highlight_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.300000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -1.5 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_Chaos_Platform_waterfall_02"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_Platform_waterfall_02"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRU_Order_Platform_waterfall_02" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Waterfall_plane1"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_platform_waterfall_01.scb"
                    }
                }
                blendMode: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 40, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_01.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -2.5 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.5 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                emitterName: string = "WhiteFalls1"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[vec3] = {
                                { 10, 0, 0 }
                                { 30, 0, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_platform_waterfall_02.scb"
                    }
                }
                blendMode: u8 = 4
                pass: i16 = 20
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 40, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.5 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.119999997 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "SideFoam"
                importance: u8 = 0
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_platform_waterfall_sidefoam_01.scb"
                    }
                }
                blendMode: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 40, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfalll_SideFoam_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_waterfall_SideFoam_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.20000005 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                emitterName: string = "TopEdgeHightlight"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_platform_waterfall_highlight_01.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 30
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 40, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_WaterFall_Small_Highlight_01.dds"
                uvMode: u8 = 2
                textureMult: string = "ASSETS/Shared/Particles/SRU_WaterFall_Small_Highlight_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.300000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -1.5 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_Order_Platform_waterfall_02"
        particlePath: string = "Maps/Particles/SR/SRU_Order_Platform_waterfall_02"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRU_Chaos_platform_waterfall_03" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.639999986
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "Waterfall_plane1"
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_03.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 80, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_01.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.800000012 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.100000001 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.639999986
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "WhiteFalls1"
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[vec3] = {
                                { 10, 0, 0 }
                                { 30, 0, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_04.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 20
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 80, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.150000006 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.0700000003 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.639999986
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "SideFoam"
                importance: u8 = 0
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_sidefoam_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.800000012 }
                            { 1, 1, 1, 0.800000012 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 85, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfalll_SideFoam_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.400000006 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_waterfall_SideFoam_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.200000003 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                emitterName: string = "TopEdgeHightlight1"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_hightlight_01.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 30
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 80, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfalll_Highlight_Small_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                textureMult: string = "ASSETS/Shared/Particles/SRU_WaterFall_Small_Highlight_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.300000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -1.5 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_Chaos_platform_waterfall_03"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_platform_waterfall_03"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRU_Chaos_Platform_Waterfall_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.639999986
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "Waterfall_plane1"
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_01.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.29999995 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.200000003 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.639999986
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "WhiteFalls1"
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[vec3] = {
                                { 10, 0, 0 }
                                { 30, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { -8, -15, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_02.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 20
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.200000003 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.0799999982 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.639999986
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "SideFoam"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_sidefoam_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfalll_SideFoam_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.600000024 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_waterfall_SideFoam_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.400000006 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                emitterName: string = "TopEdgeHightlight"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_hightlight_01.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 30
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfalll_Highlight_Small_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                textureMult: string = "ASSETS/Shared/Particles/SRU_WaterFall_Small_Highlight_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.300000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -1.5 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_Chaos_Platform_Waterfall_01"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_Platform_Waterfall_01"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRU_Order_Platform_waterfall_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Waterfall_plane1"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_platform_waterfall_01.scb"
                    }
                }
                blendMode: u8 = 1
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_01.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -2.5 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.5 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                emitterName: string = "WhiteFalls1"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[vec3] = {
                                { 10, 0, 0 }
                                { 30, 0, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_platform_waterfall_02.scb"
                    }
                }
                blendMode: u8 = 4
                pass: i16 = 20
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.5 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.119999997 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "SideFoam"
                importance: u8 = 0
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_platform_waterfall_sidefoam_01.scb"
                    }
                }
                blendMode: u8 = 1
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfalll_SideFoam_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_waterfall_SideFoam_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.20000005 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                emitterName: string = "TopEdgeHightlight"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_platform_waterfall_highlight_01.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 30
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_WaterFall_Small_Highlight_01.dds"
                uvMode: u8 = 2
                textureMult: string = "ASSETS/Shared/Particles/SRU_WaterFall_Small_Highlight_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.300000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -1.5 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_Order_Platform_waterfall_01"
        particlePath: string = "Maps/Particles/SR/SRU_Order_Platform_waterfall_01"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRU_chaos_platform_waterfall_04" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.639999986
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "Waterfall_plane1"
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_03.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 150, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_01.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.25 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.25 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.639999986
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "WhiteFalls1"
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[vec3] = {
                                { 10, 0, 0 }
                                { 30, 0, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_04.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 20
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 150, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.300000012 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.0700000003 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.639999986
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "SideFoam"
                importance: u8 = 0
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_sidefoam_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 150, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfalll_SideFoam_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.400000006 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_waterfall_SideFoam_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.300000012 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                emitterName: string = "TopEdgeHightlight1"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_waterfall_hightlight_01.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 30
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 150, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfalll_Highlight_Small_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                textureMult: string = "ASSETS/Shared/Particles/SRU_WaterFall_Small_Highlight_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.300000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -1.5 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_chaos_platform_waterfall_04"
        particlePath: string = "Maps/Particles/SR/SRU_chaos_platform_waterfall_04"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRU_Chaos_Shopkeeper_Smokestack_embers" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 7
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            7
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLinger: option[f32] = {
                    12
                }
                emitterName: string = "sparks"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0.200000003, 0.200000003, 0.200000003 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0.200000003, 0.200000003, 0.200000003 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 10, 20 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.25
                                    2
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 10, 20 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.400000006, 0.400000006, 0.400000006 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0.5
                                    3
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                            0.300000012
                            0.699999988
                            1
                        }
                        values: list[vec3] = {
                            { 0.400000006, 0.400000006, 0.400000006 }
                            { 0.160000011, 0.160000011, 0.160000011 }
                            { 0.0800000057, 0.0800000057, 0.0800000057 }
                            { 0, 0, 0 }
                        }
                    }
                }
                birthAcceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 30, 30 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.699999988
                                    0.709999979
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.300000012
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.300000012
                                    0.310000002
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.5
                                    2
                                    3
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.699999988
                                    0.709999979
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.300000012
                                    1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 30, 30 }
                        }
                    }
                }
                drag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 15, 0, 15 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 15, 0, 15 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 45
                        }
                        ValueFloat {
                            constantValue: f32 = 360
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            1
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    360
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 1.00000012, 0 }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = 1
                isDirectionOriented: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 40, 40, 40 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 15, 15, 15 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 15, 15, 15 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 0.300000012 }
                            { 1, 0.5, 0 }
                            { 0.200000003, 0.200000003, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_shopkeeper_Ash_orange.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        particleName: string = "SRU_Chaos_Shopkeeper_Smokestack_embers"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_Smokestack_embers"
    }
    "Maps/Particles/SR/SRU_SJungle_mushroomGlow" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 12
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            12
                        }
                    }
                }
                particleLinger: option[f32] = {
                    22
                }
                emitterName: string = "SoftGlow"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 10, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 10, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.725504994 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRotationEnabled: flag = true
                birthRotation0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    365
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                rotation0: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0.100000001, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0.100000001, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 100, 100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 100, 100, 100 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_SJungle_mushroomGlow_soft.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.200000003, -0.170000002 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.200000003, -0.170000002 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.200000003
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "motes"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 25, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 25, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.600000024 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 25, 25 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_SJungle_mushroomGlow_motes.dds"
                numFrames: u16 = 2
                texDiv: vec2 = { 2, 1 }
            }
        }
        particleName: string = "SRU_SJungle_mushroomGlow"
        particlePath: string = "Maps/Particles/SR/SRU_SJungle_mushroomGlow"
    }
    "Maps/Particles/SR/Audio-Emitter_SRU_TreesSwaying" = VfxSystemDefinitionData {
        simpleEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                particleLinger: option[f32] = {
                    10
                }
                emitterName: string = "empty"
                particleColorTexture: string = "ASSETS/Shared/Particles/Black.DDS"
                meshRenderFlags: u8 = 0
                texture: string = "ASSETS/Shared/Particles/Black.DDS"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        particleName: string = "Audio-Emitter_SRU_TreesSwaying"
        particlePath: string = "Maps/Particles/SR/Audio-Emitter_SRU_TreesSwaying"
        soundPersistentDefault: string = "Play_sfx_Env_Map11_Emitter_treeswaying"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRUAP_Chaos_BaseDoor_Shild_Top" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.100000001
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                childParticleSetDefinition: embed = VfxChildParticleSetDefinitionData {
                    childrenIdentifiers: list[embed] = {
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_Chaos_BaseDoor_Glow"
                        }
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_Chaos_BaseDoor_GlowChild"
                        }
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_Chaos_BaseDoor_GlowChild"
                        }
                    }
                    boneToSpawnAt: list[string] = {
                        "centershield"
                        "L_Shield"
                        "R_Shield"
                    }
                }
                emitterName: string = "Shield1"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 45, -65 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Shared/Particles/SRUAP_Chaos_BaseDoor_RG.skn"
                        mMeshSkeletonName: string = "ASSETS/Shared/Particles/SRUAP_Chaos_BaseDoor_RG.skl"
                        mAnimationName: string = "ASSETS/Shared/Particles/SRUAP_Order_BaseDoor_Idle1.anm"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = 5
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -190, -13 }
                }
                texture: string = "ASSETS/Shared/Particles/SRUAP_Chaos_BaseDoor.dds"
            }
        }
        particleName: string = "SRUAP_Chaos_BaseDoor_Shild_Top"
        particlePath: string = "Maps/Particles/SR/SRUAP_Chaos_BaseDoor_Shild_Top"
        soundOnCreateDefault: string = "Play_sfx_S5_VoidGateSpawn_cast"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0xecfa20ec
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Chaos_BaseDoor_blue.dds"
            }
        }
    }
    "Maps/Particles/SR/SRU_River_WaterLily_03" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.00800000038
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 125
                }
                childParticleSetDefinition: embed = VfxChildParticleSetDefinitionData {
                    childrenIdentifiers: list[embed] = {
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_River_GrassRipple_03"
                        }
                    }
                }
                emitterName: string = "WaterPlane3"
                importance: u8 = 0
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.200000003, 0.200000003, 0.200000003 }
                }
                velocity: embed = ValueVector3 {
                    constantValue: vec3 = { -5, 0, 8 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.105263002
                            0.199445993
                            0.304708987
                            0.444597989
                            0.590027988
                            0.721607029
                            0.801939011
                            1
                        }
                        values: list[vec3] = {
                            { 3.55240798, 0, -5.68385267 }
                            { -3.35912919, 0, 5.37460661 }
                            { 3.03662157, 0, -4.85859442 }
                            { -2.43071365, 0, 3.88914204 }
                            { 6.019063, 0, -9.64509201 }
                            { -1.70861292, 0, 2.73378062 }
                            { 2.3145206, 0, -3.703233 }
                            { -1.19282651, 0, 1.90852237 }
                            { 0.0450607054, 0, -0.0720971301 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            1
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    0
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.68235296, 0.843137324, 0.909803987, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0138250003
                            0.951613009
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -8001
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                isRotationEnabled: flag = true
                useNavmeshMask: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                rotation0: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 0.0700000003, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0.0700000003, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 55, 55, 55 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_River_WaterLily_01.dds"
                numFrames: u16 = 4
                startFrame: u16 = 2
                texDiv: vec2 = { 2, 2 }
            }
        }
        visibilityRadius: f32 = 150
        particleName: string = "SRU_River_WaterLily_03"
        particlePath: string = "Maps/Particles/SR/SRU_River_WaterLily_03"
    }
    "Maps/Particles/SR/SRU_River_WaterLily_02" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.00800000038
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 125
                }
                childParticleSetDefinition: embed = VfxChildParticleSetDefinitionData {
                    childrenIdentifiers: list[embed] = {
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_River_GrassRipple_03"
                        }
                    }
                }
                emitterName: string = "WaterPlane3"
                importance: u8 = 0
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.200000003, 0.200000003, 0.200000003 }
                }
                velocity: embed = ValueVector3 {
                    constantValue: vec3 = { -5, 0, 8 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.105263002
                            0.199445993
                            0.304708987
                            0.444597989
                            0.590027988
                            0.721607029
                            0.801939011
                            1
                        }
                        values: list[vec3] = {
                            { 3.55240798, 0, -5.68385267 }
                            { -3.35912919, 0, 5.37460661 }
                            { 3.03662157, 0, -4.85859442 }
                            { -2.43071365, 0, 3.88914204 }
                            { 6.019063, 0, -9.64509201 }
                            { -1.70861292, 0, 2.73378062 }
                            { 2.3145206, 0, -3.703233 }
                            { -1.19282651, 0, 1.90852237 }
                            { 0.0450607054, 0, -0.0720971301 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            1
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    0
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.698039234, 0.839215755, 0.960784376, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0161290001
                            0.880183995
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -7999
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                isRotationEnabled: flag = true
                useNavmeshMask: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                rotation0: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 0.0700000003, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0.0700000003, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 40, 45, 45 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_River_WaterLily_01.dds"
                numFrames: u16 = 4
                startFrame: u16 = 2
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.0199999996
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                childParticleSetDefinition: embed = VfxChildParticleSetDefinitionData {
                    childrenIdentifiers: list[embed] = {
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_River_GrassRipple_03"
                        }
                    }
                }
                emitterName: string = "WaterPlane4"
                importance: u8 = 0
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.200000003, 0.200000003, 0.200000003 }
                }
                velocity: embed = ValueVector3 {
                    constantValue: vec3 = { -5, 0, 8 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.108033001
                            0.196676001
                            0.331025004
                            0.444597989
                            0.598338008
                            0.721607029
                            0.825484991
                            1
                        }
                        values: list[vec3] = {
                            { 2.22320771, 0, -3.55713224 }
                            { -7.94402122, 0, 12.710434 }
                            { 5.02287912, 0, -8.03660679 }
                            { -4.77597141, 0, 7.64155436 }
                            { 3.90862656, 0, -6.26839304 }
                            { -4.03921556, 0, 6.46274519 }
                            { 5.02287912, 0, -8.03660679 }
                            { -3.22878456, 0, 5.1660552 }
                            { 0.0450607054, 0, -0.0720971301 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { -15, 0, -143 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 1 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -30
                                        30
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -100
                                        100
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 1 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            1
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    0
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.768627524, 0.886274576, 0.92549026, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0783409998
                            0.921658993
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -7999
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                isRotationEnabled: flag = true
                useNavmeshMask: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                rotation0: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 0.0700000003, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0.0700000003, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 15, 15, 15 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_River_WaterLily_01.dds"
                numFrames: u16 = 4
                startFrame: u16 = 3
                texDiv: vec2 = { 2, 2 }
            }
        }
        visibilityRadius: f32 = 150
        particleName: string = "SRU_River_WaterLily_02"
        particlePath: string = "Maps/Particles/SR/SRU_River_WaterLily_02"
    }
    "Maps/Particles/SR/SRU_River_WaterLily_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.00800000038
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 125
                }
                childParticleSetDefinition: embed = VfxChildParticleSetDefinitionData {
                    childrenIdentifiers: list[embed] = {
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_River_GrassRipple_03"
                        }
                    }
                }
                emitterName: string = "WaterPlane3"
                importance: u8 = 0
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.200000003, 0.200000003, 0.200000003 }
                }
                velocity: embed = ValueVector3 {
                    constantValue: vec3 = { -5, 0, 8 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.105263002
                            0.199445993
                            0.304708987
                            0.444597989
                            0.590027988
                            0.721607029
                            0.801939011
                            1
                        }
                        values: list[vec3] = {
                            { 3.55240798, 0, -5.68385267 }
                            { -3.35912919, 0, 5.37460661 }
                            { 3.03662157, 0, -4.85859442 }
                            { -2.43071365, 0, 3.88914204 }
                            { 6.019063, 0, -9.64509201 }
                            { -1.70861292, 0, 2.73378062 }
                            { 2.3145206, 0, -3.703233 }
                            { -1.19282651, 0, 1.90852237 }
                            { 0.0450607054, 0, -0.0720971301 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            1
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    0
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.00921699964
                            0.926267028
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -7999
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                isRotationEnabled: flag = true
                useNavmeshMask: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                rotation0: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 0.0700000003, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0.0700000003, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 63, 63, 63 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_River_WaterLily_01.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.0199999996
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                childParticleSetDefinition: embed = VfxChildParticleSetDefinitionData {
                    childrenIdentifiers: list[embed] = {
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_River_GrassRipple_03"
                        }
                    }
                }
                emitterName: string = "WaterPlane4"
                importance: u8 = 0
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.200000003, 0.200000003, 0.200000003 }
                }
                velocity: embed = ValueVector3 {
                    constantValue: vec3 = { -5, 0, 8 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.108033001
                            0.196676001
                            0.331025004
                            0.444597989
                            0.598338008
                            0.721607029
                            0.825484991
                            1
                        }
                        values: list[vec3] = {
                            { 2.22320771, 0, -3.55713224 }
                            { -7.94402122, 0, 12.710434 }
                            { 5.02287912, 0, -8.03660679 }
                            { -4.77597141, 0, 7.64155436 }
                            { 3.90862656, 0, -6.26839304 }
                            { -4.03921556, 0, 6.46274519 }
                            { 5.02287912, 0, -8.03660679 }
                            { -3.22878456, 0, 5.1660552 }
                            { 0.0450607054, 0, -0.0720971301 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { -20, 0, -143 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 1 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -30
                                        30
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -100
                                        100
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 1 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            1
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    0
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0230410006
                            0.92396301
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -7999
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                isRotationEnabled: flag = true
                useNavmeshMask: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                rotation0: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 0.0700000003, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0.0700000003, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 25, 25 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_River_WaterLily_01.dds"
                numFrames: u16 = 4
                startFrame: u16 = 1
                texDiv: vec2 = { 2, 2 }
            }
        }
        visibilityRadius: f32 = 150
        particleName: string = "SRU_River_WaterLily_01"
        particlePath: string = "Maps/Particles/SR/SRU_River_WaterLily_01"
    }
    "Maps/Particles/SR/SRU_Order_BaseDoor_Glow_Red" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.100000001
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                emitterName: string = "Glow"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_glow.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 5
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Glow.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.300000012, -0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.300000012, -0.5 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_Order_BaseDoor_Glow_Red"
        particlePath: string = "Maps/Particles/SR/SRU_Order_BaseDoor_Glow_Red"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x8ced37d7
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Glow.dds"
            }
        }
    }
    "Maps/Particles/SR/SRU_Chaos_platform_godrays" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 15
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.899999976
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            15
                        }
                    }
                }
                emitterName: string = "godRays_geo"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_godrays.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.600000024 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.600000024 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_chaos_platform_godRays.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.00999999978 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.25
                                    0.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -0.00999999978 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "sparkles"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 50, -15, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, -15, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.200000003, 0.200000003, 0 }
                }
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_godrays.scb"
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.349004 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 15, 15, 15 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 15, 15, 15 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_platform_godRaySparkles.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        visibilityRadius: f32 = 450
        particleName: string = "SRU_Chaos_platform_godrays"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_platform_godrays"
    }
    "Maps/Particles/SR/SRU_RiverPlane_South_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                emitterName: string = "WaterPlane"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/SRU_riverplane_south_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -8000
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_RiverPlane_South_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.00300000003, -0.0399999991 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_RiverPlane_South_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.00999999978 }
                }
            }
        }
        visibilityRadius: f32 = 1401
        particleName: string = "SRU_RiverPlane_South_01"
        particlePath: string = "Maps/Particles/SR/SRU_RiverPlane_South_01"
    }
    "Maps/Particles/SR/SRUAP_Chaos_BaseDoor_Bottom" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "AreaSphere"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_areasphere2.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 0.800000012, 0.800000012, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 60, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Barrier.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00999999978, 0.200000003 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.00999999978, 0.200000003 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Barrier_Mult.dds"
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.899999976
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "AreaDisc"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_arearing.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.5, 0.5, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.5, 0.5, 1, 0 }
                            { 0.5, 0.5, 1, 1 }
                            { 0, 0, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 60, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Barrier.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00999999978, -0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.00999999978, -0.5 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Barrier_Mult.dds"
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.239999995
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 7
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            7
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.5
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "AreaRing"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_areasphere.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.400000006
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 0.5, 1, 0.5, 0.200000003 }
                            { 1, 1, 1, 0.400000006 }
                            { 1, 1, 1, 0.297993004 }
                            { 0.300000012, 1, 0.300000012, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 60, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_AreaRing.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00300000003, 0 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "Mid_sparkles"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                drag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 8, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 8, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_meshemit3.scb"
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.701960802 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 0, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 35, 35, 35 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 35, 35, 35 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_sparkles.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "Side_sparkles1"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 8, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 8, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 160, 0, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -10
                                        10
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -20
                                        20
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.701960802 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 0, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 25, 25 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 25, 25 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_sparkles.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "Side_sparkles2"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 8, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 8, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { -175, 0, 90 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -10
                                        10
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -20
                                        20
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.701960802 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 0, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 25, 25 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 25, 25 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_sparkles.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 7
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            7
                        }
                    }
                }
                particleLinger: option[f32] = {
                    17
                }
                emitterName: string = "structureGlow"
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_order_basedoor_glow.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.149019614 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.10000002, 1.10000002, 1.10000002 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_Color.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.899999976
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "OutSide_AreaDisc"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { -50, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_arearing2.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 0, 0, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 60, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Barrier.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00999999978, -0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.00999999978, -0.5 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Barrier_Mult.dds"
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRUAP_Chaos_BaseDoor_Bottom"
        particlePath: string = "Maps/Particles/SR/SRUAP_Chaos_BaseDoor_Bottom"
        soundOnCreateDefault: string = "Play_sfx_S5_VoidGateSpawn_cast"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x8ced37d7
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Glow.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x3975dea0
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier_Mult.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xd6c40879
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_AreaRing.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x297f0005
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_sparkles.dds"
            }
            VfxAssetRemap {
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_GroundGlow_Top.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x0d3a4feb
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_Color.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xeb6a9f53
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier.dds"
            }
        }
    }
    "Maps/Particles/SR/SRU_Chaos_Shopkeeper_weaponSparkle_gold" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                emitterName: string = "whitesparks"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                particleColorTexture: string = "ASSETS/Shared/Particles/color-hold.TFT_Set5.dds"
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.796078503, 0.964705944, 1, 0.701960802 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.831372976, 1, 0.996078014, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0.831372976, 1, 0.996078014, 0 }
                            { 0.831372976, 1, 0.996078014, 1 }
                            { 0.831372976, 1, 0.996078014, 0 }
                        }
                    }
                }
                colorLookUpScales: vec2 = { 1, 0.400000006 }
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    90
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    90
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 1 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 45, 0, 45 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 45, 0, 45 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 15, 15, 15 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 15, 15, 15 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0.200000003, 0.200000003, 0.200000003 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_Shopkeeper_weaponRack_sparkle.dds"
            }
        }
        particleName: string = "SRU_Chaos_Shopkeeper_weaponSparkle_gold"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_weaponSparkle_gold"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRUAP_Chaos_LaserTurret_Idle" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "sparkles"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -0.5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -0.5, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 0, 0 }
                        }
                    }
                }
                drag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 3, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 3, 0 }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_chaos_laserturret_sparklesemit.scb"
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 85, 85, 85 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 85, 85, 85 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_Sparks.ARAM_VFX_Update.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 15
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            15
                        }
                    }
                }
                particleLinger: option[f32] = {
                    25
                }
                emitterName: string = "ambientGlow"
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_chaos_laserturret_sparklesemit.scb"
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.400000036 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 4
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 550, 550, 550 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 550, 550, 550 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.600000024, 0.600000024, 1 }
                            { 1, 1.20000005, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_chaos_ambientGlow.ARAM_VFX_Update.dds"
                textureMult: string = "ASSETS/Shared/Particles/SRU_Chaos_sparklesMult.ARAM_VFX_Update.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0500000007, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.0500000007, 0 }
                        }
                    }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                texDivMult: vec2 = { 0.5, 0.5 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            6
                        }
                    }
                }
                particleLinger: option[f32] = {
                    16
                }
                emitterName: string = "fireLine"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -550, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveRay {}
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.298039228 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 0.435294002, 0.435294002, 1 }
                            { 1, 1, 1, 0.600000024 }
                            { 0.5, 0.5, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { -90, 0, 90 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1000, 1000, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0.800000012, 0 }
                            { 1, 1, 0 }
                            { 0, 1.29999995, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_chaos_ambientGlow.ARAM_VFX_Update.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 20
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            20
                        }
                    }
                }
                emitterName: string = "runeBinding"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 50, 0 }
                            }
                        }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_runebinding.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 4
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 360, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.5, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0.5, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_supertrail.ARAM_VFX_Update.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.600000024, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.600000024, 0 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 0 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Chaos_sparklesMult.ARAM_VFX_Update.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                texDivMult: vec2 = { 0.5, 1 }
            }
        }
        particleName: string = "SRUAP_Chaos_LaserTurret_Idle"
        particlePath: string = "Maps/Particles/SR/SRUAP_Chaos_LaserTurret_Idle"
        buildUpTime: f32 = 5
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0xb6c33461
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_ambientGlow.ARAM_VFX_Update.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xa641f523
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_sparklesMult.ARAM_VFX_Update.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x0d3a4feb
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_Color.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xbe4c0a70
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_clouds.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x20e7a040
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_Sparks.ARAM_VFX_Update.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xd79b89c3
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_trail.ARAM_VFX_Update.dds"
            }
        }
    }
    "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_runeTimer_mid" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 320
                }
                isSingleParticle: flag = true
                emitterName: string = "runeTimeGlow"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 10, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_chaos_inhibitor_respawn_base.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.90196085 }
                }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -45, 0 }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRUAP_Chaos_Inhibitor_RuneCountdown_glow.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00167999999, 0 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 7
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            7
                        }
                    }
                }
                emitterName: string = "pulseTimer"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_chaos_inhibitor_respawn_base.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000072 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.800000072 }
                        }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            0.699999988
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0, 1, -0 }
                            { 1, 1, 1, 0.294102013 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0.300000012 }
                            { 0, 0, 1, -0 }
                        }
                    }
                }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -45, 0 }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRUAP_Chaos_Inhibitor_RuneCountdown.dds"
            }
        }
        particleName: string = "SRUAP_Chaos_Inhibitor_runeTimer_mid"
        particlePath: string = "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_runeTimer_mid"
        flags: u8 = 133
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0xaa3a888f
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Order_Inhibitor_RuneCountdown_glow.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x37d25f93
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Order_Inhibitor_RuneCountdown.dds"
            }
        }
    }
    "Maps/Particles/SR/SRUAP_Order_Inhibitor_runeTimer_mid" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 320
                }
                isSingleParticle: flag = true
                emitterName: string = "runeTimeGlow"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_order_inhibitor_respawn_base.scb"
                    }
                }
                blendMode: u8 = 4
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -45, 0 }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRUAP_Order_Inhibitor_RuneCountdown_glow.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00167999999, 0 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 7
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            7
                        }
                    }
                }
                emitterName: string = "pulseTimer"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_order_inhibitor_respawn_base.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.501960814 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.357143015
                            0.5
                            0.645160973
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0, 1, -0 }
                            { 0.699999988, 0.699999988, 1, 0.224999994 }
                            { 1, 1, 1, 1 }
                            { 0.699999988, 0.699999988, 1, 0.275000006 }
                            { 0, 0, 1, -0 }
                        }
                    }
                }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -45, 0 }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRUAP_Order_Inhibitor_RuneCountdown.dds"
            }
        }
        particleName: string = "SRUAP_Order_Inhibitor_runeTimer_mid"
        particlePath: string = "Maps/Particles/SR/SRUAP_Order_Inhibitor_runeTimer_mid"
        flags: u8 = 133
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x1b7b92e7
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Chaos_Inhibitor_RuneCountdown_glow.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xf1acfd0b
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Chaos_Inhibitor_RuneCountdown.dds"
            }
        }
    }
    "Maps/Particles/SR/SRX_Braziers_Infernal" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.400000006
                        }
                    }
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "Fire"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 65, 0 }
                }
                birthAcceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 500, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 500, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 20, 18, 20 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 20, 18, 20 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 45
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.360006094, 0.200000003, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.360006094, 0.200000003, 0 }
                            { 1, 0.360006094, 0.200000003, 1 }
                            { 1, 0.360006094, 0.200000003, 0.800000012 }
                            { 1, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = -1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 35, 35, 35 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 35, 35, 35 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            1
                        }
                        values: list[vec3] = {
                            { 0.600000024, 0.600000024, 0.600000024 }
                            { 1, 1, 1 }
                            { 0.600000024, 0.600000024, 0.600000024 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRU_Brazier_Flame_Temp_01.DDS"
                numFrames: u16 = 8
                texDiv: vec2 = { 4, 2 }
                textureMult: string = "ASSETS/Maps/Particles/SR/URF_Finisher_Statue_Dust_Erosion.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                texDivMult: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2.5
                        }
                    }
                }
                emitterName: string = "baseGlow"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -1, 0 }
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.500007629 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.290196091, 0.0745098069, 0 }
                            { 1, 0.149019614, 0, 0.529411793 }
                            { 0.533333361, 0.176470593, 0.164705887, 0 }
                        }
                    }
                }
                pass: i16 = -2
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 80, 80 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 0.75, 0.75, 0.75 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRX_Infernal_Brazier_Glow.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 7
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.20000005
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.20000005
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11.1999998
                }
                emitterName: string = "sparks"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0.400000006, 0.400000006, 0.400000006 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0.400000006, 0.400000006, 0.400000006 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 250, 20 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 250, 20 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 5, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 200, 20, 150 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.150000006
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.850000024
                                    1
                                    4
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 200, 20, 150 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 25, -25, 25 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 25, -25, 25 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 45
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = 1
                isDirectionOriented: flag = true
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 20, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 0.5, 0 }
                            { 0.200000003, 0.200000003, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Env_MB_brazierFire_Ash_01.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Geo_Rock"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SR/SRX_Infernal_Brazier_v2.SRX_FX.scb"
                    }
                }
                blendMode: u8 = 3
                alphaRef: u8 = 1
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.200000003
                    fresnelColor: vec4 = { 0.909803927, 0.576470613, 0.0392156877, 0.960784316 }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 360, 360, 360 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 360, 360, 360 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 18, 5 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 18, 5 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.899999976, 1, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRX_Infernal_Brazier_Rock.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 4
                }
                particleLinger: option[f32] = {
                    11
                }
                emitterName: string = "Wisps_ontop"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 20 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 10, 0, 10 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 10, 0, 10 }
                            }
                        }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SRX/Smoke_Wisp_Tapered.SRX_FX.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.325490206, 0.0588235296, 0.0588235296, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.500007629 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                reflectionDefinition: pointer = VfxReflectionDefinitionData {}
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 360, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.25, 1.25, 1.25 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1.25, 1.25, 1.25 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.699999988, 0.699999988, 0.699999988 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0.524999976, 0.699999988, 0.524999976 }
                            { 0.699999988, 0.944999993, 0.699999988 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/AlphaSlice_1.ShieldReduction_GlobalVFX.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.5 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Maps/Particles/SRX/Cloud_Terrain_Buff_v2.SRX_FX.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.300000012 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                emitterName: string = "baseGlow1"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -1, 0 }
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.360006094 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.669993162, 0.170000762, 0.0899977088, 0.790005326 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.669993162, 0.170000762, 0.0899977088, 0 }
                            { 0.669993162, 0.170000762, 0.0899977088, 0.774201632 }
                            { 0.669993162, 0.170000762, 0.0899977088, 0 }
                        }
                    }
                }
                pass: i16 = -2
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 190, 80, 80 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 0.75, 0.75, 0.75 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Cloud_DrakePit_Distort_Tex.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Geo_Lava"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SR/SRX_Infernal_Brazier_LavaFlow.SRX_FX.scb"
                    }
                }
                blendMode: u8 = 3
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.100000001
                    fresnelColor: vec4 = { 0.730006874, 0.149996191, 0.0399938971, 0.960006118 }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 360, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.800000012, 1, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRX_Infernal_Brazier_LavaFlow.SRX_FX.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.300000012 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Burst_Glow"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                particleColorTexture: string = "ASSETS/Particles/DefaultColorOverlifetime.TFT_Set4_Act2.dds"
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.990005314, 0.990005314, 0.990005314, 0.960006118 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0.972549021, 0.913725495, 0.0627451017, 0 }
                            { 0.97647059, 0.36470589, 0.00784313772, 1 }
                            { 0.694117665, 0.0549019612, 0.0549019612, 0 }
                        }
                    }
                }
                pass: i16 = 100
                depthBiasFactors: vec2 = { -1, -75 }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 90 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 425, 120, 10 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1.5, 0.400000006, 1 }
                            { 1.64999998, 0, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRX_Brazier_HalfGlow_Burst.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Burst_Sparkles"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 5, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 200, 200, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 200, 200, 200 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 1, 3 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -25, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        1
                                        1.5
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, -25, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 5, 650, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0.800000012
                                        1.29999995
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 5, 650, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 1, 0, 0 }
                    }
                }
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.600000024 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.800000012
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.600000024 }
                        }
                    }
                }
                pass: i16 = -5
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                directionVelocityScale: f32 = 0.00100000005
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 10, 10 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.75
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.25
                                    0.75
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 4, 10, 10 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 3, 3 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 3, 3, 3 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Env_MB_brazierFire_Ash_01.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                emitterName: string = "baseGlow2"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -1, 0 }
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.820004582 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.945098042, 0.56078434, 0.0862745121, 0.529411793 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.945098042, 0.56078434, 0.0862745121, 0 }
                            { 0.945098042, 0.56078434, 0.0862745121, 0.51882112 }
                            { 0.945098042, 0.56078434, 0.0862745121, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 40, 80, 80 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 0.75, 0.75, 0.75 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Cloud_DrakePit_Distort_Tex.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                emitterName: string = "SandRise_Long"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -10, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -10, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -15, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -15, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -10, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0.800000012
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, -10, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 12, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 12, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.449999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.949996173, 0.889997721, 0.889997721, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.949996173, 0.889997721, 0.889997721, 0 }
                            { 0.949996173, 0.889997721, 0.889997721, 1 }
                            { 0.949996173, 0.889997721, 0.889997721, 1 }
                            { 0.949996173, 0.889997721, 0.889997721, 0 }
                        }
                    }
                }
                isDirectionOriented: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { -15, 20, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.200000003
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.500999987
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.5
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -15, 20, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0.600000024, 1 }
                            { 3, 0.800000012, 1 }
                            { 5, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRX_Infernal_Braziers_LavaDrops.SRX_FX.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Geo_Lava1"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SR/SRX_Infernal_Brazier_LavaFlow.SRX_FX.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.588235319, 0.294117659, 1 }
                }
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.100000001
                    fresnelColor: vec4 = { 0.730006874, 0.149996191, 0.0399938971, 0.960006118 }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 360, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.850000024, 1, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRX_Infernal_explosion_smoke_mult.SRX_FX.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.150000006 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.419999987
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            20
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.20000005
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.20000005
                        }
                    }
                }
                emitterLinger: option[f32] = {
                    1.16999996
                }
                period: option[f32] = {
                    1
                }
                emitterName: string = "Flames"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 240, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.25
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 240, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 2, 4 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 10, 10, 10 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 10, 10, 10 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.945098042, 0.886274517, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.400000006
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 0.360784322, 0.149019614, 1 }
                            { 1, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = 10
                isDirectionOriented: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                directionVelocityScale: f32 = 0.00499999989
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 25, 25 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.25
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 25, 25 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 2, 2, 2 }
                            { 2, 2, 2 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRU_Brazier_Flame_Temp_01.DDS"
                numFrames: u16 = 8
                texDiv: vec2 = { 4, 2 }
                textureMult: string = "ASSETS/Maps/Particles/SR/Infernal_Transition_Flame.SRX_FX.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.300000012, 0.25 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -0.200000003
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -0.200000003
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.300000012, 0.25 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRX_Braziers_Infernal"
        particlePath: string = "Maps/Particles/SR/SRX_Braziers_Infernal"
        soundOnCreateDefault: string = "Play_sfx_Env_Map11_SRX_Brazier_Activate_buffactivate"
        soundPersistentDefault: string = "Play_sfx_Env_Map11_Emitter_firebig"
        flags: u8 = 228
    }
    "Maps/Particles/SR/SRUAP_Order_Inhibitor_runeTimer_bot" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 320
                }
                isSingleParticle: flag = true
                emitterName: string = "runeTimeGlow"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_order_inhibitor_respawn_base.scb"
                    }
                }
                blendMode: u8 = 4
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRUAP_Order_Inhibitor_RuneCountdown_glow.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00167999999, 0 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 7
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            7
                        }
                    }
                }
                emitterName: string = "pulseTimer"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_order_inhibitor_respawn_base.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.501960814 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.391705006
                            0.5
                            0.619816005
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0, 1, -0 }
                            { 0.806451976, 0.806451976, 1, 0.275000006 }
                            { 1, 1, 1, 1 }
                            { 0.806451976, 0.806451976, 1, 0.324999988 }
                            { 0, 0, 1, -0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRUAP_Order_Inhibitor_RuneCountdown.dds"
            }
        }
        particleName: string = "SRUAP_Order_Inhibitor_runeTimer_bot"
        particlePath: string = "Maps/Particles/SR/SRUAP_Order_Inhibitor_runeTimer_bot"
        flags: u8 = 133
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x1b7b92e7
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Chaos_Inhibitor_RuneCountdown_glow.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xf1acfd0b
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Chaos_Inhibitor_RuneCountdown.dds"
            }
        }
    }
    "Maps/Particles/SR/SRUAP_Order_BaseDoor_Shield_Bottom" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.100000001
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                childParticleSetDefinition: embed = VfxChildParticleSetDefinitionData {
                    childrenIdentifiers: list[embed] = {
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_Order_BaseDoor_Glow_Red"
                        }
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_Order_BaseDoor_GlowChild_Red"
                        }
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_Order_BaseDoor_GlowChild_Red"
                        }
                    }
                    boneToSpawnAt: list[string] = {
                        "centershield"
                        "L_Shield"
                        "R_Shield"
                    }
                }
                emitterName: string = "Shield"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { -110, -25, 62 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Shared/Particles/SRUAP_Order_BaseDoor_RG.skn"
                        mMeshSkeletonName: string = "ASSETS/Shared/Particles/SRUAP_Order_BaseDoor_RG.skl"
                        mAnimationName: string = "ASSETS/Shared/Particles/SRUAP_Order_BaseDoor_Idle1.anm"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = 5
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -16, -30 }
                }
                texture: string = "ASSETS/Shared/Particles/SRUAP_Order_BaseDoor.dds"
            }
        }
        particleName: string = "SRUAP_Order_BaseDoor_Shield_Bottom"
        particlePath: string = "Maps/Particles/SR/SRUAP_Order_BaseDoor_Shield_Bottom"
        soundOnCreateDefault: string = "Play_sfx_S5_VoidGateSpawn_cast"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x796f1dd4
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Order_BaseDoor_red.dds"
            }
        }
    }
    "Maps/Particles/SR/SRUAP_Order_Inhibitor_runeTimer_top" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 320
                }
                isSingleParticle: flag = true
                emitterName: string = "runeTimeGlow"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_order_inhibitor_respawn_base.scb"
                    }
                }
                blendMode: u8 = 4
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -90, 0 }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRUAP_Order_Inhibitor_RuneCountdown_glow.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00167999999, 0 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 7
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            7
                        }
                    }
                }
                emitterName: string = "pulseTimer"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_order_inhibitor_respawn_base.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.501960814 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.349999994
                            0.5
                            0.649999976
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0, 1, -0 }
                            { 0.783410013, 0.783410013, 1, 0.300000012 }
                            { 1, 1, 1, 1 }
                            { 0.852535009, 0.852535009, 1, 0.300000012 }
                            { 0, 0, 1, -0 }
                        }
                    }
                }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -90, 0 }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRUAP_Order_Inhibitor_RuneCountdown.dds"
            }
        }
        particleName: string = "SRUAP_Order_Inhibitor_runeTimer_top"
        particlePath: string = "Maps/Particles/SR/SRUAP_Order_Inhibitor_runeTimer_top"
        flags: u8 = 133
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x1b7b92e7
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Chaos_Inhibitor_RuneCountdown_glow.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xf1acfd0b
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Chaos_Inhibitor_RuneCountdown.dds"
            }
        }
    }
    "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_Rubble_dust" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                emitterName: string = "sparkles1"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -1.5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.899999976
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    0.200000003
                                    0.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -1.5, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 0, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -6, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -6, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 75, 0, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                        { 0, 0, 1.00000012 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.525489986, 1, 0.843137026, 0.738003016 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.525489986, 1, 0.843137026, 0 }
                            { 0.525489986, 1, 0.843137026, 0.516602099 }
                            { 0.525489986, 1, 0.843137026, 0 }
                        }
                    }
                }
                pass: i16 = 7
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 45, 45, 45 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 45, 45, 45 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0, 1, 1 }
                            { 1.39999998, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_brightSparks.NexusBlitzSummer2020.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLinger: option[f32] = {
                    12
                }
                emitterName: string = "pitGlow1"
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 30, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    2
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 30, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 100, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveRay {}
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.649999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, -0 }
                        }
                    }
                }
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 5, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 500, 800, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 500, 800, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.26730001
                            0.449999988
                            0.75
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0.5, 1 }
                            { 1, 1, 1 }
                            { 1, 1.35000002, 1 }
                            { 1, 2.17499995, 1 }
                            { 1, 3.375, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRUAP_ChaosInhibitor_respawn_glow.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.400000006
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.600000024
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            6
                        }
                    }
                }
                particleLinger: option[f32] = {
                    16
                }
                emitterName: string = "DustCloud"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 50, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    5
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 50, 1 }
                        }
                    }
                }
                velocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.449999988
                            1
                        }
                        values: list[vec3] = {
                            { -0, 0, 0 }
                            { -0, 0, -0 }
                            { -0, 0, -0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 30, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    0.400000006
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 30, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -100, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 70, 75, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 70, 75, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.301960796, 0.517647088, 0.615686297, 0.800000072 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 0.301960796, 0.517647088, 0.615686297, 0.800000072 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000012 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0500000007
                            0.550000012
                            0.699999988
                            0.850000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.800000012 }
                            { 1, 1, 1, 0.800000012 }
                            { 1, 1, 1, 0.320000023 }
                            { 1, 1, 1, 0.100000001 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -15
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 220, 220, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.5
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 220, 220, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.649999976
                            1
                        }
                        values: list[vec3] = {
                            { 0.300000012, 0.300000012, 1 }
                            { 0.5, 0.5, 1 }
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_OrderTurret1_Rubble_dustCloud.dds"
                textureMult: string = "ASSETS/Shared/Particles/SRU_dustCloud_mult.dds"
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRUAP_Chaos_Inhibitor_Rubble_dust"
        particlePath: string = "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_Rubble_dust"
        flags: u8 = 135
    }
    "Maps/Particles/SR/SRUAP_Chaos_BaseDoor_Top" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "AreaSphere"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_areasphere2.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 0.800000012, 0.800000012, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 125, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Barrier.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00999999978, 0.200000003 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.00999999978, 0.200000003 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Barrier_Mult.dds"
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.899999976
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "AreaDisc"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_arearing.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.5, 0.5, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.5, 0.5, 1, 0 }
                            { 0.5, 0.5, 1, 1 }
                            { 0, 0, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 125, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Barrier.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00999999978, -0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.00999999978, -0.5 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Barrier_Mult.dds"
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.239999995
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.5
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "AreaRing"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_areasphere.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.400000006
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 0.384314001, 0.631372988, 0.200000003 }
                            { 1, 1, 1, 0.400000006 }
                            { 1, 1, 1, 0.300007999 }
                            { 0.300000012, 1, 0.300000012, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 125, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_AreaRing.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00300000003, 0 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 8
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            8
                        }
                    }
                }
                particleLinger: option[f32] = {
                    18
                }
                emitterName: string = "Mid_sparkles"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 8, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 8, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 40, 100, -50 }
                    }
                }
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_meshemit2.scb"
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.701960802 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 0, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 35, 35, 35 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 35, 35, 35 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_sparkles.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "Side_sparkles1"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 8, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 8, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 10, 160 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -20
                                        20
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.701960802 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0.474999994 }
                            { 1, 1, 1, -0 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 25, 25 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 25, 25 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_sparkles.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 7
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            7
                        }
                    }
                }
                particleLinger: option[f32] = {
                    17
                }
                emitterName: string = "structureGlow"
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_order_basedoor_glow.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.149019614 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.10000002, 1.10000002, 1.10000002 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_Color.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.899999976
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "OutSide_AreaDisc"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { -20, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_arearing2.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.266667008, 0.0235290006, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.266667008, 0.0235290006, 0 }
                            { 1, 0.266667008, 0.0235290006, 1 }
                            { 0, 0, 0.0235290006, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 125, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Barrier.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00999999978, -0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.00999999978, -0.5 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Barrier_Mult.dds"
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRUAP_Chaos_BaseDoor_Top"
        particlePath: string = "Maps/Particles/SR/SRUAP_Chaos_BaseDoor_Top"
        soundOnCreateDefault: string = "Play_sfx_S5_VoidGateSpawn_cast"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x8ced37d7
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Glow.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x3975dea0
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier_Mult.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xd6c40879
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_AreaRing.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x297f0005
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_sparkles.dds"
            }
            VfxAssetRemap {
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_GroundGlow_Top.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x0d3a4feb
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_Color.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xeb6a9f53
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier.dds"
            }
        }
    }
    "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_runeTimer_bot" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 320
                }
                isSingleParticle: flag = true
                emitterName: string = "runeTimeGlow"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_chaos_inhibitor_respawn_base.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.90196085 }
                }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -90, 0 }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRUAP_Chaos_Inhibitor_RuneCountdown_glow.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00167999999, 0 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 7
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            7
                        }
                    }
                }
                emitterName: string = "pulseTimer"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_chaos_inhibitor_respawn_base.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.800000072 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.800000012
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.800000072 }
                        }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.5
                            0.699999988
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0, 1, -0 }
                            { 1, 1, 1, 0.294102013 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0.294102013 }
                            { 0, 0, 1, -0 }
                        }
                    }
                }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -90, 0 }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRUAP_Chaos_Inhibitor_RuneCountdown.dds"
            }
        }
        particleName: string = "SRUAP_Chaos_Inhibitor_runeTimer_bot"
        particlePath: string = "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_runeTimer_bot"
        flags: u8 = 133
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0xaa3a888f
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Order_Inhibitor_RuneCountdown_glow.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x37d25f93
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Order_Inhibitor_RuneCountdown.dds"
            }
        }
    }
    "Maps/Particles/SR/SRU_RiverPlane_North_04" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                emitterName: string = "WaterPlaneNorth"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_riverplane_north_04.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -10000
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_RiverPlane_South_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.00100000005, 0.0149999997 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_RiverPlane_South_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00499999989, 0.0120000001 }
                }
            }
        }
        visibilityRadius: f32 = 350
        particleName: string = "SRU_RiverPlane_North_04"
        particlePath: string = "Maps/Particles/SR/SRU_RiverPlane_North_04"
    }
    "Maps/Particles/SR/SRU_Chaos_LaserTurret_Banner" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "flag"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_laserturret_banner.scb"
                    }
                }
                blendMode: u8 = 3
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_LaserTurret_banner.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00167999999, 0 }
                }
            }
        }
        particleName: string = "SRU_Chaos_LaserTurret_Banner"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_LaserTurret_Banner"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x77e02aa6
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_LaserTurret_banner_blue.dds"
            }
        }
    }
    "Maps/Particles/SR/SRUAP_Chaos_Nexus_idle" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "sparkles1"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -0.5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.899999976
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -0.5, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 0, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 3, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 3, 0 }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 1.10000002
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_order_crystalemitter.scb"
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 45, 45, 45 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.400000006
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 45, 45, 45 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_brightSparks.NexusBlitzSummer2020.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    15
                }
                emitterName: string = "structureGlow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 10, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_structureglow.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.149019614 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.5, 1.5, 1.5 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_Color.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "Temp_Mesh"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 200, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_nexus_ambientglowgeo.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0, 0, 1 }
                            { 1, 1, 1, 1 }
                            { 0, 0, 0, 1 }
                        }
                    }
                }
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnelColor: vec4 = { -1, -1, -1, 0 }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 5 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.899999976
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_wispies.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.100000001, 0 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "Temp_Mesh1"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 200, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_nexus_ambientglowgeo.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.635294139, 0.549019635, 0.501960814, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0, 0, 1 }
                            { 1, 1, 1, 1 }
                            { 0, 0, 0, 1 }
                        }
                    }
                }
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnelColor: vec4 = { -1, -1, -1, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 5 }
                }
                texture: string = "ASSETS/Shared/Particles/SRUAP_ChaosNexus_redSquare.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.200000003, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.200000003, 0 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                texDiv: vec2 = { 0.5, 0.5 }
            }
        }
        particleName: string = "SRUAP_Chaos_Nexus_idle"
        particlePath: string = "Maps/Particles/SR/SRUAP_Chaos_Nexus_idle"
        buildUpTime: f32 = 5
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x7a297abf
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_brightSparks.NexusBlitzSummer2020.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x0d3a4feb
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_Color.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x5707855a
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_wispies.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x136256a4
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_OrderNexus_blueSquare.dds"
            }
        }
    }
    "Maps/Particles/SR/SRU_Order_WispFly" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                }
                particleLinger: option[f32] = {
                    16
                }
                emitterName: string = "wispFly"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 15
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_emitter_plane.scb"
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_wispfly.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.200000003 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.200000003 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 225, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_wispFly.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.150000006, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.150000006, 0 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 20
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            20
                        }
                    }
                }
                particleLinger: option[f32] = {
                    30
                }
                emitterName: string = "motes"
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 2, 0, 2 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2, 0, 2 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 500, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 1.00000012, 0, 0 }
                        { 0, 1.00000012, 0 }
                    }
                }
                emissionMeshScale: f32 = 15
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_emitter_plane.scb"
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.149019614 }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 10, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 10, 10, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_platform_godRaySparkles.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        visibilityRadius: f32 = 500
        particleName: string = "SRU_Order_WispFly"
        particlePath: string = "Maps/Particles/SR/SRU_Order_WispFly"
    }
    "Maps/Particles/SR/SRU_Chaos_BaseDoor_Glow" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                emitterName: string = "Glow"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_basedoor_glow.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 5
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Glow.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.300000012, -0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.300000012, -0.5 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_Chaos_BaseDoor_Glow"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_BaseDoor_Glow"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x8ced37d7
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Glow.dds"
            }
        }
    }
    "Maps/Particles/SR/Audio-Emitter_SRU_Orderbase_Waterfalls" = VfxSystemDefinitionData {
        simpleEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                particleLinger: option[f32] = {
                    10
                }
                emitterName: string = "empty"
                particleColorTexture: string = "ASSETS/Shared/Particles/Black.DDS"
                meshRenderFlags: u8 = 0
                texture: string = "ASSETS/Shared/Particles/Black.DDS"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        particleName: string = "Audio-Emitter_SRU_Orderbase_Waterfalls"
        particlePath: string = "Maps/Particles/SR/Audio-Emitter_SRU_Orderbase_Waterfalls"
        soundPersistentDefault: string = "Play_sfx_Env_Map11_Emitter_orderbase_watefalls"
        flags: u8 = 164
    }
    "Maps/Particles/SR/SRU_Chaos_Platform_watertroff_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Waterfall_plane"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_watertroff_plane_01.scb"
                    }
                }
                blendMode: u8 = 1
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_01.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.200000003 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_plane_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.400000006 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                emitterName: string = "WhiteFalls"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 5, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_watertroff_plane_01.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.725993991 }
                }
                pass: i16 = 20
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.349999994 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.25 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6.5
                }
                emitterName: string = "ShoreTop"
                importance: u8 = 0
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_platform_watertroff_edge_01.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 0.333332986, 0.666666985, 1, 0 }
                            { 0.333332986, 1, 1, 1 }
                            { 0.333332986, 0.666666985, 1, 1 }
                            { 0.333332986, 0.666666985, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.100000001
                                    0.100001
                                }
                                keyValues: list[f32] = {
                                    0
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_TopFoam_01.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.400000006 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_TopFoam_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.20000005 }
                }
            }
        }
        particleName: string = "SRU_Chaos_Platform_watertroff_01"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_Platform_watertroff_01"
    }
    "Maps/Particles/SR/SRU_Order_platform_godrays" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.150000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 15
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            15
                        }
                    }
                }
                emitterName: string = "godRays_geo"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_platform_godrays.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_platform_godRays.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.00999999978 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.25
                                    0.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -0.00999999978 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, 1 }
                        }
                    }
                }
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0250000004, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.0250000004, 0 }
                        }
                    }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                texDivMult: vec2 = { 0.5, 0.5 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 40
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "sparkles"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 50, -15, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, -15, 0 }
                        }
                    }
                }
                drag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_order_platform_godrays.scb"
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.25 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 15, 15, 15 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 15, 15, 15 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_platform_godRaySparkles.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        visibilityRadius: f32 = 450
        particleName: string = "SRU_Order_platform_godrays"
        particlePath: string = "Maps/Particles/SR/SRU_Order_platform_godrays"
    }
    "Maps/Particles/SR/SRUAP_Order_BaseDoor_Top" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "AreaSphere"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_areasphere2.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 0.800000012, 0.800000012, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 235, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00999999978, 0.200000003 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.00999999978, 0.200000003 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier_Mult.dds"
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "AreaDisc"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_arearing.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.5, 0.5, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.5, 0.5, 1, 0 }
                            { 0.5, 0.5, 1, 1 }
                            { 0, 0, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 235, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00999999978, -0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.00999999978, -0.5 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier_Mult.dds"
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.239999995
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 7.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            7.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.5
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "AreaRing"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_areasphere.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.400000006
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 0.5, 1, 0.5, 0.400000006 }
                            { 1, 1, 1, 1.03529406 }
                            { 1, 1, 1, 1 }
                            { 0.300000012, 1, 0.300000012, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 240, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_AreaRing.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00300000003, 0 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 8
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            8
                        }
                    }
                }
                particleLinger: option[f32] = {
                    18
                }
                emitterName: string = "sparkles"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                drag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 8, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 8, 0 }
                        }
                    }
                }
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_meshemit.scb"
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.701960802 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.768626988, 0.847059011, 0.87450999, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.768626988, 0.847059011, 0.87450999, 0 }
                            { 0.768626988, 0.847059011, 0.87450999, 1 }
                            { 0.768626988, 0.847059011, 0.87450999, 1 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 35, 35, 35 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 35, 35, 35 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_sparkles.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 9
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            9
                        }
                    }
                }
                particleLinger: option[f32] = {
                    19
                }
                emitterName: string = "sparkles3"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                drag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 8, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 8, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { -210, 0, 20 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 1 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -20
                                        20
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 1 }
                            }
                        }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.701960802 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.333332986, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 25, 25 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 25, 25 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_sparkles.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 9
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            9
                        }
                    }
                }
                particleLinger: option[f32] = {
                    19
                }
                emitterName: string = "sparkles4"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                drag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 8, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 8, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 185, 0, -60 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 0, 1 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -20
                                        20
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 1 }
                            }
                        }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.701960802 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.333332986, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 25, 25 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 25, 25 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_sparkles.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 7
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            7
                        }
                    }
                }
                particleLinger: option[f32] = {
                    17
                }
                emitterName: string = "structureGlow"
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_order_basedoor_glow.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.149019614 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.29999995, 1.29999995, 1.29999995 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_Color.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "OutSide_AreaDisc"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_arearing2.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.5, 0.5, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.5, 0.5, 1, 0 }
                            { 0.5, 0.5, 1, 1 }
                            { 0, 0, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -120, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00999999978, -0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.00999999978, -0.5 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier_Mult.dds"
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 16
                }
                particleLinger: option[f32] = {
                    26
                }
                emitterName: string = "structureGlow2"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { -34, -26, -36 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_groundglow_top.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0500000007
                            0.5
                            0.949999988
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.474999994 }
                            { 1, 1, 1, 0.5 }
                            { 1, 1, 1, 0.5 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_GroundGlow_Top.dds"
            }
        }
        particleName: string = "SRUAP_Order_BaseDoor_Top"
        particlePath: string = "Maps/Particles/SR/SRUAP_Order_BaseDoor_Top"
        soundOnCreateDefault: string = "Play_sfx_S5_VoidGateSpawn_cast"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x39708713
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Glow.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xf34d1760
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Barrier_Mult.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x13816339
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_AreaRing.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xf7c19ac5
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_sparkles.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xd9f0ddc8
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_GroundGlow_Top_red.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xb24905ab
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_Color.dds"
            }
        }
    }
    "Maps/Particles/SR/SRU_Fog_GroundCover_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                }
                particleLinger: option[f32] = {}
                emitterLinger: option[f32] = {
                    1
                }
                emitterName: string = "GroundCover"
                importance: u8 = 0
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/SRU_Fog_GroundCover_01.sco"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.150000006 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRU_Fog_GroundCover_01.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, 0.00999999978 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Fog_GroundCover_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, 0.109999999 }
                }
            }
        }
        particleName: string = "SRU_Fog_GroundCover_01"
        particlePath: string = "Maps/Particles/SR/SRU_Fog_GroundCover_01"
    }
    "Maps/Particles/SR/SRU_Chaos_LaserTurret_ChestGlow" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "flag"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_laserturret_chestglow.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.698039234 }
                }
                pass: i16 = 1
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_LaserTurret_ChestGlow.dds"
            }
        }
        particleName: string = "SRU_Chaos_LaserTurret_ChestGlow"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_LaserTurret_ChestGlow"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x0c8f8442
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_LaserTurret_ChestGlow_blue.dds"
            }
        }
    }
    "Maps/Particles/SR/SRU_River_GrassRipple_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                }
                emitterName: string = "WaterPlane1"
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/SRU_river_grassripple_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -8000
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 255, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.400000006
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.400000006
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_River_GrassRipple_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.300000012 }
                }
            }
        }
        visibilityRadius: f32 = 150
        particleName: string = "SRU_River_GrassRipple_01"
        particlePath: string = "Maps/Particles/SR/SRU_River_GrassRipple_01"
    }
    "Maps/Particles/SR/SRU_River_GrassRipple_03" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                }
                emitterName: string = "WaterPlane1"
                importance: u8 = 0
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/SRU_river_grassripple_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.643106997 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -8000
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, -180, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.400000006
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.400000006
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_River_GrassRipple_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.300000012 }
                }
            }
        }
        visibilityRadius: f32 = 150
        particleName: string = "SRU_River_GrassRipple_03"
        particlePath: string = "Maps/Particles/SR/SRU_River_GrassRipple_03"
    }
    "Maps/Particles/SR/SRX_Braziers_Cloud" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "Glow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 25, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Particles/DefaultColorOverlifetime.TFT_Set4_Act2.dds"
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.988235295, 0.988235295, 0.988235295, 0.600000024 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.454901963, 0.643137276, 0.662745118, 0 }
                            { 0.130006865, 0.600000024, 0.790005326, 0.409994662 }
                            { 0.850980401, 0.909803927, 0.639215708, 0 }
                        }
                    }
                }
                pass: i16 = -100
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 125, 150, 10 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1.10000002, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/URF_Big_Glow.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                emitterName: string = "Ash"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -1, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 0, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -25, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        1
                                        1.5
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, -25, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 5, 150, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0.800000012
                                        1.29999995
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 5, 150, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 1, 0, 0 }
                    }
                }
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.600000024 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.800000012
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.600000024 }
                        }
                    }
                }
                pass: i16 = -5
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                directionVelocityScale: f32 = 0.00100000005
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 10, 10 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.75
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.25
                                    0.75
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 4, 10, 10 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 3, 3 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0, 3, 3 }
                            { 3, 3, 3 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Galio_speed_spark_mis.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.75
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.75
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "Bowl_Wind"
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SR/SRX_Cloud_Brazier_Fill.SRX_FX.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.820004582 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.820004582 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.831372559, 1, 0.988235295, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.831372559, 1, 0.988235295, 0 }
                            { 0.831372559, 1, 0.988235295, 0.779995441 }
                            { 0.831372559, 1, 0.988235295, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.20000005, 1.39999998, 1.20000005 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.899999976
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.899999976
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.899999976
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1.20000005, 1.39999998, 1.20000005 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Cloud_Terrain_Buff_v2.SRX_FX.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -1.04999995, 0.75 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -1.04999995, 0.75 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                uvScale: embed = ValueVector2 {
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emitterName: string = "Shadow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -25, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Particles/DefaultColorOverlifetime.TFT_Set4_Act2.dds"
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.0588235296, 0.258823544, 0.384313732, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.819607854 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 125, 150, 10 }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Syndra_Skin02_SoftCircle.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Burst_Glow"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                particleColorTexture: string = "ASSETS/Particles/DefaultColorOverlifetime.TFT_Set4_Act2.dds"
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.990005314, 0.990005314, 0.990005314, 0.960006118 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0.454901963, 0.643137276, 0.662745118, 0 }
                            { 0.130006865, 0.600000024, 0.790005326, 1 }
                            { 0.0299992375, 0.400000006, 0.910002291, 0 }
                        }
                    }
                }
                pass: i16 = 100
                depthBiasFactors: vec2 = { -1, -50 }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 90 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 425, 120, 10 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1.5, 0.400000006, 1 }
                            { 1.64999998, 0, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRX_Brazier_HalfGlow_Burst.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Burst_Sparkles"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -8, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -8, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 0, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 100, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 100, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -25, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        1
                                        1.5
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, -25, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 5, 650, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0.800000012
                                        1.29999995
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 5, 650, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 1, 0, 0 }
                    }
                }
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.600000024 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.800000012
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.600000024 }
                        }
                    }
                }
                pass: i16 = -5
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                directionVelocityScale: f32 = 0.00100000005
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 4, 10, 10 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.75
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.25
                                    0.75
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 4, 10, 10 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 3, 3 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 3, 3, 3 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Galio_speed_spark_mis.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Shadow1"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -35, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                particleColorTexture: string = "ASSETS/Particles/DefaultColorOverlifetime.TFT_Set4_Act2.dds"
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.235294119, 0.235294119, 0.235294119, 1 }
                }
                pass: i16 = -2
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 75, 125, 10 }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Syndra_Skin02_SoftCircle.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 8
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 50, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -35, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.379995435 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.669993162 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.669993162 }
                            { 1, 1, 1, 0.669993162 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 90, 360, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 360, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 1, 1 }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 2, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0.00741525413
                            0.137084574
                            0.413281471
                            0.636636853
                            0.91490078
                            0.967003942
                            1
                        }
                        values: list[vec3] = {
                            { 1.4894737, 1, 1 }
                            { 0.589473665, 0.804025412, 0.804025412 }
                            { 0.547368407, 0.587229192, 0.587229192 }
                            { 0.757894754, 0.363658696, 0.363658696 }
                            { 1.15789473, 0.0851289332, 0.0851289332 }
                            { 1.55789471, 0.0330075994, 0.0330075994 }
                            { 2, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRX_Brazier_Cloud_Swirl_Test.SRX_FX.dds"
            }
        }
        particleName: string = "SRX_Braziers_Cloud"
        particlePath: string = "Maps/Particles/SR/SRX_Braziers_Cloud"
        soundOnCreateDefault: string = "Play_sfx_Env_Map11_SRX_Brazier_Activate_buffactivate"
        soundPersistentDefault: string = "Play_sfx_Env_Map11_SRX_Cloud_Dragon_Brazier"
        flags: u8 = 228
    }
    "Maps/Particles/SR/SRU_River_North_Shore_05" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.5
                }
                emitterName: string = "Shore_03"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_river_north_shore_05.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -8000
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_River_Shore_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0700000003, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_RiverEdging_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.400000006 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                emitterName: string = "Shore_04"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_river_north_shore_05.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -8000
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_River_Shore_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0700000003, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_RiverEdging_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.200000003 }
                }
            }
        }
        visibilityRadius: f32 = 350
        particleName: string = "SRU_River_North_Shore_05"
        particlePath: string = "Maps/Particles/SR/SRU_River_North_Shore_05"
    }
    "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_idle" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    15
                }
                emitterName: string = "ambientGlow"
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 3, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 3, 0 }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_inhibitor_mage_emit.scb"
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.349019617 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0.600000024 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 450, 450, 450 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 450, 450, 450 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.600000024, 0.600000024, 1 }
                            { 1, 1.20000005, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_chaos_ambientGlow.ARAM_VFX_Update.dds"
                textureMult: string = "ASSETS/Shared/Particles/SRU_Chaos_sparklesMult.ARAM_VFX_Update.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0500000007, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.0500000007, 0 }
                        }
                    }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                texDivMult: vec2 = { 0.5, 0.5 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            6
                        }
                    }
                }
                particleLinger: option[f32] = {
                    16
                }
                emitterName: string = "fireLine"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -300, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveRay {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.400000006 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.400000006 }
                            { 1, 1, 1, 0.24000001 }
                            { 0.5, 0.5, 1, 0 }
                        }
                    }
                }
                pass: i16 = 3
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { -90, 0, 90 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 800, 1300, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0.800000012, 0 }
                            { 1, 1, 0 }
                            { 0, 1.29999995, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_Laser.ARAM_VFX_Update.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "sparkles1"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -0.300000012, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.899999976
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -0.300000012, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 60, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 60, 0, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 5, 0 }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_chaos_inhibitor_emit.scb"
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 0, 0, 0 }
                        }
                    }
                }
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 65, 65, 65 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 65, 65, 65 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_Sparks.ARAM_VFX_Update.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                emitterName: string = "runeBinding"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 200, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -0.300000012
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 200, 0 }
                            }
                        }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_chaos_runebinding.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 4
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 360, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.5, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_supertrail.ARAM_VFX_Update.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.300000012, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.300000012, 0 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 0 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Chaos_sparklesMult.ARAM_VFX_Update.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                texDivMult: vec2 = { 0.5, 1 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    15
                }
                emitterName: string = "structureGlow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 10, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_structureglow.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.0980392247 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_Color.dds"
            }
        }
        particleName: string = "SRUAP_Chaos_Inhibitor_idle"
        particlePath: string = "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_idle"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x20e7a040
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_Sparks.ARAM_VFX_Update.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xb6c33461
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_ambientGlow.ARAM_VFX_Update.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xa641f523
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_sparklesMult.ARAM_VFX_Update.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x0d3a4feb
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_Color.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xbe4c0a70
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_clouds.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x216aa66f
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_Laser.ARAM_VFX_Update.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xd79b89c3
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_trail.ARAM_VFX_Update.dds"
            }
        }
    }
    "Maps/Particles/SR/SRUAP_Order_BaseDoor_Bottom" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "AreaSphere"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_areasphere2.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 0.800000012, 0.800000012, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 305, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00999999978, 0.200000003 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.00999999978, 0.200000003 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier_Mult.dds"
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "AreaDisc"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_arearing.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.5, 0.5, 1, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.5, 0.5, 1, 0 }
                            { 0.5, 0.5, 1, 1 }
                            { 0, 0, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 305, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00999999978, -0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.00999999978, -0.5 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier_Mult.dds"
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 8
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            8
                        }
                    }
                }
                particleLinger: option[f32] = {
                    18
                }
                emitterName: string = "sparkles"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                drag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 8, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 8, 0 }
                        }
                    }
                }
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_meshemit2.scb"
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.701960802 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.768626988, 0.847059011, 0.87450999, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.768626988, 0.847059011, 0.87450999, 0 }
                            { 0.768626988, 0.847059011, 0.87450999, 1 }
                            { 0.768626988, 0.847059011, 0.87450999, 1 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 35, 35, 35 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 35, 35, 35 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_sparkles.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    15
                }
                emitterName: string = "structureGlow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { -110, 50, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sruap_order_basedoor_glow.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.149019614 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_Color.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.239999995
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 7.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            7.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.5
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "AreaRing"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_areasphere.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.400000006
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 0.5, 1, 0.5, 0.349999994 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0.975000024 }
                            { 0.300000012, 1, 0.300000012, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -55, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_AreaRing.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00300000003, 0 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 9
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            9
                        }
                    }
                }
                particleLinger: option[f32] = {
                    19
                }
                emitterName: string = "sparkles3"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                drag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 8, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 8, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { -70, 0, 200 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -20
                                        20
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 0, 0 }
                            }
                        }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.701960802 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.333332986, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 25, 25 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 25, 25 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_sparkles.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2.5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    0.200000003
                }
                emitterLinger: option[f32] = {
                    0.5
                }
                emitterName: string = "OutSide_AreaDisc"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_barrier_arearing2.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 0, 0, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 305, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.00999999978, -0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.00999999978, -0.5 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Barrier_Mult.dds"
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 16
                }
                particleLinger: option[f32] = {
                    26
                }
                emitterName: string = "structureGlow2"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { -166, -36.5, 13 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_groundglow_top.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0500000007
                            0.5
                            0.949999988
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.474999994 }
                            { 1, 1, 1, 0.5 }
                            { 1, 1, 1, 0.5 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_GroundGlow_Bottom.dds"
            }
        }
        particleName: string = "SRUAP_Order_BaseDoor_Bottom"
        particlePath: string = "Maps/Particles/SR/SRUAP_Order_BaseDoor_Bottom"
        soundOnCreateDefault: string = "Play_sfx_S5_VoidGateSpawn_cast"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x39708713
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Glow.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xf34d1760
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Barrier_Mult.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x13816339
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_AreaRing.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xf7c19ac5
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_sparkles.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x0eaaba20
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_GroundGlow_Bottom_red.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xb24905ab
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_Color.dds"
            }
        }
    }
    "Maps/Particles/SR/SRU_Sjungle_ButterFlyGlow_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 8
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[f32] = {
                            8
                            0
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.899999976
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1.20000005
                                    2.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11
                }
                emitterName: string = "sparktrail"
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -200, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -200, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 10, 25, 10 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 10, 25, 10 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 0.984314024, 1, 0, 1 }
                            { 0, 0, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 8, 8, 8 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.899999976
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    0.699999988
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 8, 8, 8 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.400000006
                            0.600000024
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 0.300000012, 0.300000012, 0.300000012 }
                            { 0, 0, 0 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Sjungle_ButterFlyGlow_01.TFT_Set4.dds"
            }
        }
        particleName: string = "SRU_Sjungle_ButterFlyGlow_01"
        particlePath: string = "Maps/Particles/SR/SRU_Sjungle_ButterFlyGlow_01"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRU_Order_fogBase_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.0700000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 18
                }
                emitterName: string = "GeoBot"
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_fogbase_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.400000006 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.400000006 }
                            { 1, 1, 1, 0.400000006 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRU_Pally_FogBase_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.140000001, -0.140000001 }
                }
            }
        }
        visibilityRadius: f32 = 251
        particleName: string = "SRU_Order_fogBase_01"
        particlePath: string = "Maps/Particles/SR/SRU_Order_fogBase_01"
    }
    "Maps/Particles/SR/SRUAP_Order_Inhibitor_Idle" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                emitterName: string = "ambientGlow"
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 0.25, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0.25, 0 }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0.699999988
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_pallybase_nexus_crystalemitter.scb"
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.501960814 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 750, 750, 750 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 750, 750, 750 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.600000024, 0.600000024, 1 }
                            { 1, 1.20000005, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_ambientGlow.ARAM_VFX_Update.dds"
                textureMult: string = "ASSETS/Shared/Particles/SRU_Order_sparklesMult.ARAM_VFX_Update.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0500000007, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.0500000007, 0 }
                        }
                    }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                texDivMult: vec2 = { 0.5, 0.5 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                emitterName: string = "sparkles1"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -1.5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.899999976
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -1.5, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 0, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 3, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 3, 0 }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 0.699999988
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_order_crystalemitter.scb"
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 45, 45, 45 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.400000006
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 45, 45, 45 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_brightSparks.NexusBlitzSummer2020.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLinger: option[f32] = {
                    1
                }
                emitterName: string = "rayMesh"
                shape: embed = VfxShape {
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 1.00000012, 0, 0 }
                        { 0, 1.00000012, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_inhibitor_pali_raygeo.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.501960814 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.497992992 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_clouds.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.200000003, 0.100000001 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.200000003, 0.100000001 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            6
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                emitterName: string = "fireLine"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -350, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveRay {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.501960814 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 0.5, 0.5, 1, 0 }
                        }
                    }
                }
                pass: i16 = 3
                miscRenderFlags: u8 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { -90, 0, 90 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 300, 1200, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0.800000012, 0 }
                            { 1, 1, 0 }
                            { 0, 1.29999995, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_ambientGlow.ARAM_VFX_Update.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    15
                }
                emitterName: string = "structureGlow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 10, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_structureglow.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.0980392247 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_Color.dds"
            }
        }
        visibilityRadius: f32 = 2000
        particleName: string = "SRUAP_Order_Inhibitor_Idle"
        particlePath: string = "Maps/Particles/SR/SRUAP_Order_Inhibitor_Idle"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0xa45882ff
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_brightSparks.NexusBlitzSummer2020.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xfc8454a1
                newAsset: string = "ASSETS/Shared/Particles/SRU_chaos_ambientGlow.ARAM_VFX_Update.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xd2ad5863
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_sparklesMult.ARAM_VFX_Update.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xb24905ab
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_Color.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x51570230
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_clouds.dds"
            }
        }
    }
    "Maps/Particles/SR/Sru_braziers_fire_temp" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 20
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    2
                }
                emitterName: string = "Fire"
                birthAcceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 300, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 300, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 20, 10, 20 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 20, 10, 20 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 45
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0.800000012 }
                            { 1, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = 2
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    0
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 35, 35, 35 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 35, 35, 35 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            1
                        }
                        values: list[vec3] = {
                            { 0.600000024, 0.600000024, 0.600000024 }
                            { 1, 1, 1 }
                            { 0.600000024, 0.600000024, 0.600000024 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Brazier_Flame_Temp_01.TFT_Set5_Carousel.DDS"
                numFrames: u16 = 8
                texDiv: vec2 = { 4, 2 }
                textureMult: string = "ASSETS/Shared/Particles/Env_MB_brazierFire_mult.SRI_Slots.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.25 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                texDivMult: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2.5
                        }
                    }
                }
                emitterName: string = "baseGlow"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -1, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 0.5, 0.5, 0.5 }
                            { 1, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = 1
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 80, 80 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.5, 0.5, 0.5 }
                            { 0.75, 0.75, 0.75 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_brazierFire_glow.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.20000005
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.20000005
                        }
                    }
                }
                particleLinger: option[f32] = {
                    11.1999998
                }
                emitterName: string = "sparks"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0.400000006, 0.400000006, 0.400000006 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0.400000006, 0.400000006, 0.400000006 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 250, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 250, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0.600000024, 0.600000024, 0.600000024 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 25, -25, 25 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 25, -25, 25 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 45
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 0, 0, 0 }
                        }
                    }
                }
                pass: i16 = 1
                isDirectionOriented: flag = true
                isRandomStartFrame: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 20, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 0.5, 0 }
                            { 0.200000003, 0.200000003, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Env_MB_brazierFire_Ash_01.TFT_Set4.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2.5
                        }
                    }
                }
                emitterName: string = "Smoke"
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                }
                birthAcceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 150, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 150, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 30, 20, 10 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 30, 20, 10 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 25
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 0.227450997, 0 }
                            { 0.901961029, 0.890196025, 0.713724971, 0.298038989 }
                            { 0.74901998, 0.745097995, 0.55686301, 0.0980390012 }
                            { 0.290196002, 0.478430986, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                isDirectionOriented: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 70, 70, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 70, 70, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            1
                        }
                        values: list[vec3] = {
                            { 0.600000024, 0.200000003, 0.600000024 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/Env_MB_brazier_dust.VFX_Update_SS_Ignite.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.400000006 }
                }
                textureMult: string = "ASSETS/Shared/Particles/Env_MB_brazier_dust_mult.VFX_Update_SS_Ignite.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.25 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    0
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    0
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.0799999982
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 22
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            22
                        }
                    }
                }
                emitterName: string = "FireGlow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 10, 0 }
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.349999994
                            0.449999988
                            0.550000012
                            0.649999976
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.550000012 }
                            { 1, 1, 1, 0.850000024 }
                            { 1, 1, 1, 0.600000024 }
                            { 1, 1, 1, 0.600000024 }
                            { 1, 1, 1, 0.850000024 }
                            { 1, 1, 1, 0.550000012 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 5
                miscRenderFlags: u8 = 1
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 151, 151, 151 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Brazier_Glow_01.dds"
            }
        }
        particleName: string = "Sru_braziers_fire_temp"
        particlePath: string = "Maps/Particles/SR/Sru_braziers_fire_temp"
        soundPersistentDefault: string = "Play_sfx_Env_Map11_Emitter_firebig"
    }
    "Maps/Particles/SR/Audio-Emitter_SRU_VistaWindBuffets" = VfxSystemDefinitionData {
        simpleEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                particleLinger: option[f32] = {
                    10
                }
                emitterName: string = "empty"
                particleColorTexture: string = "ASSETS/Shared/Particles/Black.DDS"
                meshRenderFlags: u8 = 0
                texture: string = "ASSETS/Shared/Particles/Black.DDS"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        particleName: string = "Audio-Emitter_SRU_VistaWindBuffets"
        particlePath: string = "Maps/Particles/SR/Audio-Emitter_SRU_VistaWindBuffets"
        soundPersistentDefault: string = "Play_sfx_Env_Map11_Emitter_vistawindbuffets"
        flags: u8 = 132
    }
    "Maps/Particles/SR/Audio-Emitter_SRU_ChaosLaserTurret_Trough_Waterfall" = VfxSystemDefinitionData {
        simpleEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                particleLinger: option[f32] = {
                    10
                }
                emitterName: string = "empty"
                particleColorTexture: string = "ASSETS/Shared/Particles/Black.DDS"
                meshRenderFlags: u8 = 0
                texture: string = "ASSETS/Shared/Particles/Black.DDS"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        particleName: string = "Audio-Emitter_SRU_ChaosLaserTurret_Trough_Waterfall"
        particlePath: string = "Maps/Particles/SR/Audio-Emitter_SRU_ChaosLaserTurret_Trough_Waterfall"
        soundPersistentDefault: string = "Play_sfx_Env_Map11_Emitter_chaoslaserturret_trough_watefall"
        flags: u8 = 164
    }
    "Maps/Particles/SR/SRU_Order_BaseDoor_GlowChild_Red" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.100000001
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                emitterName: string = "GlowChild"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_glowchild.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 5
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Glow.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.300000012, -0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.300000012, -0.5 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_Order_BaseDoor_GlowChild_Red"
        particlePath: string = "Maps/Particles/SR/SRU_Order_BaseDoor_GlowChild_Red"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x8ced37d7
                newAsset: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Glow.dds"
            }
        }
    }
    "Maps/Particles/SR/SRU_RaptorNest_Magic_02" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 15
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            15
                        }
                    }
                }
                particleLinger: option[f32] = {
                    25
                }
                emitterName: string = "sparkles"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                drag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 3, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 3, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -49, 0 }
                    }
                }
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_raptornest_base_01.scb"
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.149020001, 0, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 35, 35, 35 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    0.898999989
                                    0.899999976
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    0.5
                                    0.600000024
                                    0.600000024
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 35, 35, 35 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_RaptorNest_Sparkles_01.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.0299999993
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 20
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            20
                        }
                    }
                }
                emitterName: string = "GlowBot"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_raptornest_glow_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 0.666666985, 0.498039007, 0.572548985 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, -20 }
                }
                birthScale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_RaptorNest_Glow_2.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0500000007, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Wjungle_Magic_GlowBot_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.00999999978, 0.0500000007 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    -0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.39999998
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    -1
                                    -0
                                }
                                keyValues: list[f32] = {
                                    1.39999998
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.00999999978, 0.0500000007 }
                        }
                    }
                }
            }
        }
        visibilityRadius: f32 = 150
        particleName: string = "SRU_RaptorNest_Magic_02"
        particlePath: string = "Maps/Particles/SR/SRU_RaptorNest_Magic_02"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRU_RaptorNest_Magic_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 15
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            15
                        }
                    }
                }
                particleLinger: option[f32] = {
                    25
                }
                emitterName: string = "sparkles"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                drag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 3, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 3, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -49, 0 }
                    }
                }
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_raptornest_base_01.scb"
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            1
                        }
                        values: list[vec4] = {
                            { 1, 0.149020001, 0, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 35, 35, 35 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    0.898999989
                                    0.899999976
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    0.5
                                    0.600000024
                                    0.600000024
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 35, 35, 35 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_RaptorNest_Sparkles_01.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.0299999993
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 20
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            20
                        }
                    }
                }
                emitterName: string = "GlowBot"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_raptornest_glow_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 0.666666985, 0.498039007, 0.572548985 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_RaptorNest_Glow_2.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0500000007, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Wjungle_Magic_GlowBot_Mult_01.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.00999999978, 0.0500000007 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    -0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.39999998
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    -1
                                    -0
                                }
                                keyValues: list[f32] = {
                                    1.39999998
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.00999999978, 0.0500000007 }
                        }
                    }
                }
            }
        }
        visibilityRadius: f32 = 150
        particleName: string = "SRU_RaptorNest_Magic_01"
        particlePath: string = "Maps/Particles/SR/SRU_RaptorNest_Magic_01"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRX_Braziers_Ocean" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.200000003
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                }
                emitterName: string = "BubbleConstant"
                importance: u8 = 2
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 25, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 10, 0, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 1 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Particles/DefaultColorOverlifetime.TFT_Set4_Act2.dds"
                blendMode: u8 = 4
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.576470613, 1, 0.839215696, 0.701960802 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.576470613, 1, 0.839215696, 0 }
                            { 0.576470613, 1, 0.839215696, 0.701960802 }
                            { 0.576470613, 1, 0.839215696, 0 }
                        }
                    }
                }
                pass: i16 = 10000
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 65, 55, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1.10000002, 1.10000002, 1.10000002 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Syndra_Skin02_idleShine.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 4
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emitterName: string = "Core"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 25, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 10, 0, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 1 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Particles/DefaultColorOverlifetime.TFT_Set4_Act2.dds"
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.792156875, 0.960784316, 0.886274517, 0 }
                            { 0.0588235296, 0.882352948, 0.498039216, 0.819607854 }
                            { 0.0274509806, 0.278431386, 0.396078438, 0 }
                        }
                    }
                }
                pass: i16 = 6
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 35, 150, 10 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                            { 1.25, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Syndra_Skin02_SoftCircle.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emitterName: string = "Shadow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 25, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Particles/DefaultColorOverlifetime.TFT_Set4_Act2.dds"
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.650003791 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.454901963, 0.643137276, 0.662745118, 0 }
                            { 0.192156866, 0.87843138, 0.729411781, 0.298039228 }
                            { 0.105882354, 0.964705884, 0.53725493, 0 }
                        }
                    }
                }
                pass: i16 = -100
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 120, 120, 10 }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Syndra_Skin02_SoftCircle.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 15
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.899999976
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 2000
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 10
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 10
                            }
                            axisFraction: vec3 = { 1, 1, 1 }
                        }
                    }
                }
                emitterName: string = "WaterBubbles"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 70, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 70, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 25, 12, 25 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        0.200000003
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 25, 12, 25 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Particles/DefaultColorOverlifetime.TFT_Set4_Act2.dds"
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.215686277, 0.937254906, 1, 0.701960802 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0.215686277, 0.937254906, 1, 0 }
                            { 0.215686277, 0.937254906, 1, 0.701960802 }
                            { 0.215686277, 0.937254906, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 8, 8, 100 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.25
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 8, 8, 100 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.300000012, 0.300000012, 0.300000012 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Syndra_Skin02_TinyBubble.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Waterball"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 25, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SR/SRX_Ocean_Brazier_WaterBall.SRX_FX.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.223529413, 0.611764729, 0.431372553, 1 }
                }
                pass: i16 = 2
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.100000001
                    fresnelColor: vec4 = { 0.0588235296, 0.827450991, 0.827450991, 1 }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 360, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 25, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.25, 1, 1 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.349999994 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Shadow1"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 10, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Particles/DefaultColorOverlifetime.TFT_Set4_Act2.dds"
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.0274509806, 0.152941182, 0.0784313753, 1 }
                }
                pass: i16 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 60, 150, 10 }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Cloud_DrakePit_Distort_Tex.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                emitterName: string = "Waterglob_01"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 45, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 25, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 25, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 25, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SR/SRX_Ocean_Brazier_Waterglob_01.SRX_FX.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.858823538, 1, 0.984313726, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.227450982, 0.905882359, 0.65882355, 1 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                pass: i16 = 2
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.100000001
                    fresnelColor: vec4 = { 0.0862745121, 0.97647059, 0.97647059, 0.870588243 }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 360, 360, 360 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 360, 360, 360 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 90, 90 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 90, 90, 90 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.64999998, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1.64999998, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                }
            }
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 1
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            5
                        }
                    }
                }
                emitterName: string = "Waterglob_2"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 45, 0 }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 25, 0 }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 50, 25, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 50, 25, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SR/SRX_Ocean_Brazier_Waterglob_01.SRX_FX.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.858823538, 1, 0.984313726, 1 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec4] = {
                            { 0.20784314, 1, 0.643137276, 1 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                pass: i16 = 2
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnel: f32 = 0.100000001
                    fresnelColor: vec4 = { 0.0862745121, 0.97647059, 0.97647059, 0.870588243 }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 360, 360, 360 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 360, 360, 360 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 90, 90 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 90, 90, 90 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 2, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 1 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Shadow2"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                particleColorTexture: string = "ASSETS/Particles/DefaultColorOverlifetime.TFT_Set4_Act2.dds"
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.141176477, 0.0588235296, 0.247058824, 1 }
                }
                pass: i16 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 40, 150, 10 }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Cloud_DrakePit_Distort_Tex.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                emitterName: string = "Light"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 10, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleColorTexture: string = "ASSETS/Particles/DefaultColorOverlifetime.TFT_Set4_Act2.dds"
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.149996191 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.635294139, 1, 0.850980401, 0 }
                            { 0.0784313753, 1, 1, 1 }
                            { 0.184313729, 0.223529413, 1, 0 }
                        }
                    }
                }
                pass: i16 = -1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 150, 10 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1.5, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Cloud_DrakePit_Distort_Tex.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Burst_Glow"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                particleColorTexture: string = "ASSETS/Particles/DefaultColorOverlifetime.TFT_Set4_Act2.dds"
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.990005314, 0.990005314, 0.990005314, 0.960006118 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0.403921574, 0.972549021, 0.670588255, 0 }
                            { 0.0901960805, 0.925490201, 0.576470613, 1 }
                            { 0.0274509806, 0.145098045, 0.4627451, 0 }
                        }
                    }
                }
                pass: i16 = 100
                depthBiasFactors: vec2 = { -1, -75 }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 90 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 425, 120, 10 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1.5, 0.400000006, 1 }
                            { 1.64999998, 0, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRX_Brazier_HalfGlow_Burst.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Burst_Sparkles"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 50 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 50 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 1, 3 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 200, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 200, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -25, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        1
                                        1.5
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, -25, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 5, 650, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0.800000012
                                        1.29999995
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 5, 650, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 1, 0, 0 }
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.600000024 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.800000012
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.600000024 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.0901960805, 0.611764729, 0.498039216, 1 }
                }
                pass: i16 = -5
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                directionVelocityScale: f32 = 0.00100000005
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 10, 10 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.75
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.25
                                    0.75
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 10, 10 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 3, 3 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 3, 3, 3 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Syndra_Skin02_TinyBubble.SRX_FX.dds"
            }
        }
        particleName: string = "SRX_Braziers_Ocean"
        particlePath: string = "Maps/Particles/SR/SRX_Braziers_Ocean"
        soundOnCreateDefault: string = "Play_sfx_Env_Map11_SRX_Brazier_Activate_buffactivate"
        soundPersistentDefault: string = "Play_sfx_Env_Map11_SRX_Ocean_Dragon_brazier"
        flags: u8 = 228
    }
    "Maps/Particles/SR/SRUAP_Order_laserTurret_idle" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "sparkles"
                birthVelocity: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                        }
                    }
                }
                drag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 3, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 3, 0 }
                        }
                    }
                }
                emissionMeshName: string = "ASSETS/Shared/Particles/sruap_order_laserturret_sparklesemit.scb"
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.701960802 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.768626988, 0.847059011, 0.87450999, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.768626988, 0.847059011, 0.87450999, 0 }
                            { 0.768626988, 0.847059011, 0.87450999, 1 }
                            { 0.768626988, 0.847059011, 0.87450999, 1 }
                        }
                    }
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 35, 35, 35 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 35, 35, 35 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_sparkles.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 15
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            15
                        }
                    }
                }
                particleLinger: option[f32] = {
                    25
                }
                emitterName: string = "ambientGlow"
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 0.25, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 0.25, 0 }
                        }
                    }
                }
                emissionMeshScale: f32 = 0.899999976
                emissionMeshName: string = "ASSETS/Shared/Particles/sruap_order_laserturret_sparklesemit.scb"
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 1
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 550, 550, 550 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 550, 550, 550 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.600000024, 0.600000024, 1 }
                            { 1, 1.20000005, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_ambientGlow.ARAM_VFX_Update.dds"
                textureMult: string = "ASSETS/Shared/Particles/SRU_Order_sparklesMult.ARAM_VFX_Update.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0500000007, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.0500000007, 0 }
                        }
                    }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                texDivMult: vec2 = { 0.5, 0.5 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 20
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            20
                        }
                    }
                }
                emitterName: string = "runeBinding"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 50, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 50, 0 }
                            }
                        }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_runebinding.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 4
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 25, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 25, 25, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_runeBinding.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0250000004, 0 }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 0 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Order_sparklesMult.ARAM_VFX_Update.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, 0 }
                }
                birthUVOffsetMult: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                texDivMult: vec2 = { 0.5, 1 }
            }
        }
        particleName: string = "SRUAP_Order_laserTurret_idle"
        particlePath: string = "Maps/Particles/SR/SRUAP_Order_laserTurret_idle"
        buildUpTime: f32 = 5
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0xf7c19ac5
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_sparkles.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xfc8454a1
                newAsset: string = "ASSETS/Shared/Particles/SRU_chaos_ambientGlow.ARAM_VFX_Update.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x42a99f2d
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_runeBinding.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xd2ad5863
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_sparklesMult.ARAM_VFX_Update.dds"
            }
        }
    }
    "Maps/Particles/SR/Audio-Emitter_SRU_ChaosLaserTurret_Waterfall" = VfxSystemDefinitionData {
        simpleEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                particleLinger: option[f32] = {
                    10
                }
                emitterName: string = "empty"
                particleColorTexture: string = "ASSETS/Shared/Particles/Black.DDS"
                meshRenderFlags: u8 = 0
                texture: string = "ASSETS/Shared/Particles/Black.DDS"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        particleName: string = "Audio-Emitter_SRU_ChaosLaserTurret_Waterfall"
        particlePath: string = "Maps/Particles/SR/Audio-Emitter_SRU_ChaosLaserTurret_Waterfall"
        soundPersistentDefault: string = "Play_sfx_Env_Map11_Emitter_chaoslaserturret_watefall"
        flags: u8 = 164
    }
    "Maps/Particles/SR/SRU_Chaos_butterflies_01" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.25
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.25
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 8
                }
                fieldCollectionDefinition: pointer = VfxFieldCollectionDefinitionData {
                    fieldAttractionDefinitions: list[embed] = {
                        VfxFieldAttractionDefinitionData {
                            position: embed = ValueVector3 {
                                constantValue: vec3 = { -220, -200, -200 }
                            }
                            radius: embed = ValueFloat {
                                constantValue: f32 = 2200
                            }
                            acceleration: embed = ValueFloat {
                                constantValue: f32 = 61
                            }
                        }
                    }
                    fieldNoiseDefinitions: list[embed] = {
                        VfxFieldNoiseDefinitionData {
                            radius: embed = ValueFloat {
                                constantValue: f32 = 1350
                            }
                            frequency: embed = ValueFloat {
                                constantValue: f32 = 2.5
                            }
                            velocityDelta: embed = ValueFloat {
                                constantValue: f32 = 500
                            }
                            axisFraction: vec3 = { 0, 1, 0 }
                        }
                    }
                }
                emitterName: string = "Butterfly_Anim1"
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 10, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -40
                                    40
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2.5
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -40
                                    40
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 10, 1 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 100, 0 }
                }
                acceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 4, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.200000003
                            0.300000012
                            0.400000006
                            0.5
                            0.600000024
                            0.699999988
                            0.800000012
                            0.899999976
                            1
                        }
                        values: list[vec3] = {
                            { 0, -400, 0 }
                            { 0, 200, 0 }
                            { 0, -320, 0 }
                            { 0, 360, 0 }
                            { 0, -240, 0 }
                            { 0, 80, 0 }
                            { 0, -800, 0 }
                            { 0, 320, 0 }
                            { 0, -160, 0 }
                            { 0, 200, 0 }
                            { 0, -40, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 1, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 10, 1 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -260
                                        60
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -100
                                        100
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 1, 10, 1 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Shared/Particles/SRU_Butterfly_Fly.skn"
                        mMeshSkeletonName: string = "ASSETS/Shared/Particles/SRU_Butterfly_Fly.skl"
                        mAnimationName: string = "ASSETS/Shared/Particles/SRU_Butterfly_Fly.anm"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                doesCastShadow: flag = true
                isRotationEnabled: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -100, 0 }
                }
                rotation0: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            1
                        }
                        values: list[vec3] = {
                            { 0, -1, 0 }
                            { 0, -0.400000006, 0 }
                            { 0, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.899999976, 0.899999976, 0.899999976 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0.899999976, 0.899999976, 0.899999976 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Butterfly_TX_CM.dds"
                uvMode: u8 = 2
            }
        }
        visibilityRadius: f32 = 200
        particleName: string = "SRU_Chaos_butterflies_01"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_butterflies_01"
    }
    "Maps/Particles/SR/SRU_Chaos_Shopkeeper_staff_glow" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.25
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                emitterName: string = "whitesparks"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 20, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    -0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 20, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 15, 15, 15 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                scaleEmitOffsetByBoundObjectSize: f32 = 0.00499999989
                particleColorTexture: string = "ASSETS/Shared/Particles/color-hold.TFT_Set5.dds"
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.600000024 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.5
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.414117604 }
                            { 1, 1, 1, 0.360000014 }
                            { 1, 1, 1, 0.0587958023 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                miscRenderFlags: u8 = 1
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 50, 50 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.899999976
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.899999976
                                    1.10000002
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 50, 50, 50 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.800000012
                            1
                        }
                        values: list[vec3] = {
                            { 0.699999988, 0.699999988, 0.699999988 }
                            { 1.20000005, 1.20000005, 1.20000005 }
                            { 1.5, 1.5, 1.5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Chaos_Shopkeeper_Staff_Glow.dds"
            }
        }
        particleName: string = "SRU_Chaos_Shopkeeper_staff_glow"
        particlePath: string = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_staff_glow"
        flags: u8 = 132
    }
    "Maps/Particles/SR/SRUAP_Order_BaseDoor_Shield_Top" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.100000001
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                childParticleSetDefinition: embed = VfxChildParticleSetDefinitionData {
                    childrenIdentifiers: list[embed] = {
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_Order_BaseDoor_Glow"
                        }
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_Order_BaseDoor_GlowChild"
                        }
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_Order_BaseDoor_GlowChild"
                        }
                    }
                    boneToSpawnAt: list[string] = {
                        "centershield"
                        "L_Shield"
                        "R_Shield"
                    }
                }
                emitterName: string = "Shield"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 45, -65 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Shared/Particles/SRUAP_Order_BaseDoor_RG.skn"
                        mMeshSkeletonName: string = "ASSETS/Shared/Particles/SRUAP_Order_BaseDoor_RG.skl"
                        mAnimationName: string = "ASSETS/Shared/Particles/SRUAP_Order_BaseDoor_Idle1.anm"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = 5
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 282, -30 }
                }
                texture: string = "ASSETS/Shared/Particles/SRUAP_Order_BaseDoor.dds"
            }
        }
        particleName: string = "SRUAP_Order_BaseDoor_Shield_Top"
        particlePath: string = "Maps/Particles/SR/SRUAP_Order_BaseDoor_Shield_Top"
        soundOnCreateDefault: string = "Play_sfx_S5_VoidGateSpawn_cast"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x796f1dd4
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Order_BaseDoor_red.dds"
            }
        }
    }
    "Maps/Particles/SR/SRU_Order_BaseDoor_Glow" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.100000001
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                emitterName: string = "Glow"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_glow.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 5
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Glow.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.300000012, -0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.300000012, -0.5 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_Order_BaseDoor_Glow"
        particlePath: string = "Maps/Particles/SR/SRU_Order_BaseDoor_Glow"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x64f7a797
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Glow.dds"
            }
        }
    }
    "Maps/Particles/SR/SRU_SJungle_motes" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 20
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            20
                        }
                    }
                }
                particleLinger: option[f32] = {
                    30
                }
                emitterName: string = "Motes"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 30, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 30, 0, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 4, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 4, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 400, 400, 400 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 400, 400, 400 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 45
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.400000006 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.400000006 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 20, 20 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 4, 4, 4 }
                            { 20, 20, 20 }
                            { 4, 4, 4 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_SJungle_motes.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        particleName: string = "SRU_SJungle_motes"
        particlePath: string = "Maps/Particles/SR/SRU_SJungle_motes"
        buildUpTime: f32 = 5
    }
    "Maps/Particles/SR/Audio-Emitter_SRU_MidLaneWaterfall" = VfxSystemDefinitionData {
        simpleEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                particleLinger: option[f32] = {
                    10
                }
                emitterName: string = "empty"
                particleColorTexture: string = "ASSETS/Shared/Particles/Black.DDS"
                meshRenderFlags: u8 = 0
                texture: string = "ASSETS/Shared/Particles/Black.DDS"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        particleName: string = "Audio-Emitter_SRU_MidLaneWaterfall"
        particlePath: string = "Maps/Particles/SR/Audio-Emitter_SRU_MidLaneWaterfall"
        soundPersistentDefault: string = "Play_sfx_Env_Map11_Emitter_midlane_watefall"
        flags: u8 = 164
    }
    "Maps/Particles/SR/SRUAP_Order_Nexus_Idle" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.699999988
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "sparkles1"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -0.5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.899999976
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.100000001
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -0.5, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 20, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 20, 0, 0 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 1 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, 3, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 3, 0 }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                emissionMeshScale: f32 = 1.10000002
                emissionMeshName: string = "ASSETS/Shared/Particles/sru_order_crystalemitter.scb"
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 1, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 45, 45, 45 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    0.400000006
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 45, 45, 45 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 0, 1, 1 }
                            { 1, 1, 1 }
                            { 0, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_brightSparks.NexusBlitzSummer2020.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    15
                }
                emitterName: string = "structureGlow"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 10, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_structureglow.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.149019614 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.5, 1.5, 1.5 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_Color.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 3
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.899999976
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "softGoldGlow"
                shape: embed = VfxShape {
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 1.00000012, 0, 0 }
                        { 0, 1.00000012, 0 }
                    }
                }
                emissionMeshName: string = "ASSETS/Shared/Particles/sruap_order_nexus_sparklegeo.scb"
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.200000018 }
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 220, 30, 30 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 220, 30, 30 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRUAP_Order_Nexus_sparkleGold.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 25
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.899999976
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            5
                        }
                    }
                }
                particleLinger: option[f32] = {
                    15
                }
                emitterName: string = "sharpGoldGlow"
                shape: embed = VfxShape {
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 1.00000012, 0, 0 }
                        { 0, 1.00000012, 0 }
                    }
                }
                emissionMeshName: string = "ASSETS/Shared/Particles/sruap_order_nexus_sparklegeo.scb"
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.600000024 }
                }
                miscRenderFlags: u8 = 1
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 15, 30, 30 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.800000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 15, 30, 30 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 1, 1, 1 }
                            { 0, 0, -0 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRUAP_Order_Nexus_sparkleGold.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "Temp_Mesh"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 200, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_nexus_ambientglowgeo.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0, 0, 1 }
                            { 1, 1, 1, 1 }
                            { 0, 0, 0, 1 }
                        }
                    }
                }
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnelColor: vec4 = { -1, -1, -1, 0 }
                }
                isUniformScale: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 5 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.899999976
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 5, 5 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Order_wispies.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.100000001, 0 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            10
                        }
                    }
                }
                particleLinger: option[f32] = {
                    20
                }
                emitterName: string = "Temp_Mesh1"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 200, 0 }
                    }
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_nexus_ambientglowgeo.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0, 0, 0, 1 }
                            { 1, 1, 1, 1 }
                            { 0, 0, 0, 1 }
                        }
                    }
                }
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    fresnelColor: vec4 = { -1, -1, -1, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 5, 5 }
                }
                texture: string = "ASSETS/Shared/Particles/SRUAP_OrderNexus_blueSquare.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.200000003, 0 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.200000003, 0 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                texDiv: vec2 = { 0.5, 0.5 }
            }
        }
        particleName: string = "SRUAP_Order_Nexus_Idle"
        particlePath: string = "Maps/Particles/SR/SRUAP_Order_Nexus_Idle"
        buildUpTime: f32 = 5
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0xa45882ff
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_brightSparks.NexusBlitzSummer2020.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xb24905ab
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_Color.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0xd106221a
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_wispies.dds"
            }
            VfxAssetRemap {
                oldAsset: hash = 0x476d3129
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_ChaosNexus_redSquare.dds"
            }
        }
    }
    "Maps/Particles/SR/SRUAP_Chaos_BaseDoor_Shield_Bottom" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.100000001
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                childParticleSetDefinition: embed = VfxChildParticleSetDefinitionData {
                    childrenIdentifiers: list[embed] = {
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_Chaos_BaseDoor_Glow"
                        }
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_Chaos_BaseDoor_GlowChild"
                        }
                        VfxChildIdentifier {
                            effect: link = "Maps/Particles/SR/SRU_Chaos_BaseDoor_GlowChild"
                        }
                    }
                    boneToSpawnAt: list[string] = {
                        "centershield"
                        "L_Shield"
                        "R_Shield"
                    }
                }
                emitterName: string = "Shield1"
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 45, -65 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mMeshName: string = "ASSETS/Shared/Particles/SRUAP_Chaos_BaseDoor_RG.skn"
                        mMeshSkeletonName: string = "ASSETS/Shared/Particles/SRUAP_Chaos_BaseDoor_RG.skl"
                        mAnimationName: string = "ASSETS/Shared/Particles/SRUAP_Order_BaseDoor_Idle1.anm"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = 5
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 100, -20 }
                }
                texture: string = "ASSETS/Shared/Particles/SRUAP_Chaos_BaseDoor.dds"
            }
        }
        particleName: string = "SRUAP_Chaos_BaseDoor_Shield_Bottom"
        particlePath: string = "Maps/Particles/SR/SRUAP_Chaos_BaseDoor_Shield_Bottom"
        soundOnCreateDefault: string = "Play_sfx_S5_VoidGateSpawn_cast"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0xecfa20ec
                newAsset: string = "ASSETS/Shared/Particles/SRUAP_Chaos_BaseDoor_blue.dds"
            }
        }
    }
    "Maps/Particles/SR/SRU_Order_BaseDoor_GlowChild" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                timeBeforeFirstEmission: f32 = 0.100000001
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                emitterName: string = "GlowChild"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_order_basedoor_glowchild.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 5
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_Order_BaseDoor_Glow.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.300000012, -0.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0.300000012, -0.5 }
                        }
                    }
                }
            }
        }
        particleName: string = "SRU_Order_BaseDoor_GlowChild"
        particlePath: string = "Maps/Particles/SR/SRU_Order_BaseDoor_GlowChild"
        assetRemappingTable: list[embed] = {
            VfxAssetRemap {
                oldAsset: hash = 0x64f7a797
                newAsset: string = "ASSETS/Shared/Particles/SRU_Chaos_BaseDoor_Glow.dds"
            }
        }
    }
    "Maps/Particles/SR/SRX_Braziers_Mountain" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                emitterName: string = "Big_AlphaBlend"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 45, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SR/SRX_Mountain_Brazier_Sand.SRX_FX.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.70588237, 0.556862772, 0.384313732, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 0.70588237, 0.556862772, 0.384313732, 1 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.620004594 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 0.580392182, 0.482352942, 0.400000006, 0 }
                            { 0.843137264, 0.709803939, 0.490196079, 0.620004594 }
                            { 0.698039234, 0.588235319, 0.474509805, 0.620004594 }
                            { 0.607843161, 0.478431374, 0.31764707, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 5, 360, 5 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 5, 360, 5 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -5, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.899999976, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.39999998
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0.899999976, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.800000012, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0.800000012, 0, 0 }
                            { 1.20000005, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SRX/SRX_MountainDrake_Pit_SandFall.SRX_FX.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.400000006, 0 }
                }
                textureMult: string = "ASSETS/Maps/Particles/SRX/SRX_MountainDrake_Pit_SandFall.SRX_FX.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, 0 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.0500000007
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "FloatingRock_"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SR/SRX_Mountain_Brazier_v3.SRX_FX.scb"
                    }
                }
                blendMode: u8 = 3
                pass: i16 = -3
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 360, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1.14999998, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.899999976
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1.14999998, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Mountain_Brazier_Rock_Transfer.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                emitterName: string = "Glow_"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 15, 0 }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {}
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 0, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.730006874, 0.549996197, 0.200000003, 0.480003059 }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.949996173 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.949996173 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 0, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 45, 1, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Cloud_DrakePit_Distort_Tex.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 50
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                emitterName: string = "Motes"
                disabled: bool = true
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -5, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -5, 0 }
                        }
                    }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 80, 135, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 80, 135, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0.5
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, -0, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 40, 30, 40 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0.600000024
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 40, 30, 40 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 360
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            1
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    360
                                }
                            }
                        }
                        ValueFloat {
                            constantValue: f32 = 1
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 1, 0.5 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.823529422, 0.690196097, 0.278431386, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.400000006
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 0.823529422, 0.690196097, 0.278431386, 1 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.858823538, 0.858823538, 0.858823538, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 0.858823538, 0.858823538, 0.858823538, 0 }
                            { 0.858823538, 0.858823538, 0.858823538, 1 }
                            { 0.858823538, 0.858823538, 0.858823538, 0 }
                        }
                    }
                }
                pass: i16 = 1
                isUniformScale: flag = true
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 360, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 360, 360, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 1, 1 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 3, 1, 1 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0.00298507465
                            0.205943421
                            0.424378097
                            0.603980124
                            0.795024872
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                            { 0.120481931, 0.390390396, 0.390390396 }
                            { 1, 1, 1 }
                            { 0.506024122, 0.687986135, 0.687986135 }
                            { 1, 0.356093347, 0.356093347 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Cloud_DrakePit_Distort_Tex.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Smol_Add"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 20, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SR/SRX_Mountain_Brazier_Sand.SRX_FX.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.889997721, 0.710002303, 0.560006082, 0.579995394 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.649999976
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 0.889997721, 0.710002303, 0.560006082, 0.579995394 }
                        }
                    }
                }
                reflectionDefinition: pointer = VfxReflectionDefinitionData {
                    reflectionFresnelColor: vec4 = { 0, 0, 0, 1 }
                    fresnel: f32 = 0.100000001
                    fresnelColor: vec4 = { 0.97999543, 0.639993906, 0.059998475, 1 }
                }
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 10, 360, 10 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 10, 360, 10 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -25, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    0.800000012
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SRX/SRX_MountainDrake_Pit_SandFall.SRX_FX.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 0 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.100000001
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.100000001
                        }
                    }
                }
                0x538effa4: flag = true
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.75
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                emitterName: string = "Smol_AlphaBlend"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 40, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SR/SRX_Mountain_Brazier_Sand_Thin.SRX_FX.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.710002303, 0.579995394, 0.379995435, 0.280003041 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.649999976
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 0.710002303, 0.579995394, 0.379995435, 0.280003041 }
                        }
                    }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 6
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 360, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -25, 0 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1.60000002, 1.20000005, 1.60000002 }
                            { 1.79999995, 1.20000005, 1.79999995 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRX_Braziers_Mountain_Sandswirl.SRX_FX.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.400000006, 0 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Smol_AlphaBlend1"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 10, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Maps/Particles/SR/SRX_Mountain_Brazier_Sand_Bottom.SRX_FX.scb"
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.409994662, 0.280003041, 0.0699931309, 0.590005338 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.649999976
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 0.409994662, 0.280003041, 0.0699931309, 0.590005338 }
                        }
                    }
                }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 360, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 360, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -25, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0.5, 1 }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRX_Braziers_Mountain_Sandswirl.SRX_FX.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.400000006, 0 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.300000012
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Burst_Glow"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                particleColorTexture: string = "ASSETS/Particles/DefaultColorOverlifetime.TFT_Set4_Act2.dds"
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 0.990005314, 0.990005314, 0.990005314, 0.960006118 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0.972549021, 0.913725495, 0.0627451017, 0 }
                            { 0.737254918, 0.431372553, 0.160784319, 1 }
                            { 0.4627451, 0.270588249, 0.129411772, 0 }
                        }
                    }
                }
                pass: i16 = 100
                depthBiasFactors: vec2 = { -1, -75 }
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 0, 90 }
                }
                isLocalOrientation: flag = false
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 425, 120, 10 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 1.5, 0.400000006, 1 }
                            { 1.64999998, 0, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRX_Brazier_HalfGlow_Burst.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 30
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                lifetime: option[f32] = {
                    1
                }
                isSingleParticle: flag = true
                emitterName: string = "Burst_Sparkles"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 200, 200, 200 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 200, 200, 200 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 1, 3 }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -500, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -500, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, -25, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        1
                                        1.5
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, -25, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 5, 650, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0.800000012
                                        1.29999995
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 5, 650, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 1, 0, 0 }
                    }
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.600000024 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    0.800000012
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.300000012
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0.600000024 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.611764729, 0.411764711, 0.168627456, 1 }
                }
                pass: i16 = -5
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                directionVelocityScale: f32 = 0.00100000005
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 2, 10, 10 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.75
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.25
                                    0.75
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 2, 10, 10 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    constantValue: vec3 = { 3, 3, 3 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 3, 3, 3 }
                            { 0, 0, 0 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Cloud_DrakePit_Distort_Tex.SRX_FX.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                emitterName: string = "SandRise_Long"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -10, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -10, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -10, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -10, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 40, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0.800000012
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 40, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 30, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 30, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveArbitraryQuad {}
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.200000003
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 1 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.949996173, 0.889997721, 0.889997721, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.0399999991
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0.949996173, 0.889997721, 0.889997721, 0 }
                            { 0.949996173, 0.889997721, 0.889997721, 0 }
                            { 0.949996173, 0.889997721, 0.889997721, 1 }
                            { 0.949996173, 0.889997721, 0.889997721, 0 }
                        }
                    }
                }
                pass: i16 = -1
                isDirectionOriented: flag = true
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { -10, 15, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.200000003
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.500999987
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.5
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { -10, 15, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0.600000024, 1 }
                            { 3, 0.800000012, 1 }
                            { 5, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/Mountain_Ambiance_Sandfall.SRX_FX.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0.600000024
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            0.600000024
                        }
                    }
                }
                particleLinger: option[f32] = {
                    1
                }
                emitterName: string = "SandRise_Long1"
                birthOrbitalVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 1, 0 }
                }
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -60, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.600000024
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -60, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -10, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -10, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 0, 80, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0.800000012
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 0, 80, 0 }
                            }
                        }
                    }
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 30, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        0
                                        1
                                    }
                                }
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 30, 0, 0 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 1
                            dynamics: pointer = VfxAnimatedFloatVariableData {
                                probabilityTables: list[pointer] = {
                                    VfxProbabilityTableData {
                                        keyTimes: list[f32] = {
                                            0
                                            1
                                        }
                                        keyValues: list[f32] = {
                                            0
                                            360
                                        }
                                    }
                                }
                                times: list[f32] = {
                                    0
                                }
                                values: list[f32] = {
                                    1
                                }
                            }
                        }
                        ValueFloat {}
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1, 0 }
                        { 0, 0, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 4
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 0.930006862, 0.300007641, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.200000003
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec4] = {
                            { 1, 0.930006862, 0.300007641, 1 }
                        }
                    }
                }
                color: embed = ValueColor {
                    constantValue: vec4 = { 0.949996173, 0.889997721, 0.889997721, 1 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.200000003
                            1
                        }
                        values: list[vec4] = {
                            { 0.949996173, 0.889997721, 0.889997721, 0 }
                            { 0.949996173, 0.889997721, 0.889997721, 1 }
                            { 0.949996173, 0.889997721, 0.889997721, 0 }
                        }
                    }
                }
                pass: i16 = -1
                isDirectionOriented: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 90, 90, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 8, 25, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.200000003
                                    1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.500999987
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.5
                                    0.5
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 8, 25, 0 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec3] = {
                            { 1, 0.600000024, 1 }
                            { 3, 0.800000012, 1 }
                            { 5, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Maps/Particles/SR/SRX_SandGrain.SRX_FX.dds"
            }
        }
        particleName: string = "SRX_Braziers_Mountain"
        particlePath: string = "Maps/Particles/SR/SRX_Braziers_Mountain"
        soundOnCreateDefault: string = "Play_sfx_Env_Map11_SRX_Brazier_Activate_buffactivate"
        soundPersistentDefault: string = "Play_sfx_Env_Map11_SRX_Mountain_Dragon_Brazier"
        flags: u8 = 228
    }
    "Maps/Particles/SR/SRU_NJungle_leaves" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 4
                }
                particleLifetime: embed = ValueFloat {
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.5
                                    1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            3
                        }
                    }
                }
                particleLinger: option[f32] = {
                    13
                }
                emitterName: string = "Leaves"
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 100, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0.200000003
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 100, 0, 0 }
                        }
                    }
                }
                worldAcceleration: embed = IntegratedValueVector3 {
                    constantValue: vec3 = { 0, -150, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, -150, 0 }
                        }
                    }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { 100, 100, 100 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        -1
                                        1
                                    }
                                }
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { 100, 100, 100 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = 45
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.5 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.300000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.5 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isRandomStartFrame: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                birthRotationalVelocity0: embed = ValueVector3 {
                    constantValue: vec3 = { 150, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.5
                                    0.50999999
                                    1
                                }
                                keyValues: list[f32] = {
                                    -1
                                    -0.800000012
                                    0.800000012
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 150, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 25, 25, 25 }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 0.800000012, 0.800000012, 0.800000012 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_NJungle_Leaves.dds"
                numFrames: u16 = 4
                texDiv: vec2 = { 2, 2 }
            }
        }
        particleName: string = "SRU_NJungle_leaves"
        particlePath: string = "Maps/Particles/SR/SRU_NJungle_leaves"
    }
    "Maps/Particles/NPE_1/River_Plane_Bot_A" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                emitterName: string = "WaterPlane1"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_riverplane_bot.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -1000
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_RiverPlane_South_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.00300000003, -0.0399999991 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_RiverPlane_South_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.00999999978 }
                }
            }
        }
        visibilityRadius: f32 = 450
        particleName: string = "River_Plane_Bot_A"
        particlePath: string = "Maps/Particles/NPE_1/River_Plane_Bot_A"
    }
    "Maps/Particles/NPE_1/River_Plane_Top_A" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 10
                }
                emitterName: string = "WaterPlane1"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_riverplane_top.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.5
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -1000
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_RiverPlane_South_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.00300000003, -0.0399999991 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_RiverPlane_South_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.00999999978 }
                }
            }
        }
        visibilityRadius: f32 = 450
        particleName: string = "River_Plane_Top_A"
        particlePath: string = "Maps/Particles/NPE_1/River_Plane_Top_A"
    }
    "Maps/Particles/NPE_1/Waterfall_Bot_A" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Waterfall_plane"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_bot_waterfall_plane_02.NPE_MapsMountain.scb"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = -10
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_plane_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.64999998 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_plane_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.550000012 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                emitterName: string = "WhiteFalls"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[vec3] = {
                                { 10, 0, 0 }
                                { 30, 0, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_bot_waterfall_plane_01.NPE_MapsMountain.scb"
                    }
                }
                blendMode: u8 = 4
                pass: i16 = -11
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.699999988 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_WhiteFalls_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.200000003, -1.29999995 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                emitterName: string = "TopEdgeHightlight"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_bot_waterfall_edge_highlight.NPE_MapsMountain.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -12
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_WaterFall_Test_Small_Highlight_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                textureMult: string = "ASSETS/Shared/Particles/SRU_WaterFall_Test_Small_Highlight_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.300000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -1.5 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "SideFoam"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_bot_waterfall_side_foam_01.NPE_MapsMountain.scb"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = -20
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_SideFoam_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.579999983 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_SideFoam_Mult_01.NPE_MapsMountain.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.52999997
                }
                emitterName: string = "GroundSplash"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_bot_waterfall_ground_splash.NPE_MapsMountain.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.400000006 }
                            { 1, 1, 1, 0.5 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -5
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_GroundSplash_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.400000006 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -0.400000006 }
                        }
                    }
                }
            }
        }
        visibilityRadius: f32 = 15
        particleName: string = "Waterfall_Bot_A"
        particlePath: string = "Maps/Particles/NPE_1/Waterfall_Bot_A"
    }
    "Maps/Particles/NPE_1/Waterfall_Bot_B" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Waterfall_plane"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_watrerfalls_falls_02.scb"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = -10
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_plane_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.64999998 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_plane_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.550000012 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                emitterName: string = "WhiteFalls"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[vec3] = {
                                { 10, 0, 0 }
                                { 30, 0, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_watrerfalls_falls_01.scb"
                    }
                }
                blendMode: u8 = 4
                pass: i16 = -11
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.699999988 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_WhiteFalls_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.200000003, -1.29999995 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                emitterName: string = "TopEdgeHightlight"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_watrerfalls_top_highlight_01.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -12
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_WaterFall_Test_Small_Highlight_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                textureMult: string = "ASSETS/Shared/Particles/SRU_WaterFall_Test_Small_Highlight_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.300000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -1.5 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "SideFoam"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_watrerfalls_sidefoam_01.scb"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = -20
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_SideFoam_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.579999983 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_SideFoam_Mult_01.NPE_MapsMountain.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.52999997
                }
                emitterName: string = "GroundSplash"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_watrerfalls_groundsplash_01.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.400000006 }
                            { 1, 1, 1, 0.5 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -5
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_GroundSplash_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.400000006 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -0.400000006 }
                        }
                    }
                }
            }
        }
        visibilityRadius: f32 = 15
        particleName: string = "Waterfall_Bot_B"
        particlePath: string = "Maps/Particles/NPE_1/Waterfall_Bot_B"
    }
    "Maps/Particles/NPE_1/River_Shore_Top_A" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.5
                }
                emitterName: string = "Shore_03"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_river_shore_top.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.533333361 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_River_Shore_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0700000003, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_RiverEdging_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.400000006 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                emitterName: string = "Shore_04"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_river_shore_top.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.600000024 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_River_Shore_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0700000003, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_RiverEdging_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.200000003 }
                }
            }
        }
        visibilityRadius: f32 = 350
        particleName: string = "River_Shore_Top_A"
        particlePath: string = "Maps/Particles/NPE_1/River_Shore_Top_A"
    }
    "Maps/Particles/NPE_1/River_Shore_Bot_A" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.5
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.5
                }
                emitterName: string = "Shore_03"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_river_shore_bot.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.533333361 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_River_Shore_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0700000003, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_RiverEdging_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, 0.400000006 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.400000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 5
                }
                emitterName: string = "Shore_04"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_river_shore_bot.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.600000024 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                particleIsLocalOrientation: flag = true
                texture: string = "ASSETS/Shared/Particles/SRU_River_Shore_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0.0700000003, 0 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_RiverEdging_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.200000003 }
                }
            }
        }
        visibilityRadius: f32 = 350
        particleName: string = "River_Shore_Bot_A"
        particlePath: string = "Maps/Particles/NPE_1/River_Shore_Bot_A"
    }
    "Maps/Particles/NPE_1/Water_Ripple_A" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.200000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 6
                }
                emitterName: string = "WaterPlane1"
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_water_ripple_01.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.450980425 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.600000024
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                particleIsLocalOrientation: flag = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 255, 0 }
                }
                birthScale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.400000006
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.5
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.400000006
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_River_GrassRipple_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.300000012 }
                }
            }
        }
        visibilityRadius: f32 = 150
        particleName: string = "Water_Ripple_A"
        particlePath: string = "Maps/Particles/NPE_1/Water_Ripple_A"
    }
    "Maps/Particles/NPE_1/Waterfall_Top_B" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Waterfall_plane"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_bot_waterfall_plane_02.NPE_MapsMountain.scb"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = -10
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 25, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_plane_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.64999998 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_plane_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.550000012 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                emitterName: string = "WhiteFalls"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[vec3] = {
                                { 10, 0, 0 }
                                { 30, 0, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_bot_waterfall_plane_01.NPE_MapsMountain.scb"
                    }
                }
                blendMode: u8 = 4
                pass: i16 = -11
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 25, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.699999988 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_WhiteFalls_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.200000003, -1.29999995 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                emitterName: string = "TopEdgeHightlight"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_bot_waterfall_edge_highlight.NPE_MapsMountain.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -12
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 25, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_WaterFall_Test_Small_Highlight_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                textureMult: string = "ASSETS/Shared/Particles/SRU_WaterFall_Test_Small_Highlight_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.300000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -1.5 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "SideFoam"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_bot_waterfall_side_foam_01.NPE_MapsMountain.scb"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = -20
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 25, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_SideFoam_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.579999983 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_SideFoam_Mult_01.NPE_MapsMountain.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.52999997
                }
                emitterName: string = "GroundSplash"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_bot_waterfall_ground_splash.NPE_MapsMountain.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.400000006 }
                            { 1, 1, 1, 0.5 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -5
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 25, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_GroundSplash_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.400000006 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -0.400000006 }
                        }
                    }
                }
            }
        }
        visibilityRadius: f32 = 15
        particleName: string = "Waterfall_Top_B"
        particlePath: string = "Maps/Particles/NPE_1/Waterfall_Top_B"
    }
    "Maps/Particles/NPE_1/Waterfall_Top_C" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Waterfall_plane"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_waterfalls_falls_top_02.scb"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = -10
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_plane_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.64999998 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_plane_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.550000012 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                emitterName: string = "WhiteFalls"
                shape: embed = VfxShape {
                    birthTranslation: embed = ValueVector3 {
                        constantValue: vec3 = { 1, 0, 0 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            times: list[f32] = {
                                0
                                1
                            }
                            values: list[vec3] = {
                                { 10, 0, 0 }
                                { 30, 0, 0 }
                            }
                        }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_waterfalls_falls_top_01.scb"
                    }
                }
                blendMode: u8 = 4
                pass: i16 = -11
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.699999988 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_WhiteFalls_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.200000003, -1.29999995 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                emitterName: string = "TopEdgeHightlight"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_waterfalls_highlight_top_01.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -12
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_WaterFall_Test_Small_Highlight_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                textureMult: string = "ASSETS/Shared/Particles/SRU_WaterFall_Test_Small_Highlight_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.300000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -1.5 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "SideFoam"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_waterfalls_sidefoam_top_01.scb"
                    }
                }
                blendMode: u8 = 1
                pass: i16 = -20
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_SideFoam_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.579999983 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_SideFoam_Mult_01.NPE_MapsMountain.dds"
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 2.52999997
                }
                emitterName: string = "GroundSplash"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_watrerfalls_groundsplash_top_01.scb"
                    }
                }
                blendMode: u8 = 1
                birthColor: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.501960814 }
                }
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.400000006 }
                            { 1, 1, 1, 0.5 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = -5
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 180, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_GroundSplash_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.400000006 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.10000002
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -0.400000006 }
                        }
                    }
                }
            }
        }
        visibilityRadius: f32 = 15
        particleName: string = "Waterfall_Top_C"
        particlePath: string = "Maps/Particles/NPE_1/Waterfall_Top_C"
    }
    "Maps/Particles/NPE_1/Waterfall_Top_A" = VfxSystemDefinitionData {
        complexEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Waterfall_plane1"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_top_waterfall_plane_01.scb"
                    }
                }
                blendMode: u8 = 1
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_plane_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.899999976 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_plane_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.5 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "Waterfall_plane2"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/tutorial_top_waterfall_plane_02.scb"
                    }
                }
                blendMode: u8 = 1
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.200000003 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_Waterfall_WhiteFalls_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.5 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = -1
                }
                isSingleParticle: flag = true
                emitterName: string = "SideFoam"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_njungle_waterfall_sidefoam_01.NPE_MapsMountain.scb"
                    }
                }
                blendMode: u8 = 1
                particleIsLocalOrientation: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -40, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfalll_SideFoam_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.600000024 }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_waterfall_SideFoam_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -0.899999976 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                }
                emitterName: string = "TopEdgeHightlight"
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_njungle_waterfall_highlight_01.NPE_MapsMountain.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.899999976
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 1 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                pass: i16 = 30
                disableBackfaceCull: bool = true
                isUniformScale: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 0, -40, 0 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_Waterfalll_Highlight_Small_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                textureMult: string = "ASSETS/Shared/Particles/SRU_WaterFall_Test_Small_Highlight_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0, -1.5 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    0.300000012
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                    1.20000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 0, -1.5 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.0700000003
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 18
                }
                emitterName: string = "GeoBot"
                importance: u8 = 2
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_njungle_waterfall_steam_01.NPE_MapsMountain.scb"
                    }
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    constantValue: vec4 = { 1, 1, 1, 0.400000006 }
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.100000001
                            0.800000012
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.400000006 }
                            { 1, 1, 1, 0.400000006 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                isLocalOrientation: flag = false
                texture: string = "ASSETS/Shared/Particles/SRU_Pally_FogBase_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.300000012, 0.200000003 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    -1
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.300000012, 0.200000003 }
                        }
                    }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 2
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    0
                                    1.29999995
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            2
                        }
                    }
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 1.5
                    dynamics: pointer = VfxAnimatedFloatVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.5
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[f32] = {
                            1.5
                        }
                    }
                }
                emitterName: string = "SteamBot"
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 40, -20 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2.5
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 40, -20 }
                        }
                    }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 3, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    0.25
                                }
                            }
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 0, 3, 0 }
                        }
                    }
                }
                acceleration: embed = ValueVector3 {
                    constantValue: vec3 = { 0, 166, 0 }
                }
                shape: embed = VfxShape {
                    emitOffset: embed = ValueVector3 {
                        constantValue: vec3 = { -1, -170, -120 }
                        dynamics: pointer = VfxAnimatedVector3fVariableData {
                            probabilityTables: list[pointer] = {
                                VfxProbabilityTableData {
                                    keyTimes: list[f32] = {
                                        0
                                        1
                                    }
                                    keyValues: list[f32] = {
                                        80
                                        0
                                    }
                                }
                                VfxProbabilityTableData {}
                                VfxProbabilityTableData {}
                            }
                            times: list[f32] = {
                                0
                            }
                            values: list[vec3] = {
                                { -1, -170, -120 }
                            }
                        }
                    }
                    emitRotationAngles: list[embed] = {
                        ValueFloat {
                            constantValue: f32 = -47
                        }
                    }
                    emitRotationAxes: list[vec3] = {
                        { 0, 1.00000012, 0 }
                    }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                blendMode: u8 = 1
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.400000006
                            1
                        }
                        values: list[vec4] = {
                            { 0.341176003, 1, 0.74901998, 0 }
                            { 0.737254977, 1, 0.984314024, 1 }
                            { 0.68235302, 1, 1, 0 }
                        }
                    }
                }
                alphaRef: u8 = 0
                isRotationEnabled: flag = true
                birthRotation0: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 0 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    360
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 1, 0, 0 }
                        }
                    }
                }
                rotation0: embed = IntegratedValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 0, 0, 0 }
                            { 0, 0, 0 }
                        }
                    }
                }
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 43, 43, 43 }
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1
                                }
                            }
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {}
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec3] = {
                            { 43, 43, 43 }
                        }
                    }
                }
                scale0: embed = ValueVector3 {
                    dynamics: pointer = VfxAnimatedVector3fVariableData {
                        times: list[f32] = {
                            0
                            1
                        }
                        values: list[vec3] = {
                            { 1, 1, 1 }
                            { 2, 2, 2 }
                        }
                    }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_Swirlsteam_01.NPE_MapsMountain.dds"
                uvMode: u8 = 2
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    2
                                }
                                keyValues: list[f32] = {
                                    0
                                    2
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    2
                                }
                                keyValues: list[f32] = {
                                    0
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_EastJungle_Waterfall_Swirlsteam_Mult_01.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { 0.100000001, 0.100000001 }
                }
            }
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 0.150000006
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 9
                }
                emitterName: string = "WaterCausticx"
                importance: u8 = 0
                birthVelocity: embed = ValueVector3 {
                    constantValue: vec3 = { 50, 0, -25 }
                }
                birthDrag: embed = ValueVector3 {
                    constantValue: vec3 = { 1, 0, 1 }
                }
                bindWeight: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                primitive: pointer = VfxPrimitiveMesh {
                    mMesh: embed = VfxMeshDefinitionData {
                        mSimpleMeshName: string = "ASSETS/Shared/Particles/sru_njungle_waterfall_caustics_01.NPE_MapsMountain.scb"
                    }
                }
                blendMode: u8 = 4
                color: embed = ValueColor {
                    dynamics: pointer = VfxAnimatedColorVariableData {
                        times: list[f32] = {
                            0
                            0.157389998
                            0.349328011
                            0.47025001
                            0.783109009
                            1
                        }
                        values: list[vec4] = {
                            { 1, 1, 1, 0 }
                            { 1, 1, 1, 0.117647 }
                            { 1, 1, 1, 0.339367002 }
                            { 1, 1, 1, 0.719456971 }
                            { 1, 1, 1, 0.565611005 }
                            { 1, 1, 1, 0 }
                        }
                    }
                }
                disableBackfaceCull: bool = true
                particleIsLocalOrientation: flag = true
                birthScale0: embed = ValueVector3 {
                    constantValue: vec3 = { 0.999899983, 0.999899983, 0.999899983 }
                }
                texture: string = "ASSETS/Shared/Particles/SRU_River_WaterCaustics_01.NPE_MapsMountain.dds"
                birthUvScrollRate: embed = ValueVector2 {
                    constantValue: vec2 = { -0.100000001, -0.100000001 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.70000005
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    1.70000005
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.100000001, -0.100000001 }
                        }
                    }
                }
                birthUVOffset: embed = ValueVector2 {
                    constantValue: vec2 = { 1, 1 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { 1, 1 }
                        }
                    }
                }
                textureMult: string = "ASSETS/Shared/Particles/SRU_River_WaterCaustics_01_Mult.NPE_MapsMountain.dds"
                birthUvScrollRateMult: embed = ValueVector2 {
                    constantValue: vec2 = { -0.0799999982, -0.180000007 }
                    dynamics: pointer = VfxAnimatedVector2fVariableData {
                        probabilityTables: list[pointer] = {
                            VfxProbabilityTableData {}
                            VfxProbabilityTableData {
                                keyTimes: list[f32] = {
                                    0
                                    1
                                }
                                keyValues: list[f32] = {
                                    1.5
                                    2
                                }
                            }
                        }
                        times: list[f32] = {
                            0
                        }
                        values: list[vec2] = {
                            { -0.0799999982, -0.180000007 }
                        }
                    }
                }
            }
        }
        particleName: string = "Waterfall_Top_A"
        particlePath: string = "Maps/Particles/NPE_1/Waterfall_Top_A"
        flags: u8 = 132
    }
    "Maps/Particles/SRX/Base/SRX_Audio_Ocean_Rain_Lapping" = VfxSystemDefinitionData {
        simpleEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                particleLinger: option[f32] = {
                    10
                }
                emitterName: string = "empty"
                particleColorTexture: string = "ASSETS/Shared/Particles/Black.DDS"
                meshRenderFlags: u8 = 0
                texture: string = "ASSETS/Shared/Particles/Black.DDS"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        visibilityRadius: f32 = 450
        particleName: string = "SRX_Audio_Ocean_Rain_Lapping"
        particlePath: string = "Maps/Particles/SRX/Base/SRX_Audio_Ocean_Rain_Lapping"
        soundPersistentDefault: string = "Play_sfx_Env_Map11_SRX_Ocean_Dragon_Lapping_loop"
    }
    "Maps/Particles/SRX/Base/SRX_Audio_Ocean_Rain_Surface_Stone" = VfxSystemDefinitionData {
        simpleEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                particleLinger: option[f32] = {
                    10
                }
                emitterName: string = "empty"
                particleColorTexture: string = "ASSETS/Shared/Particles/Black.DDS"
                meshRenderFlags: u8 = 0
                texture: string = "ASSETS/Shared/Particles/Black.DDS"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        visibilityRadius: f32 = 3800
        particleName: string = "SRX_Audio_Ocean_Rain_Surface_Stone"
        particlePath: string = "Maps/Particles/SRX/Base/SRX_Audio_Ocean_Rain_Surface_Stone"
        soundPersistentDefault: string = "Play_sfx_Env_Map11_SRX_Dragon_Ocean_Rain_Stone_Base_loop"
    }
    "Maps/Particles/SRX/Base/SRX_Audio_Ocean_Rain_Puddle_Surface_Water" = VfxSystemDefinitionData {
        simpleEmitterDefinitionData: list[pointer] = {
            VfxEmitterDefinitionData {
                rate: embed = ValueFloat {
                    constantValue: f32 = 1
                }
                particleLifetime: embed = ValueFloat {
                    constantValue: f32 = 0
                }
                particleLinger: option[f32] = {
                    10
                }
                emitterName: string = "empty"
                particleColorTexture: string = "ASSETS/Shared/Particles/Black.DDS"
                meshRenderFlags: u8 = 0
                texture: string = "ASSETS/Shared/Particles/Black.DDS"
                birthScale1: embed = ValueFloat {
                    constantValue: f32 = 0
                }
            }
        }
        visibilityRadius: f32 = 400
        particleName: string = "SRX_Audio_Ocean_Rain_Puddle_Surface_Water"
        particlePath: string = "Maps/Particles/SRX/Base/SRX_Audio_Ocean_Rain_Puddle_Surface_Water"
        soundOnCreateDefault: string = "Play_sfx_Env_Map11_SRX_Dragon_Ocean_Rain_Water_Puddle_loop"
    }
    "Maps/MapGeometry/SR/Chunks/NPE_MapObjects" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0xe6310b71 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.994295418, 0.0172283538, -0.105260424, 0
                    0.0175293405, 0.999844491, -0.0019349003, 0
                    0.105210721, -0.00376900844, -0.994442821, 0
                    9419, 190, 6811, 1
                }
                name: string = "Info_Swain_BirdSpawnNode227"
            }
            0x4b464eb9 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.681056023, 0, 0, 0
                    0, 0.681056023, 0, 0
                    0, 0, 0.681056023, 0
                    13751, -7, 4790, 1
                }
                name: string = "__NAV_R012"
            }
            0xcf0f4e36 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.992679596, -0.0176347382, -0.119482979, 0
                    0.0175291393, 0.999844491, -0.00193480309, 0
                    0.119498521, -0.000173794135, 0.992834389, 0
                    8139, 304, 9115, 1
                }
                name: string = "Info_Swain_BirdSpawnNode73"
            }
            0x1696b831 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.794846952, -0.0127611747, 0.606675744, 0
                    0.0175291505, 0.999844491, -0.0019348088, 0
                    -0.606556654, 0.012172387, 0.794947088, 0
                    4874, 281, 2138, 1
                }
                name: string = "Info_Swain_BirdSpawnNode163"
            }
            0x60b8e768 = GdsMapObject {
                type: u8 = 3
                boxMin: vec3 = { 967.213013, -708.078369, 3367.70825 }
                boxMax: vec3 = { 1376.44397, 417.387299, 3814.56372 }
                0xad304db5: string = "Characters/OrderInhibitor/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0, 0, 1, 0
                    0, 1, 0, 0
                    -1, 0, 0, 0
                    1171, 91, 3571, 1
                }
                name: string = "Barracks_T1_L1"
            }
            0xe3d8f64c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.98259902, 0.0175848175, 0.184905127, 0
                    0.0175293349, 0.999844491, -0.00193491927, 0
                    -0.184910387, 0.00134001393, -0.982754469, 0
                    7037, 194, 2364, 1
                }
                name: string = "Info_Swain_BirdSpawnNode161"
            }
            0x0eed00ab = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/sru_snail/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.0691420659, 0.108490497, 0.99169004, 0
                    0.00221524877, 0.994083285, -0.108597867, 0
                    -0.99760437, -0.00531184115, -0.0689733103, 0
                    4141, 97, 2237, 1
                }
                name: string = "LevelProp_sru_snail9"
            }
            0x633bf5bc = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.940414965, 0.0171445459, 0.33959651, 0
                    0.0175292324, 0.999844491, -0.00193502579, 0
                    -0.33957687, 0.00413313881, -0.940569222, 0
                    10093, 172, 686, 1
                }
                name: string = "Info_Swain_BirdSpawnNode171"
            }
            0xa9f7efea = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/sru_snail/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.994240165, 0.00172082335, 0.107161097, 0
                    -0.00308164465, 0.998998642, -0.0446336903, 0
                    -0.107130602, -0.0447068401, -0.993239284, 0
                    4701, 97, 770, 1
                }
                name: string = "LevelProp_sru_snail7"
            }
            0x96ce0694 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.357736737, 0.00446482142, -0.933811784, 0
                    0.0175293013, 0.999844491, -0.00193480903, 0
                    0.933657944, -0.0170612205, -0.357759356, 0
                    5762, 251, 2757, 1
                }
                name: string = "Info_Swain_BirdSpawnNode25"
            }
            0xf90e9bbc = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.141032636, 0, 0.990004957, 0
                    0, 1, 0, 0
                    -0.990004957, 0, -0.141032636, 0
                    640, 184, 5420, 1
                }
                name: string = "Info_Swain_BirdSpawnNode135"
            }
            0xa873027b = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.594915986, 0, 0, 0
                    0, 0.594915986, 0, 0
                    0, 0, 0.594915986, 0
                    4844, 112, 1440, 1
                }
                name: string = "__NAV_R03"
            }
            0xfda82a28 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.44708702, -0.00956910197, -0.89443928, 0
                    0.0175291356, 0.999844491, -0.00193480437, 0
                    0.8943187, -0.0148137212, 0.447185248, 0
                    12674, 127, 4093, 1
                }
                name: string = "Info_Swain_BirdSpawnNode60"
            }
            0x38e5841c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.918924809, 0, 0.394432813, 0
                    0, 1, 0, 0
                    -0.394432813, 0, 0.918924809, 0
                    4735, 191, 5764, 1
                }
                name: string = "Info_Swain_BirdSpawnNode6"
            }
            0x78016e61 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.681056023, 0, 0, 0
                    0, 0.681056023, 0, 0
                    0, 0, 0.681056023, 0
                    11432, 17, 1472, 1
                }
                name: string = "__NAV_R08"
            }
            0x4d3b7dc1 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.104461499, -0.00375591009, -0.994521856, 0
                    0.0175291356, 0.999844491, -0.00193480542, 0
                    0.994374454, -0.017230995, 0.104511097, 0
                    4024, 314, 8346, 1
                }
                name: string = "Info_Swain_BirdSpawnNode87"
            }
            0xb8703cbf = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.26601702, -0.00279840454, 0.963964283, 0
                    0.017529143, 0.999844491, -0.00193480297, 0
                    -0.963808954, 0.0174121577, 0.266024709, 0
                    3052, 139, 10444, 1
                }
                name: string = "Info_Swain_BirdSpawnNode79"
            }
            0x07d16dd7 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.919967592, -0.0153707899, 0.391692877, 0
                    0.0175291449, 0.999844491, -0.00193479948, 0
                    -0.391602248, 0.00864599459, 0.920093954, 0
                    10955, 237, 7928, 1
                }
                name: string = "Info_Swain_BirdSpawnNode184"
            }
            0x7bb70b06 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.40430373, 0.00531836459, -0.914609313, 0
                    0.0175294969, 0.999844491, -0.00193492754, 0
                    0.914456785, -0.0168149397, -0.404334068, 0
                    5412, 189, 4678, 1
                }
                name: string = "Info_Swain_BirdSpawnNode217"
            }
            0x6fa6858f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.999840081, 0.0175359044, 0.00350700505, 0
                    0.0175291952, 0.999844491, -0.00193503348, 0
                    -0.00354039227, -0.00187324907, -0.999991953, 0
                    12777, 254, 1360, 1
                }
                name: string = "Info_Swain_BirdSpawnNode176"
            }
            0xf72987c6 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.970113158, 0.0174763706, 0.242022797, 0
                    0.0175292604, 0.999844491, -0.00193489122, 0
                    -0.242018968, 0.00236541685, -0.970268607, 0
                    8284, 444, 297, 1
                }
                name: string = "Info_Swain_BirdSpawnNode37"
            }
            0x940fdae7 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.091016084, -0.000331421325, -0.995849371, 0
                    0.0175290126, 0.999844491, -0.00193482253, 0
                    0.995695114, -0.0176323559, -0.0909961164, 0
                    9075, 311, 10314, 1
                }
                name: string = "Info_Swain_BirdSpawnNode117"
            }
            0x7ef96e29 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.991550088, 0.0171350837, -0.128587633, 0
                    0.0175293367, 0.999844491, -0.00193483534, 0
                    0.128534481, -0.00417254213, -0.991696239, 0
                    10456, 127, 2059, 1
                }
                name: string = "Info_Swain_BirdSpawnNode158"
            }
            0xda291b6f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.468273789, -0.00991943572, -0.883527756, 0
                    0.0175291486, 0.999844491, -0.00193480321, 0
                    0.8834095, -0.0145814708, 0.468374848, 0
                    10544, 261, 6806, 1
                }
                name: string = "Info_Swain_BirdSpawnNode182"
            }
            0x2d47c545 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.629896224, 0.0125461137, 0.776578009, 0
                    0.0175291914, 0.999844491, -0.00193488714, 0
                    -0.776481509, 0.0123940064, -0.630018175, 0
                    2518, 189, 11416, 1
                }
                name: string = "Info_Swain_BirdSpawnNode247"
            }
            0xf6c5302d = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.999702036, -0.0174937062, 0.0170244277, 0
                    0.0175291486, 0.999844491, -0.00193479983, 0
                    -0.0169879328, 0.00223264704, 0.999853194, 0
                    8359, 288, 3029, 1
                }
                name: string = "Info_Swain_BirdSpawnNode295"
            }
            0x5be8d6d3 = GdsMapObject {
                type: u8 = 3
                boxMin: vec3 = { 11380.9512, -699.559998, 11449.6973 }
                boxMax: vec3 = { 11801.3066, 491.470276, 11870.0527 }
                0xad304db5: string = "Characters/OrderInhibitor/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.707106769, 0, -0.707106769, 0
                    0, 1, 0, 0
                    0.707106769, 0, 0.707106769, 0
                    11598, 89, 11667, 1
                }
                name: string = "Barracks_T2_C1"
            }
            0x8985f35e = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.566905975, 0, 0, 0
                    0, 0.566905975, 0, 0
                    0, 0, 0.566905975, 0
                    2952, 146, 3474, 1
                }
                name: string = "__NAV_C02"
            }
            0x1d6e5fda = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.454404593, -0.00969023816, -0.890742719, 0
                    0.0175291393, 0.999844491, -0.00193480146, 0
                    0.890622914, -0.0147347702, 0.454503775, 0
                    10628, 357, 8015, 1
                }
                name: string = "Info_Swain_BirdSpawnNode68"
            }
            0x698cefef = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.889286995, -0.0164753161, -0.457052737, 0
                    0.0175291505, 0.999844491, -0.00193480402, 0
                    0.457013518, -0.00629115012, 0.889437497, 0
                    7972, 284, 4482, 1
                }
                name: string = "Info_Swain_BirdSpawnNode15"
            }
            0x35a488aa = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.615531445, 0.00926645193, -0.788057864, 0
                    0.0175292399, 0.999844491, -0.00193486747, 0
                    0.787917376, -0.0150050269, -0.615598142, 0
                    5462, 453, 9714, 1
                }
                name: string = "Info_Swain_BirdSpawnNode75"
            }
            0x9ce2b04a = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.681056023, 0, 0, 0
                    0, 0.681056023, 0, 0
                    0, 0, 0.681056023, 0
                    13364, 89, 10040, 1
                }
                name: string = "__NAV_R016"
            }
            0x3c19c71f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.468273789, -0.00991943572, -0.883527756, 0
                    0.0175291486, 0.999844491, -0.00193480321, 0
                    0.8834095, -0.0145814708, 0.468374848, 0
                    10775, 47, 5810, 1
                }
                name: string = "Info_Swain_BirdSpawnNode270"
            }
            0x9ab6fde5 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.510722995, 0, 0, 0
                    0, 0.510722995, 0, 0
                    0, 0, 0.510722995, 0
                    3471, 114, 1589, 1
                }
                name: string = "__NAV_R02"
            }
            0xd9a24cc2 = GdsMapObject {
                type: u8 = 3
                boxMin: vec3 = { 11033.3154, -700.460449, 13472.541 }
                boxMax: vec3 = { 11490.0137, 490.569885, 13879.2549 }
                0xad304db5: string = "Characters/OrderInhibitor/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0, 0, -1, 0
                    0, 1, 0, 0
                    1, 0, 0, 0
                    11261, 88, 13676, 1
                }
                name: string = "Barracks_T2_L1"
            }
            0x91c85360 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.959362268, 0.0162744652, -0.281707525, 0
                    0.0175293572, 0.999844491, -0.00193488237, 0
                    0.281632215, -0.0067944047, -0.959498346, 0
                    8073, 316, 2911, 1
                }
                name: string = "Info_Swain_BirdSpawnNode296"
            }
            0xd64fc894 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.917614341, 0.0168559812, 0.397114277, 0
                    0.0175290685, 0.999844491, -0.00193504838, 0
                    -0.39708513, 0.00518541504, -0.917767107, 0
                    11196, 190, 7352, 1
                }
                name: string = "Info_Swain_BirdSpawnNode301"
            }
            0x87d7986c = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.52066803, 0, 0, 0
                    0, 0.52066803, 0, 0
                    0, 0, 0.52066803, 0
                    8113, 10, 13665, 1
                }
                name: string = "__NAV_L015"
            }
            0x7a2cc018 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.383458972, -0.00850986037, -0.923518717, 0
                    0.0175291505, 0.999844491, -0.00193480309, 0
                    0.923391521, -0.0154465809, 0.383548528, 0
                    7682, 236, 6226, 1
                }
                name: string = "Info_Swain_BirdSpawnNode53"
            }
            0xb5e82b3a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.97265476, 0.0166043714, -0.231661364, 0
                    0.0175293405, 0.999844491, -0.00193474989, 0
                    0.231593207, -0.00594271487, -0.972794592, 0
                    2171, 203, 11502, 1
                }
                name: string = "Info_Swain_BirdSpawnNode248"
            }
            0xcc1a83a0 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.663783014, 0, 0, 0
                    0, 0.663783014, 0, 0
                    0, 0, 0.663783014, 0
                    1968, 10, 12459, 1
                }
                name: string = "__NAV_L09"
            }
            0x76999616 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.57496202, 0, 0, 0
                    0, 0.57496202, 0, 0
                    0, 0, 0.57496202, 0
                    9889, 91, 13447, 1
                }
                name: string = "__NAV_L016"
            }
            0x9c2186ec = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.882909179, -0.0145708751, 0.469317645, 0
                    0.0175291505, 0.999844491, -0.00193480751, 0
                    -0.469216466, 0.00993499905, 0.883027315, 0
                    6714, 184, 1824, 1
                }
                name: string = "Info_Swain_BirdSpawnNode162"
            }
            0xb4a1fa1b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.443501383, 0.00950978976, 0.896223247, 0
                    0.0175292324, 0.999844491, -0.0019348663, 0
                    -0.89610225, 0.0148519892, -0.443599105, 0
                    2739, 174, 9442, 1
                }
                name: string = "Info_Swain_BirdSpawnNode323"
            }
            0x12ff0d73 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.921761096, 0.0169100575, 0.387389421, 0
                    0.01752932, 0.999844491, -0.00193495839, 0
                    -0.387361884, 0.00500710402, -0.92191416, 0
                    8643, 204, 1981, 1
                }
                name: string = "Info_Swain_BirdSpawnNode159"
            }
            0xc1af44fd = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.472719759, 0.00999285467, 0.881156147, 0
                    0.0175290983, 0.999844491, -0.00193490053, 0
                    -0.881038427, 0.0145312073, -0.472821414, 0
                    10621, 304, 8453, 1
                }
                name: string = "Info_Swain_BirdSpawnNode69"
            }
            0x46f9d369 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.942651331, 0, -0.333778977, 0
                    0, 1, 0, 0
                    0.333778977, 0, -0.942651331, 0
                    5251, 186, 8277, 1
                }
                name: string = "Info_Swain_BirdSpawnNode322"
            }
            0x19cd3c7f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.429236531, -0.0057775788, 0.903173625, 0
                    0.0175291337, 0.999844491, -0.0019348046, 0
                    -0.903021991, 0.0166623406, 0.429271042, 0
                    683, 238, 12269, 1
                }
                name: string = "Info_Swain_BirdSpawnNode234"
            }
            0xb824f129 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.454404593, -0.00969023816, -0.890742719, 0
                    0.0175291393, 0.999844491, -0.00193480146, 0
                    0.890622914, -0.0147347702, 0.454503775, 0
                    11844, 291, 8464, 1
                }
                name: string = "Info_Swain_BirdSpawnNode67"
            }
            0x690e567d = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.0105538592, 0.00212003151, 0.999942064, 0
                    0.0175291914, 0.999844491, -0.00193481334, 0
                    -0.999790668, 0.0175077561, -0.0105893798, 0
                    592, 411, 10034, 1
                }
                name: string = "Info_Swain_BirdSpawnNode84"
            }
            0x696b0df5 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.774061263, -0.0147955399, -0.632937789, 0
                    0.0175291356, 0.999844491, -0.00193480949, 0
                    0.632867992, -0.00959719066, 0.774200261, 0
                    4560, 281, 3409, 1
                }
                name: string = "Info_Swain_BirdSpawnNode166"
            }
            0xc24bf44a = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/SRU_storeKeeperNorth/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.859437883, 0, -1.34958017, 0
                    0, 1.60000002, 0, 0
                    1.34958017, 0, -0.859437883, 0
                    13727, 144, 14592, 1
                }
                name: string = "LevelProp_SRU_storeKeeperNorth"
            }
            0x40e2ed6c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.429236531, -0.0057775788, 0.903173625, 0
                    0.0175291337, 0.999844491, -0.0019348046, 0
                    -0.903021991, 0.0166623406, 0.429271042, 0
                    482, 372, 11517, 1
                }
                name: string = "Info_Swain_BirdSpawnNode105"
            }
            0xa13ad24d = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.0710887685, -0.000683904509, -0.997469783, 0
                    0.0175292082, 0.999844491, -0.00193482358, 0
                    0.997315943, -0.0176223982, -0.0710657239, 0
                    5527, 455, 9984, 1
                }
                name: string = "Info_Swain_BirdSpawnNode319"
            }
            0xd71d3564 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.640208006, 0, 0, 0
                    0, 0.640208006, 0, 0
                    0, 0, 0.640208006, 0
                    1285, 11, 10423, 1
                }
                name: string = "__NAV_L07"
            }
            0x33757d1b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.919967592, -0.0153707899, 0.391692877, 0
                    0.0175291449, 0.999844491, -0.00193479948, 0
                    -0.391602248, 0.00864599459, 0.920093954, 0
                    11043, 228, 7990, 1
                }
                name: string = "Info_Swain_BirdSpawnNode183"
            }
            0x1bd58a31 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.998889625, 0.0174276959, -0.043769341, 0
                    0.0175291337, 0.999844491, -0.00193479506, 0
                    0.0437288173, -0.00269988552, -0.999039769, 0
                    7871, 304, 4500, 1
                }
                name: string = "Info_Swain_BirdSpawnNode230"
            }
            0xaa28472f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.77940917, -0.0148765324, -0.626338542, 0
                    0.0175291467, 0.999844491, -0.00193480146, 0
                    0.626269937, -0.00947117805, 0.779548764, 0
                    10719, 185, 3046, 1
                }
                name: string = "Info_Swain_BirdSpawnNode180"
            }
            0x274486e9 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.865997136, -0.0161496904, -0.499788105, 0
                    0.0175291393, 0.999844491, -0.00193480949, 0
                    0.499741644, -0.00708531635, 0.866145551, 0
                    3356, 281, 4593, 1
                }
                name: string = "Info_Swain_BirdSpawnNode253"
            }
            0x6d234fe5 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.901973009, -0.0166482162, -0.431471407, 0
                    0.0175291467, 0.999844491, -0.00193480111, 0
                    0.431436509, -0.00581818726, 0.902124524, 0
                    5318, 224, 11131, 1
                }
                name: string = "Info_Swain_BirdSpawnNode76"
            }
            0xc527cfcc = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.663783014, 0, 0, 0
                    0, 0.663783014, 0, 0
                    0, 0, 0.663783014, 0
                    4359, 10, 13597, 1
                }
                name: string = "__NAV_L012"
            }
            0x01f11dbf = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.999446809, 0.0175769385, 0.0282343831, 0
                    0.0175292678, 0.999844491, -0.00193507643, 0
                    -0.0282640047, -0.0014390779, -0.999599457, 0
                    6958, 254, 5930, 1
                }
                name: string = "Info_Swain_BirdSpawnNode241"
            }
            0x3ece446c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.447633445, 0, 0.894217134, 0
                    0, 1, 0, 0
                    -0.894217134, 0, -0.447633445, 0
                    647, 186, 6485, 1
                }
                name: string = "Info_Swain_BirdSpawnNode202"
            }
            0xbfe3a6a6 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.358701229, 0.00809507072, 0.93341732, 0
                    0.0175293833, 0.999844491, -0.00193482661, 0
                    -0.933287799, 0.0156682059, -0.358787358, 0
                    627, 384, 7662, 1
                }
                name: string = "Info_Swain_BirdSpawnNode203"
            }
            0x5bddb747 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.220418423, -0.00197683647, 0.975403428, 0
                    0.01752913, 0.999844491, -0.00193480379, 0
                    -0.97524792, 0.0175244398, 0.220418796, 0
                    6548, 243, 5357, 1
                }
                name: string = "Info_Swain_BirdSpawnNode12"
            }
            0x307e3368 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.651788712, -0.0128944432, -0.758291006, 0
                    0.0175291337, 0.999844491, -0.00193480635, 0
                    0.758198023, -0.0120310998, 0.651913345, 0
                    4227, 46, 6775, 1
                }
                name: string = "Info_Swain_BirdSpawnNode17"
            }
            0x6d9e8843 = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/SRU_AntlerMouse/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.446836203, 0, 0.894615769, 0
                    0, 1, 0, 0
                    -0.894615769, 0, -0.446836203, 0
                    2894, 44, 5653, 1
                }
                name: string = "LevelProp_SRU_AntlerMouse2"
            }
            0x1701700c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.764630795, -0.0121585084, 0.644353867, 0
                    0.0175291374, 0.999844491, -0.00193480751, 0
                    -0.644230127, 0.0127743818, 0.764725029, 0
                    8097, 215, 2626, 1
                }
                name: string = "Info_Swain_BirdSpawnNode48"
            }
            0xfdd94baa = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.0536640882, 0.000991487061, 0.998558581, 0
                    0.0175291356, 0.999844491, -0.00193480682, 0
                    -0.998405159, 0.0176076982, 0.0536383614, 0
                    12961, 189, 4781, 1
                }
                name: string = "Info_Swain_BirdSpawnNode64"
            }
            0x66851a9b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.964965165, -0.0164109021, 0.261864394, 0
                    0.0175291356, 0.999844491, -0.00193479715, 0
                    -0.261791915, 0.00645726826, 0.965102732, 0
                    2989, 247, 14080, 1
                }
                name: string = "Info_Swain_BirdSpawnNode104"
            }
            0x3a02a125 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.528450072, 0.00762216095, -0.84893018, 0
                    0.0175296683, 0.999844491, -0.00193488179, 0
                    0.848783374, -0.0159039535, -0.528501511, 0
                    6341, 187, 5660, 1
                }
                name: string = "Info_Swain_BirdSpawnNode220"
            }
            0xd2f9754e = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 4120.07324, -221.035233, 1120.04626 }
                boxMax: vec3 = { 4439.10058, 697.20813, 1394.28845 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.642787635, 0, -0.766044378, 0
                    0, 1, 0, 0
                    0.766044378, 0, 0.642787635, 0
                    4281, 86, 1253, 1
                }
                name: string = "Turret_T1_C_07"
            }
            0x6d276529 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.908999562, 0.0167425349, 0.416460723, 0
                    0.0175293423, 0.999844491, -0.00193479797, 0
                    -0.416428328, 0.00554155186, -0.909151673, 0
                    8298, 190, 13040, 1
                }
                name: string = "Info_Swain_BirdSpawnNode288"
            }
            0xb7d5148b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.368324459, 0, 0.929697335, 0
                    0, 1, 0, 0
                    -0.929697335, 0, -0.368324459, 0
                    3444, 382, 5799, 1
                }
                name: string = "Info_Swain_BirdSpawnNode213"
            }
            0xd989bcfc = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.681056023, 0, 0, 0
                    0, 0.681056023, 0, 0
                    0, 0, 0.681056023, 0
                    13001, -3, 2628, 1
                }
                name: string = "__NAV_R010"
            }
            0xf2003a49 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.994732499, -0.0172439851, 0.101043813, 0
                    0.0175291374, 0.999844491, -0.00193479611, 0
                    -0.100994736, 0.00369581557, 0.99488008, 0
                    8763, 178, 9506, 1
                }
                name: string = "Info_Swain_BirdSpawnNode222"
            }
            0x6c9a0738 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.662579775, -0.013065421, -0.748877406, 0
                    0.0175291412, 0.999844491, -0.00193480926, 0
                    0.748786211, -0.0118452124, 0.662705719, 0
                    10227, 264, 11468, 1
                }
                name: string = "Info_Swain_BirdSpawnNode262"
            }
            0x676fe7e1 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.920187354, -0.0153756347, 0.391176134, 0
                    0.0175291412, 0.999844491, -0.00193481205, 0
                    -0.391085565, 0.00863737147, 0.920313776, 0
                    13257, -735, 1054, 1
                }
                name: string = "Info_Swain_BirdSpawnNode284"
            }
            0x1f9b058b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.0312242396, -0.00248157931, -0.999509335, 0
                    0.017529143, 0.999844491, -0.00193480868, 0
                    0.999358654, -0.0174601302, 0.0312628858, 0
                    12116, 107, 5447, 1
                }
                name: string = "Info_Swain_BirdSpawnNode305"
            }
            0x44448726 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.616373599, -0.00928247627, 0.787399173, 0
                    0.0175291337, 0.999844491, -0.00193480367, 0
                    -0.787258744, 0.0149949873, 0.616440415, 0
                    4185, 254, 7969, 1
                }
                name: string = "Info_Swain_BirdSpawnNode139"
            }
            0x05611a54 = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 12915.3086, -379.534821, 12466.1055 }
                boxMax: vec3 = { 13190.5215, 721.048462, 12758.6553 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.970295727, 0, 0.241921872, 0
                    0, 1, 0, 0
                    -0.241921872, 0, 0.970295727, 0
                    13052, 88, 12612, 1
                }
                name: string = "Turret_T2_C_01"
            }
            0x9f9032f6 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.26601702, -0.00279840454, 0.963964283, 0
                    0.017529143, 0.999844491, -0.00193480297, 0
                    -0.963808954, 0.0174121577, 0.266024709, 0
                    2561, 392, 10762, 1
                }
                name: string = "Info_Swain_BirdSpawnNode80"
            }
            0x476130f5 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.212820888, -0.00562188961, -0.97707504, 0
                    0.0175291337, 0.999844491, -0.00193480495, 0
                    0.976933956, -0.0167155135, 0.212886333, 0
                    6547, 310, 3376, 1
                }
                name: string = "Info_Swain_BirdSpawnNode178"
            }
            0x864cce30 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.408109933, -0.00892146584, -0.912889183, 0
                    0.017529143, 0.999844491, -0.00193480344, 0
                    0.91276449, -0.0152125536, 0.408202857, 0
                    14318, 370, 7076, 1
                }
                name: string = "Info_Swain_BirdSpawnNode276"
            }
            0xe9e77279 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.00318259699, -0.00187934027, -0.999993145, 0
                    0.0175289381, 0.999844491, -0.00193484873, 0
                    0.999841273, -0.017534975, -0.00314915925, 0
                    3205, 192, 12107, 1
                }
                name: string = "Info_Swain_BirdSpawnNode321"
            }
            0x1c0d6e92 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.676857293, -0.0132908011, -0.735994279, 0
                    0.0175291486, 0.999844491, -0.00193480088, 0
                    0.735905528, -0.0115917679, 0.676985025, 0
                    5579, 142, 3226, 1
                }
                name: string = "Info_Swain_BirdSpawnNode23"
            }
            0xcc42d211 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.999840081, 0.0175359044, 0.00350700505, 0
                    0.0175291952, 0.999844491, -0.00193503348, 0
                    -0.00354039227, -0.00187324907, -0.999991953, 0
                    11424, 183, 813, 1
                }
                name: string = "Info_Swain_BirdSpawnNode174"
            }
            0x48cd2440 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.563111842, 0.00827345531, -0.826339304, 0
                    0.0175294951, 0.999844491, -0.00193491671, 0
                    0.826194763, -0.0155748846, -0.563169301, 0
                    4077, 222, 8781, 1
                }
                name: string = "Info_Swain_BirdSpawnNode244"
            }
            0x7e88b608 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.970113158, 0.0174763706, 0.242022797, 0
                    0.0175292604, 0.999844491, -0.00193489122, 0
                    -0.242018968, 0.00236541685, -0.970268607, 0
                    6031, 177, 591, 1
                }
                name: string = "Info_Swain_BirdSpawnNode168"
            }
            0x16e6af4a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.783109069, 0, -0.621884406, 0
                    0, 1, 0, 0
                    0.621884406, 0, 0.783109069, 0
                    5793, 177, 7976, 1
                }
                name: string = "Info_Swain_BirdSpawnNode298"
            }
            0xf6783f95 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.597355902, -0.00892094895, 0.801926672, 0
                    0.0175291412, 0.999844491, -0.00193480798, 0
                    -0.801784694, 0.0152128544, 0.597419381, 0
                    9467, 551, 4752, 1
                }
                name: string = "Info_Swain_BirdSpawnNode181"
            }
            0x90b2b601 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.959310412, -0.016273031, 0.281884313, 0
                    0.0175291486, 0.999844491, -0.00193481112, 0
                    -0.281808972, 0.00679727597, 0.95944643, 0
                    10175, 189, 1905, 1
                }
                name: string = "Info_Swain_BirdSpawnNode44"
            }
            0x5b884352 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.0928376541, -0.000299162843, -0.995681226, 0
                    0.0175290871, 0.999844491, -0.00193483173, 0
                    0.995526969, -0.0176330078, -0.0928179696, 0
                    10449, 56, 4611, 1
                }
                name: string = "Info_Swain_BirdSpawnNode57"
            }
            0x5c5ebd5f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.216886163, 0.00191341795, -0.976195037, 0
                    0.0175295118, 0.999844491, -0.00193484698, 0
                    0.976039529, -0.0175318625, -0.216885969, 0
                    14284, 188, 7939, 1
                }
                name: string = "Info_Swain_BirdSpawnNode278"
            }
            0x9b1e5cf0 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.489625722, -0.0102712177, -0.871872187, 0
                    0.0175291374, 0.999844491, -0.00193480682, 0
                    0.871756494, -0.0143358363, 0.489729613, 0
                    7125, 249, 8498, 1
                }
                name: string = "Info_Swain_BirdSpawnNode149"
            }
            0x4ee5c140 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.513985991, 0, 0, 0
                    0, 0.513985991, 0, 0
                    0, 0, 0.513985991, 0
                    9625, 147, 9543, 1
                }
                name: string = "__NAV_C013"
            }
            0x2c2ea768 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.365232229, 0, 0.930916429, 0
                    0, 1, 0, 0
                    -0.930916429, 0, 0.365232229, 0
                    631, 180, 5669, 1
                }
                name: string = "Info_Swain_BirdSpawnNode136"
            }
            0xe4774c18 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.448965311, -0.00960020907, -0.893497646, 0
                    0.0175291356, 0.999844491, -0.00193480426, 0
                    0.893377244, -0.0147935804, 0.449063748, 0
                    14906, 765, 9545, 1
                }
                name: string = "Info_Swain_BirdSpawnNode127"
            }
            0x8ab35447 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.992679596, -0.0176347382, -0.119482979, 0
                    0.0175291393, 0.999844491, -0.00193480309, 0
                    0.119498521, -0.000173794135, 0.992834389, 0
                    7788, 186, 9023, 1
                }
                name: string = "Info_Swain_BirdSpawnNode148"
            }
            0xe9f61eaa = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.98259902, 0.0175848175, 0.184905127, 0
                    0.0175293349, 0.999844491, -0.00193491927, 0
                    -0.184910387, 0.00134001393, -0.982754469, 0
                    6565, 159, 2356, 1
                }
                name: string = "Info_Swain_BirdSpawnNode38"
            }
            0xbb55b61a = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.513985991, 0, 0, 0
                    0, 0.513985991, 0, 0
                    0, 0, 0.513985991, 0
                    6270, 31, 6366, 1
                }
                name: string = "__NAV_C07"
            }
            0x7ba55ed4 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.426028073, 0.0057184035, -0.904691875, 0
                    0.0175292753, 0.999844491, -0.00193485676, 0
                    0.904540122, -0.0166828949, -0.426062047, 0
                    14253, 182, 4187, 1
                }
                name: string = "Info_Swain_BirdSpawnNode281"
            }
            0x3e8f7f18 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.775479972, -0.0148170516, -0.631198287, 0
                    0.017529143, 0.999844491, -0.00193480856, 0
                    0.631128788, -0.0095639592, 0.77561909, 0
                    11691, 264, 10248, 1
                }
                name: string = "Info_Swain_BirdSpawnNode268"
            }
            0xa8d1b14e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.0828406662, -0.000476121146, -0.996562719, 0
                    0.0175292343, 0.999844491, -0.00193483126, 0
                    0.996408641, -0.0176292639, -0.0828194395, 0
                    6531, 218, 11037, 1
                }
                name: string = "Info_Swain_BirdSpawnNode266"
            }
            0xf5eee37f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.139625356, 0.00436405186, 0.990194798, 0
                    0.0175290257, 0.999844491, -0.00193484838, 0
                    -0.990049243, 0.0170869958, -0.139680132, 0
                    10920, 272, 12583, 1
                }
                name: string = "Info_Swain_BirdSpawnNode121"
            }
            0x59ca69e6 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.907967806, 0.0151082557, -0.418767422, 0
                    0.017529482, 0.999844491, -0.00193496665, 0
                    0.418673068, -0.00909766369, -0.908091486, 0
                    10305, 290, 4089, 1
                }
                name: string = "Info_Swain_BirdSpawnNode56"
            }
            0xdd3e77af = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.914239645, -0.0152448248, 0.404887021, 0
                    0.0175291337, 0.999844491, -0.00193480065, 0
                    -0.404794544, 0.00886618998, 0.914364696, 0
                    7123, 458, 14320, 1
                }
                name: string = "Info_Swain_BirdSpawnNode113"
            }
            0xa0bc7e8f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.638284504, -0.0126797678, -0.769696116, 0
                    0.0175291523, 0.999844491, -0.00193480181, 0
                    0.769600928, -0.0122571653, 0.638407528, 0
                    7948, 172, 3679, 1
                }
                name: string = "Info_Swain_BirdSpawnNode18"
            }
            0x85247798 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.370449454, -0.00829202682, -0.928815603, 0
                    0.0175291412, 0.999844491, -0.00193480391, 0
                    0.928687215, -0.0155645935, 0.370537192, 0
                    14348, 352, 4753, 1
                }
                name: string = "Info_Swain_BirdSpawnNode280"
            }
            0xa90d3cae = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.0630004928, -0.000826751813, -0.998013139, 0
                    0.0175293274, 0.999844491, -0.00193482381, 0
                    0.997859538, -0.0176163949, -0.0629762039, 0
                    8259, 206, 9648, 1
                }
                name: string = "Info_Swain_BirdSpawnNode74"
            }
            0x38a65967 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.872379184, 0.0162400268, 0.488559932, 0
                    0.0175292697, 0.999844491, -0.00193493511, 0
                    -0.488515377, 0.00687610172, -0.872528195, 0
                    7027, 253, 5930, 1
                }
                name: string = "Info_Swain_BirdSpawnNode13"
            }
            0x33c80575 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.718359113, -0.0139401089, -0.695532739, 0
                    0.0175291412, 0.999844491, -0.00193480856, 0
                    0.695451558, -0.0108022047, 0.718491793, 0
                    11491, 213, 7297, 1
                }
                name: string = "Info_Swain_BirdSpawnNode311"
            }
            0x6b4e52ce = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.971998394, 0, 0.234987557, 0
                    0, 1, 0, 0
                    -0.234987557, 0, 0.971998394, 0
                    2192, 194, 5652, 1
                }
                name: string = "Info_Swain_BirdSpawnNode209"
            }
            0xca3b6eb1 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.513985991, 0, 0, 0
                    0, 0.513985991, 0, 0
                    0, 0, 0.513985991, 0
                    8079, 147, 8022, 1
                }
                name: string = "__NAV_C010"
            }
            0xcfff0983 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.889286995, -0.0164753161, -0.457052737, 0
                    0.0175291505, 0.999844491, -0.00193480402, 0
                    0.457013518, -0.00629115012, 0.889437497, 0
                    7605, 302, 4378, 1
                }
                name: string = "Info_Swain_BirdSpawnNode16"
            }
            0x01cf74e3 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.738413334, -0.0142504061, -0.674197853, 0
                    0.0175291356, 0.999844491, -0.00193480833, 0
                    0.674120545, -0.0103894165, 0.738548279, 0
                    8847, 156, 6873, 1
                }
                name: string = "Info_Swain_BirdSpawnNode226"
            }
            0xb300cb18 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.78276962, -0.0125194183, 0.622185647, 0
                    0.0175291356, 0.999844491, -0.00193479878, 0
                    -0.62206465, 0.0124208787, 0.782867372, 0
                    12754, 103, 3885, 1
                }
                name: string = "Info_Swain_BirdSpawnNode239"
            }
            0x92675247 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.999529481, -0.017572267, -0.0251412969, 0
                    0.0175291393, 0.999844491, -0.00193480006, 0
                    0.0251713861, 0.00149318436, 0.999682009, 0
                    5752, 253, 11903, 1
                }
                name: string = "Info_Swain_BirdSpawnNode258"
            }
            0xae402b34 = GdsMapObject {
                0xad304db5: string = "Characters/SRU_OrderMinionSuper/Skins/Skin0"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    12776, 110, 12784, 1
                }
                name: string = "__P_Chaos_Spawn_Barracks__C01"
            }
            0xcdce506f = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.590027988, 0, 0, 0
                    0, 0.590027988, 0, 0
                    0, 0, 0.590027988, 0
                    1382, 92, 4910, 1
                }
                name: string = "__NAV_L03"
            }
            0x28bbd3c8 = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 4893.33008, -263.871979, 4660.17871 }
                boxMax: vec3 = { 5211.35889, 654.371399, 4948.83105 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.997564077, 0, 0.0697564706, 0
                    0, 1, 0, 0
                    -0.0697564706, 0, 0.997564077, 0
                    5048, 43, 4812, 1
                }
                name: string = "Turret_T1_C_04"
            }
            0x41ac569a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.761209428, 0.014600032, 0.648341775, 0
                    0.0175290275, 0.999844491, -0.0019349379, 0
                    -0.648269176, 0.00989190768, -0.761346936, 0
                    9812, 130, 667, 1
                }
                name: string = "Info_Swain_BirdSpawnNode172"
            }
            0x3eca6966 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.999840081, 0.0175359044, 0.00350700505, 0
                    0.0175291952, 0.999844491, -0.00193503348, 0
                    -0.00354039227, -0.00187324907, -0.999991953, 0
                    10830, 186, 700, 1
                }
                name: string = "Info_Swain_BirdSpawnNode173"
            }
            0x07947bda = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 10999.0166, -379.534821, 11072.1406 }
                boxMax: vec3 = { 11270.6113, 721.048462, 11343.7363 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11134, 88, 11207, 1
                }
                name: string = "Turret_T2_C_03"
            }
            0x58ff17b0 = GdsMapObject {
                type: u8 = 3
                boxMin: vec3 = { 13401.9111, -699.51062, 11087.6621 }
                boxMax: vec3 = { 13808.623, 491.519714, 11544.3604 }
                0xad304db5: string = "Characters/OrderInhibitor/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13604, 89, 11316, 1
                }
                name: string = "Barracks_T2_R1"
            }
            0xb73b7c13 = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 12463.0293, -379.534821, 12945.4688 }
                boxMax: vec3 = { 12759.334, 721.048462, 13222.7549 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.96126169, 0, -0.275637329, 0
                    0, 1, 0, 0
                    0.275637329, 0, 0.96126169, 0
                    12611, 88, 13084, 1
                }
                name: string = "Turret_T2_C_02"
            }
            0x2d237f44 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.90938127, -0.0151387593, 0.415688068, 0
                    0.0175291505, 0.999844491, -0.00193480426, 0
                    -0.415594131, 0.00904613268, 0.909505188, 0
                    7228, 307, 1849, 1
                }
                name: string = "Info_Swain_BirdSpawnNode39"
            }
            0x65017bce = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.260880679, -0.0064417799, -0.965349555, 0
                    0.0175291412, 0.999844491, -0.00193480542, 0
                    0.965211868, -0.0164169967, 0.260953039, 0
                    11925, 213, 4619, 1
                }
                name: string = "Info_Swain_BirdSpawnNode193"
            }
            0xd80a8ea5 = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/SRU_AntlerMouse/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.78567636, 0, 0.618637741, 0
                    0, 1, 0, 0
                    -0.618637741, 0, 0.78567636, 0
                    4220, 43, 4499, 1
                }
                name: string = "LevelProp_SRU_AntlerMouse11"
            }
            0x2bf0510a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.704296052, -0.0137211177, -0.709773779, 0
                    0.0175291523, 0.999844491, -0.00193480158, 0
                    0.709689915, -0.011079059, 0.704427063, 0
                    9020, 349, 11845, 1
                }
                name: string = "Info_Swain_BirdSpawnNode115"
            }
            0xcf41a839 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.991550088, 0.0171350837, -0.128587633, 0
                    0.0175293367, 0.999844491, -0.00193483534, 0
                    0.128534481, -0.00417254213, -0.991696239, 0
                    9655, 228, 2253, 1
                }
                name: string = "Info_Swain_BirdSpawnNode43"
            }
            0x66a40664 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.681056023, 0, 0, 0
                    0, 0.681056023, 0, 0
                    0, 0, 0.681056023, 0
                    10506, 17, 1301, 1
                }
                name: string = "__NAV_R07"
            }
            0xf20adc3e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.772925794, 0.0147786262, 0.634324312, 0
                    0.0175293311, 0.999844491, -0.00193506118, 0
                    -0.634254277, 0.00962362159, -0.773064613, 0
                    3904, 153, 12163, 1
                }
                name: string = "Info_Swain_BirdSpawnNode97"
            }
            0x14a88b7c = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.663783014, 0, 0, 0
                    0, 0.663783014, 0, 0
                    0, 0, 0.663783014, 0
                    1508, 10, 11601, 1
                }
                name: string = "__NAV_L08"
            }
            0x13411f68 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.570704639, -0.00841658376, 0.821112275, 0
                    0.0175291542, 0.999844491, -0.0019348088, 0
                    -0.82096827, 0.015497609, 0.570763409, 0
                    6800, 245, 11306, 1
                }
                name: string = "Info_Swain_BirdSpawnNode265"
            }
            0x614ef510 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.183728203, -0.00512323575, -0.982963741, 0
                    0.0175291318, 0.999844491, -0.00193480472, 0
                    0.982820749, -0.016875023, 0.183789447, 0
                    8698, 265, 2897, 1
                }
                name: string = "Info_Swain_BirdSpawnNode47"
            }
            0x79db6769 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.260880679, -0.0064417799, -0.965349555, 0
                    0.0175291412, 0.999844491, -0.00193480542, 0
                    0.965211868, -0.0164169967, 0.260953039, 0
                    12133, 119, 3989, 1
                }
                name: string = "Info_Swain_BirdSpawnNode194"
            }
            0x43b2ac39 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.534972012, -0.0110138273, -0.844797969, 0
                    0.0175291356, 0.999844491, -0.00193480344, 0
                    0.844687939, -0.0137735121, 0.535081863, 0
                    15832, -1147, 14979, 1
                }
                name: string = "Info_Swain_BirdSpawnNode123"
            }
            0x4b426ceb = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.840905428, 0.015789425, 0.540951729, 0
                    0.0175289847, 0.999844491, -0.00193501916, 0
                    -0.540898144, 0.00785516575, -0.8410514, 0
                    9679, 222, 2981, 1
                }
                name: string = "Info_Swain_BirdSpawnNode46"
            }
            0x4bb034f0 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.361418933, -0.0045320713, 0.932392538, 0
                    0.0175291393, 0.999844491, -0.00193480391, 0
                    -0.932238758, 0.017043313, 0.361442178, 0
                    8818, 180, 9543, 1
                }
                name: string = "Info_Swain_BirdSpawnNode221"
            }
            0x5313fa85 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.500557005, 0, 0, 0
                    0, 0.500557005, 0, 0
                    0, 0, 0.500557005, 0
                    5823, 87, 5928, 1
                }
                name: string = "__NAV_C06"
            }
            0xae54fa69 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.480457246, 0.00672631338, -0.876992345, 0
                    0.0175293628, 0.999844491, -0.00193484232, 0
                    0.876842916, -0.0163027253, -0.48050043, 0
                    7256, 172, 9484, 1
                }
                name: string = "Info_Swain_BirdSpawnNode251"
            }
            0x13b8845d = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.862885475, -0.0141503792, 0.505201399, 0
                    0.017529143, 0.999844491, -0.00193480041, 0
                    -0.505095482, 0.0105252583, 0.86299932, 0
                    2364, 146, 3946, 1
                }
                name: string = "Info_Swain_BirdSpawnNode315"
            }
            0x7d65be08 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.77940917, -0.0148765324, -0.626338542, 0
                    0.0175291467, 0.999844491, -0.00193480146, 0
                    0.626269937, -0.00947117805, 0.779548764, 0
                    11257, 186, 2794, 1
                }
                name: string = "Info_Swain_BirdSpawnNode45"
            }
            0x6079b015 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.629229069, -0.0125353634, -0.777118802, 0
                    0.0175291356, 0.999844491, -0.00193480414, 0
                    0.777022183, -0.0124047855, 0.62935096, 0
                    9004, 174, 8024, 1
                }
                name: string = "Info_Swain_BirdSpawnNode225"
            }
            0x5291411f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.141032636, 0, 0.990004957, 0
                    0, 1, 0, 0
                    -0.990004957, 0, -0.141032636, 0
                    2944, 254, 6554, 1
                }
                name: string = "Info_Swain_BirdSpawnNode211"
            }
            0x13c2d29f = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.585889995, 0, 0, 0
                    0, 0.585889995, 0, 0
                    0, 0, 0.585889995, 0
                    3856, 107, 4170, 1
                }
                name: string = "__NAV_C03"
            }
            0xe02057aa = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.881766677, 0, -0.471685767, 0
                    0, 1, 0, 0
                    0.471685767, 0, 0.881766677, 0
                    5844, 177, 7927, 1
                }
                name: string = "Info_Swain_BirdSpawnNode198"
            }
            0x2927c525 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.999843121, 0.0175340902, 0.00250916998, 0
                    0.0175292585, 0.999844491, -0.0019350393, 0
                    -0.002542709, -0.00189075177, -0.999994993, 0
                    12753, 247, 6894, 1
                }
                name: string = "Info_Swain_BirdSpawnNode192"
            }
            0x368e0e7c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.365232229, 0, 0.930916429, 0
                    0, 1, 0, 0
                    -0.930916429, 0, 0.365232229, 0
                    621, 186, 6408, 1
                }
                name: string = "Info_Swain_BirdSpawnNode201"
            }
            0x3c30f339 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.818548918, 0, -0.574436784, 0
                    0, 1, 0, 0
                    0.574436784, 0, 0.818548918, 0
                    3517, 343, 5705, 1
                }
                name: string = "Info_Swain_BirdSpawnNode215"
            }
            0xc58354b1 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.9727633, 0.0166070051, -0.231205076, 0
                    0.0175292362, 0.999844491, -0.00193496584, 0
                    0.231136978, -0.00593511201, -0.972903132, 0
                    11054, 300, 9470, 1
                }
                name: string = "Info_Swain_BirdSpawnNode131"
            }
            0xf8637d0a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.664444685, 0.0130949337, 0.747222662, 0
                    0.0175291635, 0.999844491, -0.00193481485, 0
                    -0.747131824, 0.0118126106, -0.664570928, 0
                    139, 447, 10563, 1
                }
                name: string = "Info_Swain_BirdSpawnNode106"
            }
            0xfeb088f6 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.338860214, 0.00776152546, 0.94080472, 0
                    0.017529292, 0.999844491, -0.00193487457, 0
                    -0.940673411, 0.0158359874, -0.338943541, 0
                    9739, 187, 6748, 1
                }
                name: string = "Info_Swain_BirdSpawnNode151"
            }
            0xcd454bb2 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.634853005, 0, 0, 0
                    0, 0.634853005, 0, 0
                    0, 0, 0.634853005, 0
                    7975, -30, 1230, 1
                }
                name: string = "__NAV_R05"
            }
            0xb6682940 = GdsMapObject {
                0xad304db5: string = "Characters/SRU_OrderMinionSuper/Skins/Skin0"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    12800, 128, 13745, 1
                }
                name: string = "__P_Chaos_Spawn_Barracks__L01"
            }
            0xe0ea69cf = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.316202164, 0, 0.948691845, 0
                    0, 1, 0, 0
                    -0.948691845, 0, -0.316202164, 0
                    4418, 296, 6761, 1
                }
                name: string = "Info_Swain_BirdSpawnNode256"
            }
            0x0bc62a8c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.972152531, -0.0165913012, 0.233760983, 0
                    0.0175291449, 0.999844491, -0.00193480286, 0
                    -0.233692527, 0.00597855356, 0.972292185, 0
                    2288, 191, 13729, 1
                }
                name: string = "Info_Swain_BirdSpawnNode231"
            }
            0xe72661ee = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.682172656, 0.0105449939, -0.731115103, 0
                    0.0175292399, 0.999844491, -0.00193487213, 0
                    0.730980992, -0.0141358087, -0.682251394, 0
                    8840, 237, 2010, 1
                }
                name: string = "Info_Swain_BirdSpawnNode41"
            }
            0x399fa3f3 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.0105538592, 0.00212003151, 0.999942064, 0
                    0.0175291914, 0.999844491, -0.00193481334, 0
                    -0.999790668, 0.0175077561, -0.0105893798, 0
                    174, 454, 8088, 1
                }
                name: string = "Info_Swain_BirdSpawnNode83"
            }
            0xf5b7d20d = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.139625356, 0.00436405186, 0.990194798, 0
                    0.0175290257, 0.999844491, -0.00193484838, 0
                    -0.990049243, 0.0170869958, -0.139680132, 0
                    10149, 263, 11705, 1
                }
                name: string = "Info_Swain_BirdSpawnNode119"
            }
            0x4d42146c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.0983029753, -0.00364915375, -0.995149851, 0
                    0.0175291337, 0.999844491, -0.00193480437, 0
                    0.995002151, -0.0172539186, 0.0983516574, 0
                    8194, 230, 9936, 1
                }
                name: string = "Info_Swain_BirdSpawnNode250"
            }
            0xde1241b0 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.638400018, 0, 0, 0
                    0, 0.638400018, 0, 0
                    0, 0, 0.638400018, 0
                    8870, 9, 1212, 1
                }
                name: string = "__NAV_R06"
            }
            0xb9f781d9 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631130755, 0, 0.775676429, 0
                    0, 1, 0, 0
                    -0.775676429, 0, 0.631130755, 0
                    6300, 257, 7657, 1
                }
                name: string = "Info_Swain_BirdSpawnNode1"
            }
            0x5c76751d = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.139625356, 0.00436405186, 0.990194798, 0
                    0.0175290257, 0.999844491, -0.00193484838, 0
                    -0.990049243, 0.0170869958, -0.139680132, 0
                    9944, 265, 12564, 1
                }
                name: string = "Info_Swain_BirdSpawnNode120"
            }
            0xa7a48199 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.999840081, 0.0175359044, 0.00350700505, 0
                    0.0175291952, 0.999844491, -0.00193503348, 0
                    -0.00354039227, -0.00187324907, -0.999991953, 0
                    10951, 189, 740, 1
                }
                name: string = "Info_Swain_BirdSpawnNode282"
            }
            0xb4fdf96a = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.513985991, 0, 0, 0
                    0, 0.513985991, 0, 0
                    0, 0, 0.513985991, 0
                    10822, 147, 10646, 1
                }
                name: string = "__NAV_C015"
            }
            0xc2f4d44b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.993441343, -0.0176355038, -0.112974964, 0
                    0.0175291449, 0.999844491, -0.00193479587, 0
                    0.112991519, -5.82484172e-05, 0.993595958, 0
                    10986, 289, 9409, 1
                }
                name: string = "Info_Swain_BirdSpawnNode186"
            }
            0xc20f8dec = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.260880679, -0.0064417799, -0.965349555, 0
                    0.0175291412, 0.999844491, -0.00193480542, 0
                    0.965211868, -0.0164169967, 0.260953039, 0
                    12077, 250, 4386, 1
                }
                name: string = "Info_Swain_BirdSpawnNode312"
            }
            0xfe89d4ac = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.984412849, 0.0175973419, 0.174990341, 0
                    0.0175292138, 0.999844491, -0.00193508796, 0
                    -0.174997181, 0.0011625177, -0.984568238, 0
                    6300, 188, 13097, 1
                }
                name: string = "Info_Swain_BirdSpawnNode285"
            }
            0xbda43d14 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.543670237, 0.0111556053, 0.839224815, 0
                    0.0175290778, 0.999844491, -0.00193492044, 0
                    -0.839115858, 0.0136588784, -0.543781221, 0
                    3339, 158, 7529, 1
                }
                name: string = "Info_Swain_BirdSpawnNode137"
            }
            0x7036d0f0 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.458847791, 0.00632515037, -0.888492346, 0
                    0.0175294522, 0.999844491, -0.00193494465, 0
                    0.888341963, -0.0164626297, -0.458887309, 0
                    13225, 183, 1913, 1
                }
                name: string = "Info_Swain_BirdSpawnNode175"
            }
            0xc9b7ed92 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.995914876, 0, 0.0902971476, 0
                    0, 1, 0, 0
                    -0.0902971476, 0, 0.995914876, 0
                    4118, 386, 6718, 1
                }
                name: string = "Info_Swain_BirdSpawnNode254"
            }
            0x2e1f6ad3 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.436060518, 0.00590359373, -0.899897993, 0
                    0.0175294057, 0.999844491, -0.0019348925, 0
                    0.899746597, -0.0166184064, -0.436096162, 0
                    14279, 187, 7485, 1
                }
                name: string = "Info_Swain_BirdSpawnNode275"
            }
            0x79d4c778 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.989277124, 0.0170633867, -0.145050526, 0
                    0.0175293516, 0.999844491, -0.00193487143, 0
                    0.144994944, -0.00445676595, -0.989422381, 0
                    7116, 198, 10398, 1
                }
                name: string = "Info_Swain_BirdSpawnNode145"
            }
            0x0d321a5a = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 8818.58203, -429.534821, 8373.6709 }
                boxMax: vec3 = { 9092.2832, 671.048462, 8647.28906 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.998220444, 0, -0.05963137, 0
                    0, 1, 0, 0
                    0.05963137, 0, 0.998220444, 0
                    8955, 38, 8510, 1
                }
                name: string = "Turret_T2_C_05"
            }
            0x6ce08df2 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.614868581, -0.00925382227, 0.788575292, 0
                    0.017529143, 0.999844491, -0.00193480158, 0
                    -0.788434744, 0.0150126973, 0.614935219, 0
                    691, 222, 11861, 1
                }
                name: string = "Info_Swain_BirdSpawnNode232"
            }
            0xd9934e32 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.53472209, 0.00773954717, -0.844992518, 0
                    0.0175293516, 0.999844491, -0.00193491508, 0
                    0.844846129, -0.0158468131, -0.534774601, 0
                    14320, 370, 6986, 1
                }
                name: string = "Info_Swain_BirdSpawnNode277"
            }
            0x42099fc4 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.682797253, -0.0133842742, -0.73048532, 0
                    0.0175291356, 0.999844491, -0.00193480577, 0
                    0.730397582, -0.0114836963, 0.682925701, 0
                    5524, 217, 11017, 1
                }
                name: string = "Info_Swain_BirdSpawnNode197"
            }
            0x825b7788 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.487848133, -0.00686373003, 0.872901559, 0
                    0.0175291356, 0.999844491, -0.00193480426, 0
                    -0.872752488, 0.0162451006, 0.487892568, 0
                    13002, 185, 8545, 1
                }
                name: string = "Info_Swain_BirdSpawnNode310"
            }
            0x5ff24f34 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.484845012, 0, 0, 0
                    0, 0.484845012, 0, 0
                    0, 0, 0.484845012, 0
                    1508, 133, 3597, 1
                }
                name: string = "__NAV_L02"
            }
            0x27fb087f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.0197941642, 0.00228176103, 0.999801457, 0
                    0.0175290741, 0.999844491, -0.00193481683, 0
                    -0.999650419, 0.0174872968, -0.0198310837, 0
                    239, 450, 10983, 1
                }
                name: string = "Info_Swain_BirdSpawnNode107"
            }
            0x15f0e12d = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.0105538592, 0.00212003151, 0.999942064, 0
                    0.0175291914, 0.999844491, -0.00193481334, 0
                    -0.999790668, 0.0175077561, -0.0105893798, 0
                    640, 573, 7864, 1
                }
                name: string = "Info_Swain_BirdSpawnNode82"
            }
            0x9b523671 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.830860972, 0.0134901265, -0.556316495, 0
                    0.0175292995, 0.999844491, -0.00193483732, 0
                    0.556203902, -0.0113594197, -0.830968201, 0
                    8216, 187, 13033, 1
                }
                name: string = "Info_Swain_BirdSpawnNode289"
            }
            0x5966e22f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.138644487, 0.00434714276, 0.990332663, 0
                    0.0175291281, 0.999844491, -0.00193485455, 0
                    -0.990187049, 0.0170914121, -0.138699129, 0
                    8088, 154, 6012, 1
                }
                name: string = "Info_Swain_BirdSpawnNode152"
            }
            0x55059910 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.780729651, 0.0124788042, -0.624744356, 0
                    0.017529387, 0.999844491, -0.00193494849, 0
                    0.624623001, -0.0124620562, -0.780826986, 0
                    4632, 510, 355, 1
                }
                name: string = "Info_Swain_BirdSpawnNode33"
            }
            0x89434de3 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.966451883, 0.0164480153, -0.256320596, 0
                    0.017529523, 0.999844491, -0.00193501182, 0
                    0.256248891, -0.00636327313, -0.966589868, 0
                    8949, 114, 5323, 1
                }
                name: string = "Info_Swain_BirdSpawnNode52"
            }
            0x74bb302d = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.448965311, -0.00960020907, -0.893497646, 0
                    0.0175291356, 0.999844491, -0.00193480426, 0
                    0.893377244, -0.0147935804, 0.449063748, 0
                    14623, 273, 12390, 1
                }
                name: string = "Info_Swain_BirdSpawnNode125"
            }
            0x7b3c45b6 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.629229069, -0.0125353634, -0.777118802, 0
                    0.0175291356, 0.999844491, -0.00193480414, 0
                    0.777022183, -0.0124047855, 0.62935096, 0
                    9397, 136, 7556, 1
                }
                name: string = "Info_Swain_BirdSpawnNode71"
            }
            0x64e20324 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.609780371, 0.0122242495, 0.792476177, 0
                    0.0175293311, 0.999844491, -0.00193482998, 0
                    -0.792376578, 0.012711755, -0.609899819, 0
                    5418, 244, 7291, 1
                }
                name: string = "Info_Swain_BirdSpawnNode299"
            }
            0x0b62b07c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.970113158, 0.0174763706, 0.242022797, 0
                    0.0175292604, 0.999844491, -0.00193489122, 0
                    -0.242018968, 0.00236541685, -0.970268607, 0
                    7373, 232, 559, 1
                }
                name: string = "Info_Swain_BirdSpawnNode36"
            }
            0xf4d9d56f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.344134063, -0.00785015989, -0.938887715, 0
                    0.0175291356, 0.999844491, -0.00193480693, 0
                    0.938756883, -0.0157920569, 0.344218135, 0
                    14239, 276, 5895, 1
                }
                name: string = "Info_Swain_BirdSpawnNode279"
            }
            0x845c2e11 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.448965311, -0.00960020907, -0.893497646, 0
                    0.0175291356, 0.999844491, -0.00193480426, 0
                    0.893377244, -0.0147935804, 0.449063748, 0
                    14431, 277, 11204, 1
                }
                name: string = "Info_Swain_BirdSpawnNode126"
            }
            0x7203fdad = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.663377583, 0, 0.748284876, 0
                    0, 1, 0, 0
                    -0.748284876, 0, 0.663377583, 0
                    5267, 190, 6291, 1
                }
                name: string = "Info_Swain_BirdSpawnNode219"
            }
            0xe8c320e9 = GdsMapObject {
                type: u8 = 3
                boxMin: vec3 = { 3248.45264, -709.943665, 1032.26855 }
                boxMax: vec3 = { 3695.30786, 415.522034, 1441.49951 }
                0xad304db5: string = "Characters/OrderInhibitor/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3452, 89, 1236, 1
                }
                name: string = "Barracks_T1_R1"
            }
            0xfa2a0667 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.0774208009, -0.00328661944, -0.996993065, 0
                    0.017529143, 0.999844491, -0.00193480565, 0
                    0.996844411, -0.0173266418, 0.0774663761, 0
                    8566, 227, 7107, 1
                }
                name: string = "Info_Swain_BirdSpawnNode54"
            }
            0x59d2c22f = GdsMapObject {
                0xad304db5: string = "Characters/SRU_OrderMinionSuper/Skins/Skin0"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13719, 119, 12845, 1
                }
                name: string = "__P_Chaos_Spawn_Barracks__R01"
            }
            0xc9b05b93 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.471749365, 0.00997686386, 0.881676257, 0
                    0.0175290424, 0.999844491, -0.0019349478, 0
                    -0.881558418, 0.0145421308, -0.471850872, 0
                    5497, 269, 7227, 1
                }
                name: string = "Info_Swain_BirdSpawnNode92"
            }
            0xdeaeef13 = GdsMapObject {
                type: u8 = 4
                boxMin: vec3 = { 12923.4961, -607.408813, 12915.3818 }
                boxMax: vec3 = { 13562.8281, 702.430664, 13554.7139 }
                0xad304db5: string = "Characters/ChaosNexus/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13243, 91, 13235, 1
                }
                name: string = "HQ_T2"
            }
            0xb2e59aa3 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.141032636, 0, 0.990004957, 0
                    0, 1, 0, 0
                    -0.990004957, 0, -0.141032636, 0
                    2093, 98, 7327, 1
                }
                name: string = "Info_Swain_BirdSpawnNode207"
            }
            0xcbb413d2 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.108800106, 0.0038310925, 0.994056284, 0
                    0.0175292157, 0.999844491, -0.00193481625, 0
                    -0.993909061, 0.017214518, -0.108850338, 0
                    11498, 193, 2718, 1
                }
                name: string = "Info_Swain_BirdSpawnNode179"
            }
            0x50c20c5b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.853845537, 0, 0.520526528, 0
                    0, 1, 0, 0
                    -0.520526528, 0, 0.853845537, 0
                    4053, 446, 5451, 1
                }
                name: string = "Info_Swain_BirdSpawnNode7"
            }
            0x2a582c42 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.862885475, -0.0141503792, 0.505201399, 0
                    0.017529143, 0.999844491, -0.00193480041, 0
                    -0.505095482, 0.0105252583, 0.86299932, 0
                    3140, 281, 4687, 1
                }
                name: string = "Info_Swain_BirdSpawnNode27"
            }
            0x61bfb0f6 = GdsMapObject {
                type: u8 = 4
                boxMin: vec3 = { 1210.62537, -730.611938, 1318.8988 }
                boxMax: vec3 = { 1892.08179, 439.198334, 2000.3551 }
                0xad304db5: string = "Characters/OrderNexus/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.707106769, 0, 0.707106769, 0
                    0, 1, 0, 0
                    -0.707106769, 0, 0.707106769, 0
                    1551, 86, 1659, 1
                }
                name: string = "HQ_T1"
            }
            0x17ef8802 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.970113158, 0.0174763706, 0.242022797, 0
                    0.0175292604, 0.999844491, -0.00193489122, 0
                    -0.242018968, 0.00236541685, -0.970268607, 0
                    7719, 184, 582, 1
                }
                name: string = "Info_Swain_BirdSpawnNode170"
            }
            0x21f06c67 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.32928738, 0.00760016637, 0.944199145, 0
                    0.0175290164, 0.999844491, -0.00193486793, 0
                    -0.944067001, 0.0159137547, -0.329369396, 0
                    9266, 411, 4244, 1
                }
                name: string = "Info_Swain_BirdSpawnNode49"
            }
            0x54258723 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.881766677, 0, -0.471685767, 0
                    0, 1, 0, 0
                    0.471685767, 0, 0.881766677, 0
                    5941, 158, 7754, 1
                }
                name: string = "Info_Swain_BirdSpawnNode2"
            }
            0x6c63de69 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.406191915, 0.00888954569, 0.913744569, 0
                    0.0175291598, 0.999844491, -0.00193485164, 0
                    -0.913619637, 0.0152312526, -0.406284571, 0
                    12210, 145, 5523, 1
                }
                name: string = "Info_Swain_BirdSpawnNode304"
            }
            0x88838440 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.32928738, 0.00760016637, 0.944199145, 0
                    0.0175290164, 0.999844491, -0.00193486793, 0
                    -0.944067001, 0.0159137547, -0.329369396, 0
                    8366, 157, 4363, 1
                }
                name: string = "Info_Swain_BirdSpawnNode50"
            }
            0x020b62cd = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.513985991, 0, 0, 0
                    0, 0.513985991, 0, 0
                    0, 0, 0.513985991, 0
                    9149, 147, 9105, 1
                }
                name: string = "__NAV_C012"
            }
            0x52ad6e5e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.984057426, -0.0169097539, 0.17704533, 0
                    0.0175291337, 0.999844491, -0.0019348124, 0
                    -0.176985085, 0.00500741787, 0.984200776, 0
                    4718, 325, 11135, 1
                }
                name: string = "Info_Swain_BirdSpawnNode77"
            }
            0x94c75fcd = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.400619388, 0.00525068911, -0.916229546, 0
                    0.0175295714, 0.999844491, -0.00193490123, 0
                    0.916076839, -0.0168362688, -0.40064913, 0
                    1734, 373, 8650, 1
                }
                name: string = "Info_Swain_BirdSpawnNode81"
            }
            0x11d44c3e = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/sru_gromp_prop/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.499258578, -0.00012391762, -0.0272185188, 0
                    8.51417062e-05, 0.499985248, -0.00383800128, 0
                    0.0272186678, -0.00383694516, -0.499243855, 0
                    14301, 92, 11051, 1
                }
                name: string = "LevelProp_sru_gromp_prop11"
            }
            0x1f07c538 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.216886163, 0.00191341795, -0.976195037, 0
                    0.0175295118, 0.999844491, -0.00193484698, 0
                    0.976039529, -0.0175318625, -0.216885969, 0
                    14274, 188, 7778, 1
                }
                name: string = "Info_Swain_BirdSpawnNode273"
            }
            0x1c83bf4a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.997882128, 0.0176161472, 0.0626170933, 0
                    0.0175293703, 0.999844491, -0.00193497573, 0
                    -0.0626414418, -0.000833239465, -0.998035729, 0
                    5530, 187, 4768, 1
                }
                name: string = "Info_Swain_BirdSpawnNode200"
            }
            0x70256120 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.351336539, 0.00434788736, -0.936239123, 0
                    0.0175294783, 0.999844491, -0.00193490658, 0
                    0.936085105, -0.0170915872, -0.351358116, 0
                    14050, 286, 2663, 1
                }
                name: string = "Info_Swain_BirdSpawnNode313"
            }
            0xbd47e486 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.834493816, 0.0135644507, -0.550850332, 0
                    0.0175295174, 0.999844491, -0.00193506759, 0
                    0.550738394, -0.0112709422, -0.83460182, 0
                    13659, 287, 2294, 1
                }
                name: string = "Info_Swain_BirdSpawnNode238"
            }
            0x681f4000 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.999819696, 0.0175430179, 0.00727099506, 0
                    0.0175293814, 0.999844491, -0.00193499413, 0
                    -0.00730380975, -0.0018071892, -0.999971688, 0
                    9269, 375, 538, 1
                }
                name: string = "Info_Swain_BirdSpawnNode42"
            }
            0x422de0b6 = GdsMapObject {
                type: u8 = 3
                boxMin: vec3 = { 2999.15308, -707.678894, 3004.90869 }
                boxMax: vec3 = { 3432.21216, 417.786774, 3451.52392 }
                0xad304db5: string = "Characters/OrderInhibitor/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.707106769, 0, 0.707106769, 0
                    0, 1, 0, 0
                    -0.707106769, 0, 0.707106769, 0
                    3203, 92, 3208, 1
                }
                name: string = "Barracks_T1_C1"
            }
            0xf1f185b5 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.0699359626, -0.000704274687, -0.997551262, 0
                    0.0175290015, 0.999844491, -0.00193481066, 0
                    0.997397482, -0.0176213887, -0.0699127465, 0
                    6019, 190, 5388, 1
                }
                name: string = "Info_Swain_BirdSpawnNode10"
            }
            0xaa51818a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.772925794, 0.0147786262, 0.634324312, 0
                    0.0175293311, 0.999844491, -0.00193506118, 0
                    -0.634254277, 0.00962362159, -0.773064613, 0
                    5140, 165, 12004, 1
                }
                name: string = "Info_Swain_BirdSpawnNode111"
            }
            0x8c0c6e3b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.555385709, 0.00812798366, -0.831553161, 0
                    0.0175297353, 0.999844491, -0.00193498773, 0
                    0.831408083, -0.0156515725, -0.555441797, 0
                    7362, 179, 6602, 1
                }
                name: string = "Info_Swain_BirdSpawnNode14"
            }
            0xceb93415 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.999840081, 0.0175359044, 0.00350700505, 0
                    0.0175291952, 0.999844491, -0.00193503348, 0
                    -0.00354039227, -0.00187324907, -0.999991953, 0
                    12538, 232, 1250, 1
                }
                name: string = "Info_Swain_BirdSpawnNode61"
            }
            0x134f8cfc = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.555496812, 0.011347956, 0.831441224, 0
                    0.0175293367, 0.999844491, -0.00193483441, 0
                    -0.831333876, 0.0134998187, -0.555609345, 0
                    7001, 237, 3499, 1
                }
                name: string = "Info_Swain_BirdSpawnNode19"
            }
            0x5e05d336 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.653588414, 0.0129231084, 0.756739855, 0
                    0.0175292157, 0.999844491, -0.00193488842, 0
                    -0.75664717, 0.012000435, -0.653713286, 0
                    9201, 91, 5218, 1
                }
                name: string = "Info_Swain_BirdSpawnNode271"
            }
            0x3656908c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.408109933, -0.00892146584, -0.912889183, 0
                    0.017529143, 0.999844491, -0.00193480344, 0
                    0.91276449, -0.0152125536, 0.408202857, 0
                    14285, 187, 7422, 1
                }
                name: string = "Info_Swain_BirdSpawnNode274"
            }
            0xa63d8e4e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.914239645, -0.0152448248, 0.404887021, 0
                    0.0175291337, 0.999844491, -0.00193480065, 0
                    -0.404794544, 0.00886618998, 0.914364696, 0
                    8044, 335, 14361, 1
                }
                name: string = "Info_Swain_BirdSpawnNode114"
            }
            0x5e70192b = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.598610997, 0, 0, 0
                    0, 0.598610997, 0, 0
                    0, 0, 0.598610997, 0
                    1207, 13, 7787, 1
                }
                name: string = "__NAV_L05"
            }
            0x25a61e4e = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/SRU_AntlerMouse/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.978337646, -0.0620163344, -0.197508171, 0
                    -0.102189742, 0.97440505, 0.200229868, 0
                    0.180035442, 0.216075733, -0.959634602, 0
                    2054, 50, 5703, 1
                }
                name: string = "LevelProp_SRU_AntlerMouse6"
            }
            0xfa1ae791 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.555496812, 0.011347956, 0.831441224, 0
                    0.0175293367, 0.999844491, -0.00193483441, 0
                    -0.831333876, 0.0134998187, -0.555609345, 0
                    6891, 213, 3594, 1
                }
                name: string = "Info_Swain_BirdSpawnNode177"
            }
            0x53a5e1d7 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.6789065, -0.0104818484, 0.734149873, 0
                    0.0175291486, 0.999844491, -0.00193480379, 0
                    -0.734015465, 0.0141825741, 0.678984702, 0
                    901, 115, 12316, 1
                }
                name: string = "Info_Swain_BirdSpawnNode233"
            }
            0x0736376c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.936857939, -0.015748838, 0.34935534, 0
                    0.0175291505, 0.999844491, -0.00193480542, 0
                    -0.349270523, 0.00793654006, 0.936988294, 0
                    5136, 393, 14267, 1
                }
                name: string = "Info_Swain_BirdSpawnNode307"
            }
            0x633e5f49 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.681056023, 0, 0, 0
                    0, 0.681056023, 0, 0
                    0, 0, 0.681056023, 0
                    13696, -13, 8608, 1
                }
                name: string = "__NAV_R015"
            }
            0x1cfd12f1 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.472719759, 0.00999285467, 0.881156147, 0
                    0.0175290983, 0.999844491, -0.00193490053, 0
                    -0.881038427, 0.0145312073, -0.472821414, 0
                    9758, 279, 8395, 1
                }
                name: string = "Info_Swain_BirdSpawnNode70"
            }
            0xdbcbc0e3 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.0312242396, -0.00248157931, -0.999509335, 0
                    0.017529143, 0.999844491, -0.00193480868, 0
                    0.999358654, -0.0174601302, 0.0312628858, 0
                    12058, 300, 5980, 1
                }
                name: string = "Info_Swain_BirdSpawnNode65"
            }
            0x6cec46c1 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.343203902, -0.0041994541, 0.939251542, 0
                    0.0175291356, 0.999844491, -0.00193480309, 0
                    -0.939097345, 0.0171282981, 0.343224138, 0
                    5783, 176, 4488, 1
                }
                name: string = "Info_Swain_BirdSpawnNode21"
            }
            0x4b4e0a5b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.975490987, -0.017526621, -0.21934019, 0
                    0.0175291374, 0.999844491, -0.00193480274, 0
                    0.219339982, -0.00195746147, 0.975646496, 0
                    9392, 213, 14361, 1
                }
                name: string = "Info_Swain_BirdSpawnNode294"
            }
            0x89c1aa3e = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 1593.59546, -218.842239, 2118.3706 }
                boxMax: vec3 = { 1915.27698, 699.401123, 2406.96362 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1748, 88, 2270, 1
                }
                name: string = "Turret_T1_C_01"
            }
            0xfe905771 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.414446145, 0.00902712345, 0.910029054, 0
                    0.0175290275, 0.999844491, -0.00193497282, 0
                    -0.909905016, 0.0151499826, -0.414539933, 0
                    4600, 155, 8712, 1
                }
                name: string = "Info_Swain_BirdSpawnNode93"
            }
            0xde0da47a = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { -267.868286, -876.4198, -328.916931 }
                boxMax: vec3 = { 177.103943, 879.566528, 109.460289 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.887194276, 0, 0.0758410096, 0
                    0, 0.890429974, 0, 0
                    -0.0758410096, 0, 0.887194276, 0
                    105, 33, 134, 1
                }
                name: string = "Turret_OrderTurretShrine"
            }
            0xd681d33b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.26601702, -0.00279840454, 0.963964283, 0
                    0.017529143, 0.999844491, -0.00193480297, 0
                    -0.963808954, 0.0174121577, 0.266024709, 0
                    2699, 194, 11049, 1
                }
                name: string = "Info_Swain_BirdSpawnNode143"
            }
            0xf2b4e4f4 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.972392619, -0.0165974516, 0.232759833, 0
                    0.0175291505, 0.999844491, -0.00193480554, 0
                    -0.232691512, 0.00596147263, 0.972532332, 0
                    7982, 163, 6021, 1
                }
                name: string = "Info_Swain_BirdSpawnNode153"
            }
            0x852ce6d6 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.228774816, 0.00212706509, -0.973477066, 0
                    0.0175295286, 0.999844491, -0.00193489937, 0
                    0.973321557, -0.0175072495, -0.228776529, 0
                    14419, 269, 10767, 1
                }
                name: string = "Info_Swain_BirdSpawnNode267"
            }
            0xef2b33de = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.910902381, -0.0167676266, -0.412281066, 0
                    0.0175291393, 0.999844491, -0.00193480891, 0
                    0.412249386, -0.00546451006, 0.911054671, 0
                    13178, 694, 14582, 1
                }
                name: string = "Info_Swain_BirdSpawnNode122"
            }
            0xd10dda3e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.365121931, -0.00459978683, 0.930948317, 0
                    0.0175291374, 0.999844491, -0.00193480239, 0
                    -0.930794656, 0.0170251597, 0.365145773, 0
                    1014, 278, 12957, 1
                }
                name: string = "Info_Swain_BirdSpawnNode109"
            }
            0x35c09451 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.959310412, -0.016273031, 0.281884313, 0
                    0.0175291486, 0.999844491, -0.00193481112, 0
                    -0.281808972, 0.00679727597, 0.95944643, 0
                    10071, 190, 1887, 1
                }
                name: string = "Info_Swain_BirdSpawnNode157"
            }
            0xe8292c75 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.361589611, -0.00453518983, 0.932326317, 0
                    0.01752913, 0.999844491, -0.00193480251, 0
                    -0.932172537, 0.0170424748, 0.361612886, 0
                    12982, 185, 4099, 1
                }
                name: string = "Info_Swain_BirdSpawnNode320"
            }
            0x332a0c19 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.663783014, 0, 0, 0
                    0, 0.663783014, 0, 0
                    0, 0, 0.663783014, 0
                    11348, 145, 13344, 1
                }
                name: string = "__NAV_L017"
            }
            0x864254cc = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.95937407, 0.016274916, -0.281667471, 0
                    0.0175295379, 0.999844491, -0.00193490612, 0
                    0.28159216, -0.00679379934, -0.959510148, 0
                    7180, 200, 10422, 1
                }
                name: string = "Info_Swain_BirdSpawnNode264"
            }
            0xcd038c83 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.970113158, 0.0174763706, 0.242022797, 0
                    0.0175292604, 0.999844491, -0.00193489122, 0
                    -0.242018968, 0.00236541685, -0.970268607, 0
                    8155, 155, 629, 1
                }
                name: string = "Info_Swain_BirdSpawnNode169"
            }
            0xe6d05fbe = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.957390904, -0.0173426922, -0.28827402, 0
                    0.017529143, 0.999844491, -0.00193480588, 0
                    0.288262725, -0.00320083066, 0.957545996, 0
                    9105, 302, 5058, 1
                }
                name: string = "Info_Swain_BirdSpawnNode154"
            }
            0x98059a63 = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/sru_storekeepersouth/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.707106769, 0, 0.707106769, 0
                    0, 1, 0, 0
                    -0.707106769, 0, -0.707106769, 0
                    40, 162, 1112, 1
                }
                name: string = "LevelProp_sru_storekeepersouth"
            }
            0xcf444666 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.542577982, 0, 0, 0
                    0, 0.542577982, 0, 0
                    0, 0, 0.542577982, 0
                    4874, 43, 5141, 1
                }
                name: string = "__NAV_C04"
            }
            0xc0a2d80b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.371647984, -0.00471920753, 0.928361714, 0
                    0.0175291486, 0.999844491, -0.00193480507, 0
                    -0.928208232, 0.0169924572, 0.371672899, 0
                    656, 190, 10818, 1
                }
                name: string = "Info_Swain_BirdSpawnNode236"
            }
            0x73396a2e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.877973258, -0.0163183212, -0.478431463, 0
                    0.0175291356, 0.999844491, -0.00193480484, 0
                    0.478388637, -0.0066877827, 0.878122747, 0
                    7477, 154, 8219, 1
                }
                name: string = "Info_Swain_BirdSpawnNode150"
            }
            0x82072c4b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.458847791, 0.00632515037, -0.888492346, 0
                    0.0175294522, 0.999844491, -0.00193494465, 0
                    0.888341963, -0.0164626297, -0.458887309, 0
                    13612, 288, 2231, 1
                }
                name: string = "Info_Swain_BirdSpawnNode62"
            }
            0x7431c8ed = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.914000154, 0.0152397947, -0.405427486, 0
                    0.0175294206, 0.999844491, -0.00193491601, 0
                    0.405334949, -0.00887542218, -0.914125144, 0
                    6488, 184, 5798, 1
                }
                name: string = "Info_Swain_BirdSpawnNode11"
            }
            0x766413c9 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.780729651, 0.0124788042, -0.624744356, 0
                    0.017529387, 0.999844491, -0.00193494849, 0
                    0.624623001, -0.0124620562, -0.780826986, 0
                    4056, 282, 299, 1
                }
                name: string = "Info_Swain_BirdSpawnNode165"
            }
            0xae091450 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.489625722, -0.0102712177, -0.871872187, 0
                    0.0175291374, 0.999844491, -0.00193480682, 0
                    0.871756494, -0.0143358363, 0.489729613, 0
                    6654, 134, 8949, 1
                }
                name: string = "Info_Swain_BirdSpawnNode94"
            }
            0xccb8d217 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.663783014, 0, 0, 0
                    0, 0.663783014, 0, 0
                    0, 0, 0.663783014, 0
                    2720, 10, 13100, 1
                }
                name: string = "__NAV_L010"
            }
            0xac6c4d2a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.989652216, 0, 0.143487006, 0
                    0, 1, 0, 0
                    -0.143487006, 0, 0.989652216, 0
                    5798, 137, 6879, 1
                }
                name: string = "Info_Swain_BirdSpawnNode3"
            }
            0x5047726b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.952197134, 0.0172842517, 0.304994911, 0
                    0.0175292939, 0.999844491, -0.00193518156, 0
                    -0.304980934, 0.00350367138, -0.952351987, 0
                    12656, 267, 10064, 1
                }
                name: string = "Info_Swain_BirdSpawnNode263"
            }
            0x748102e5 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.616373599, -0.00928247627, 0.787399173, 0
                    0.0175291337, 0.999844491, -0.00193480367, 0
                    -0.787258744, 0.0149949873, 0.616440415, 0
                    4289, 303, 7586, 1
                }
                name: string = "Info_Swain_BirdSpawnNode91"
            }
            0x08c6461d = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 2022.97437, -217.830078, 1655.29358 }
                boxMax: vec3 = { 2344.65576, 700.413269, 1943.88647 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2177, 89, 1807, 1
                }
                name: string = "Turret_T1_C_02"
            }
            0x2cd97e31 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.864620626, -0.014186562, 0.502224982, 0
                    0.0175291449, 0.999844491, -0.0019347975, 0
                    -0.502119422, 0.0104764402, 0.864734828, 0
                    9423, 261, 10440, 1
                }
                name: string = "Info_Swain_BirdSpawnNode118"
            }
            0x4d11ab90 = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/sru_snail/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.0253221821, 0.00565829081, -0.999663353, 0
                    0.16301848, 0.986621916, 0.00145510002, 0
                    0.986298025, -0.162926748, -0.0259058271, 0
                    392, 122, 1311, 1
                }
                name: string = "LevelProp_sru_snail8"
            }
            0x7d5e277b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.141032636, 0, 0.990004957, 0
                    0, 1, 0, 0
                    -0.990004957, 0, -0.141032636, 0
                    2272, 204, 6540, 1
                }
                name: string = "Info_Swain_BirdSpawnNode205"
            }
            0xe8ecd04c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.99232769, 0.0176341329, 0.122371756, 0
                    0.0175290834, 0.999844491, -0.00193505269, 0
                    -0.122386843, 0.000224858333, -0.992482424, 0
                    2355, 187, 11549, 1
                }
                name: string = "Info_Swain_BirdSpawnNode246"
            }
            0x3b751cb3 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.663783014, 0, 0, 0
                    0, 0.663783014, 0, 0
                    0, 0, 0.663783014, 0
                    3486, 10, 13473, 1
                }
                name: string = "__NAV_L011"
            }
            0x09a4e178 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.427619517, -0.0057477518, 0.903940558, 0
                    0.0175291561, 0.999844491, -0.00193480751, 0
                    -0.903788865, 0.0166726764, 0.42765376, 0
                    10624, 260, 6937, 1
                }
                name: string = "Info_Swain_BirdSpawnNode55"
            }
            0x8d80505b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.910437047, 0.0151619464, -0.413369685, 0
                    0.0175295062, 0.999844491, -0.00193512777, 0
                    0.413276047, -0.00900797825, -0.910561264, 0
                    4463, 189, 13042, 1
                }
                name: string = "Info_Swain_BirdSpawnNode98"
            }
            0xfa9a2d25 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.513985991, 0, 0, 0
                    0, 0.513985991, 0, 0
                    0, 0, 0.513985991, 0
                    10193, 147, 10035, 1
                }
                name: string = "__NAV_C014"
            }
            0x6b4954bf = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.663783014, 0, 0, 0
                    0, 0.663783014, 0, 0
                    0, 0, 0.663783014, 0
                    5504, 10, 13608, 1
                }
                name: string = "__NAV_L013"
            }
            0xa6605312 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.794846952, -0.0127611747, 0.606675744, 0
                    0.0175291505, 0.999844491, -0.0019348088, 0
                    -0.606556654, 0.012172387, 0.794947088, 0
                    4881, 281, 2272, 1
                }
                name: string = "Info_Swain_BirdSpawnNode26"
            }
            0xd5f9a065 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.482673824, 0, 0.875800192, 0
                    0, 1, 0, 0
                    -0.875800192, 0, 0.482673824, 0
                    5381, 378, 6816, 1
                }
                name: string = "Info_Swain_BirdSpawnNode4"
            }
            0x3fbbe378 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.890478611, -0.0164917018, -0.45472616, 0
                    0.0175291505, 0.999844491, -0.00193480041, 0
                    0.454687357, -0.00624806434, 0.890629232, 0
                    9720, 181, 14314, 1
                }
                name: string = "Info_Swain_BirdSpawnNode293"
            }
            0xc0f86430 = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/sru_lizard/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.435681134, 0.229749233, -0.0860072151, 0
                    -0.244773731, 0.418811798, -0.121171378, 0
                    0.0163636114, 0.147688776, 0.477409959, 0
                    10844, 168, 12488, 1
                }
                name: string = "LevelProp_sru_lizard9"
            }
            0x8ecc10d0 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.845689416, -0.0158587731, -0.533439636, 0
                    0.0175291356, 0.999844491, -0.00193480728, 0
                    0.533387363, -0.00771448994, 0.845835924, 0
                    12410, 185, 7048, 1
                }
                name: string = "Info_Swain_BirdSpawnNode190"
            }
            0xe31a4c34 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.666259289, 0, 0.745720148, 0
                    0, 1, 0, 0
                    -0.745720148, 0, -0.666259289, 0
                    3587, 329, 5689, 1
                }
                name: string = "Info_Swain_BirdSpawnNode214"
            }
            0x70b88903 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.972152531, -0.0165913012, 0.233760983, 0
                    0.0175291449, 0.999844491, -0.00193480286, 0
                    -0.233692527, 0.00597855356, 0.972292185, 0
                    2669, 183, 13885, 1
                }
                name: string = "Info_Swain_BirdSpawnNode309"
            }
            0xcee1386a = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 10325.4551, -379.534821, 13507.1797 }
                boxMax: vec3 = { 10636.7266, 721.048462, 13793.8906 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.667602479, 0, -0.744517922, 0
                    0, 1, 0, 0
                    0.744517922, 0, 0.667602479, 0
                    10481, 88, 13650, 1
                }
                name: string = "Turret_T2_L_01"
            }
            0xfe5b43f4 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.992679596, -0.0176347382, -0.119482979, 0
                    0.0175291393, 0.999844491, -0.00193480309, 0
                    0.119498521, -0.000173794135, 0.992834389, 0
                    7626, 170, 9078, 1
                }
                name: string = "Info_Swain_BirdSpawnNode146"
            }
            0x54bae746 = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 9631.9043, -429.534821, 9977.81055 }
                boxMax: vec3 = { 9903.49902, 671.048462, 10249.4062 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    9767, 38, 10113, 1
                }
                name: string = "Turret_T2_C_04"
            }
            0xfe56324f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.399439782, -0.00877687242, -0.91671741, 0
                    0.0175291486, 0.999844491, -0.00193480356, 0
                    0.916591823, -0.0152964378, 0.399531513, 0
                    14234, 181, 8986, 1
                }
                name: string = "Info_Swain_BirdSpawnNode129"
            }
            0xf8b8ede1 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.997368634, -0.0176218133, -0.0703227669, 0
                    0.0175291374, 0.999844491, -0.00193479878, 0
                    0.0703459233, 0.00069701008, 0.997522414, 0
                    11455, 266, 10326, 1
                }
                name: string = "Info_Swain_BirdSpawnNode269"
            }
            0x410ac9f7 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.997295499, 0.017622523, 0.0713519081, 0
                    0.0175291318, 0.999844491, -0.00193490076, 0
                    -0.0713749081, -0.000678930839, -0.997449338, 0
                    11106, 213, 7375, 1
                }
                name: string = "Info_Swain_BirdSpawnNode302"
            }
            0x1590ea4e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.741666734, -0.0117049981, 0.670666397, 0
                    0.017529143, 0.999844491, -0.0019347982, 0
                    -0.670539439, 0.0131911831, 0.741756558, 0
                    404, 413, 3643, 1
                }
                name: string = "Info_Swain_BirdSpawnNode30"
            }
            0x1619468a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.970113158, 0.0174763706, 0.242022797, 0
                    0.0175292604, 0.999844491, -0.00193489122, 0
                    -0.242018968, 0.00236541685, -0.970268607, 0
                    5623, 198, 574, 1
                }
                name: string = "Info_Swain_BirdSpawnNode167"
            }
            0x6190f8f2 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.857322574, -0.0160261355, -0.514530063, 0
                    0.0175291374, 0.999844491, -0.00193481101, 0
                    0.514481008, -0.00736051053, 0.857470155, 0
                    8223, 342, 11281, 1
                }
                name: string = "Info_Swain_BirdSpawnNode249"
            }
            0x180ce9bd = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/sru_lizard/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.561462402, -0.211565584, 0, 0
                    0.211565584, 0.561462402, 0, 0
                    0, 0, 0.600000024, 0
                    9966, 255, 12602, 1
                }
                name: string = "LevelProp_sru_lizard11"
            }
            0xcfa11c50 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.0022409854, 0.00197446486, 0.99999553, 0
                    0.0175291412, 0.999844491, -0.001934884, 0
                    -0.999843836, 0.0175247267, -0.00227524759, 0
                    714, 190, 11239, 1
                }
                name: string = "Info_Swain_BirdSpawnNode235"
            }
            0x4797f725 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.0828627124, 0.000475712703, 0.996560872, 0
                    0.0175291449, 0.999844491, -0.00193480519, 0
                    -0.996406794, 0.017629182, 0.0828414857, 0
                    6582, 491, 10828, 1
                }
                name: string = "Info_Swain_BirdSpawnNode96"
            }
            0x3d96eb14 = GdsMapObject {
                type: u8 = 1
                0xad304db5: string = "Loadouts/SummonerBanners/Frames/Frame_1"
                sceneLayer: string = "Spawn Locators"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    394, 171, 461, 1
                }
                name: string = "__Spawn_T1"
            }
            0x0b516893 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.908999562, 0.0167425349, 0.416460723, 0
                    0.0175293423, 0.999844491, -0.00193479797, 0
                    -0.416428328, 0.00554155186, -0.909151673, 0
                    7333, 181, 13145, 1
                }
                name: string = "Info_Swain_BirdSpawnNode287"
            }
            0x0cf0837a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.458847791, 0.00632515037, -0.888492346, 0
                    0.0175294522, 0.999844491, -0.00193494465, 0
                    0.888341963, -0.0164626297, -0.458887309, 0
                    14563, 378, 3963, 1
                }
                name: string = "Info_Swain_BirdSpawnNode63"
            }
            0x2a71a8dd = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.989652216, 0, 0.143487006, 0
                    0, 1, 0, 0
                    -0.143487006, 0, 0.989652216, 0
                    5215, 190, 6254, 1
                }
                name: string = "Info_Swain_BirdSpawnNode218"
            }
            0x542ee9fe = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.654415011, 0, 0, 0
                    0, 0.654415011, 0, 0
                    0, 0, 0.654415011, 0
                    6925, -7, 1163, 1
                }
                name: string = "__NAV_R04"
            }
            0x1400cfea = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.338442296, 0, 0.94098717, 0
                    0, 1, 0, 0
                    -0.94098717, 0, 0.338442296, 0
                    4614, 193, 5662, 1
                }
                name: string = "Info_Swain_BirdSpawnNode199"
            }
            0x8b6f57b8 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.327406257, 0.00391160231, -0.944875538, 0
                    0.0175292883, 0.999844491, -0.00193486328, 0
                    0.944721043, -0.017196482, -0.32742393, 0
                    14439, 493, 5056, 1
                }
                name: string = "Info_Swain_BirdSpawnNode133"
            }
            0x6d5f23bb = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.974048018, -0.0175135676, -0.225662902, 0
                    0.0175291486, 0.999844491, -0.00193479762, 0
                    0.225661695, -0.0020710926, 0.974203527, 0
                    4648, 182, 14240, 1
                }
                name: string = "Info_Swain_BirdSpawnNode103"
            }
            0x61b414b4 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.216886163, 0.00191341795, -0.976195037, 0
                    0.0175295118, 0.999844491, -0.00193484698, 0
                    0.976039529, -0.0175318625, -0.216885969, 0
                    14716, 322, 8180, 1
                }
                name: string = "Info_Swain_BirdSpawnNode128"
            }
            0xe05e6880 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.513985991, 0, 0, 0
                    0, 0.513985991, 0, 0
                    0, 0, 0.513985991, 0
                    7408, 51, 7405, 1
                }
                name: string = "__NAV_C09"
            }
            0x531577ac = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.944876909, 0.0159325823, -0.327037901, 0
                    0.0175292213, 0.999844491, -0.00193510531, 0
                    0.326956213, -0.00756115653, -0.945009232, 0
                    5918, 288, 12099, 1
                }
                name: string = "Info_Swain_BirdSpawnNode257"
            }
            0xf520d22f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.772925794, 0.0147786262, 0.634324312, 0
                    0.0175293311, 0.999844491, -0.00193506118, 0
                    -0.634254277, 0.00962362159, -0.773064613, 0
                    3967, 118, 11996, 1
                }
                name: string = "Info_Swain_BirdSpawnNode260"
            }
            0xff5aae89 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.992679596, -0.0176347382, -0.119482979, 0
                    0.0175291393, 0.999844491, -0.00193480309, 0
                    0.119498521, -0.000173794135, 0.992834389, 0
                    7402, 191, 9568, 1
                }
                name: string = "Info_Swain_BirdSpawnNode147"
            }
            0x8baa20d3 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.847576737, 0.0138331009, -0.530492544, 0
                    0.0175292864, 0.999844491, -0.0019349294, 0
                    0.530383289, -0.0109391576, -0.847687364, 0
                    9095, 348, 12015, 1
                }
                name: string = "Info_Swain_BirdSpawnNode291"
            }
            0x1c121532 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.663741529, -0.0101893814, 0.747892618, 0
                    0.0175291523, 0.999844491, -0.00193480938, 0
                    -0.7477566, 0.0143941361, 0.663816929, 0
                    5577, 87, 3862, 1
                }
                name: string = "Info_Swain_BirdSpawnNode22"
            }
            0xce09e616 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.970113158, 0.0174763706, 0.242022797, 0
                    0.0175292604, 0.999844491, -0.00193489122, 0
                    -0.242018968, 0.00236541685, -0.970268607, 0
                    5527, 346, 175, 1
                }
                name: string = "Info_Swain_BirdSpawnNode35"
            }
            0xf7edeac7 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.9727633, 0.0166070051, -0.231205076, 0
                    0.0175292362, 0.999844491, -0.00193496584, 0
                    0.231136978, -0.00593511201, -0.972903132, 0
                    12720, 264, 10037, 1
                }
                name: string = "Info_Swain_BirdSpawnNode132"
            }
            0x93fa0e50 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.746464252, 0.0143744871, 0.665270209, 0
                    0.0175292064, 0.999844491, -0.00193504, 0
                    -0.665194571, 0.0102172215, -0.746600151, 0
                    5171, 397, 12853, 1
                }
                name: string = "Info_Swain_BirdSpawnNode317"
            }
            0x53d1a414 = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 3497.23584, -216.384613, 3544.08789 }
                boxMax: vec3 = { 3818.91748, 701.858765, 3832.68091 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3651, 91, 3696, 1
                }
                name: string = "Turret_T1_C_03"
            }
            0x24f05da6 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.543670237, 0.0111556053, 0.839224815, 0
                    0.0175290778, 0.999844491, -0.00193492044, 0
                    -0.839115858, 0.0136588784, -0.543781221, 0
                    3497, 137, 7623, 1
                }
                name: string = "Info_Swain_BirdSpawnNode138"
            }
            0xd67a1092 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.520225286, 0, 0.854029059, 0
                    0, 1, 0, 0
                    -0.854029059, 0, 0.520225286, 0
                    4191, 210, 6218, 1
                }
                name: string = "Info_Swain_BirdSpawnNode5"
            }
            0xc43dbb2f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.885765433, -0.0164267141, -0.463842392, 0
                    0.0175291542, 0.999844491, -0.00193479669, 0
                    0.46380204, -0.00641698902, 0.885915637, 0
                    12187, 86, 3783, 1
                }
                name: string = "Info_Swain_BirdSpawnNode240"
            }
            0x7bc4b42a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.771593451, 0.0147582851, 0.635944724, 0
                    0.0175292157, 0.999844491, -0.00193501252, 0
                    -0.635874391, 0.00965456944, -0.771732152, 0
                    9330, 174, 6843, 1
                }
                name: string = "Info_Swain_BirdSpawnNode228"
            }
            0x9b279b0b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.882909179, -0.0145708751, 0.469317645, 0
                    0.0175291505, 0.999844491, -0.00193480751, 0
                    -0.469216466, 0.00993499905, 0.883027315, 0
                    6903, 156, 2070, 1
                }
                name: string = "Info_Swain_BirdSpawnNode40"
            }
            0x6043d69f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.862885475, -0.0141503792, 0.505201399, 0
                    0.017529143, 0.999844491, -0.00193480041, 0
                    -0.505095482, 0.0105252583, 0.86299932, 0
                    2466, 315, 4843, 1
                }
                name: string = "Info_Swain_BirdSpawnNode28"
            }
            0x1e072758 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.245707005, -0.00618344825, -0.96932441, 0
                    0.017529143, 0.999844491, -0.00193480495, 0
                    0.96918565, -0.0165160298, 0.24577719, 0
                    8123, 381, 11317, 1
                }
                name: string = "Info_Swain_BirdSpawnNode116"
            }
            0x5190b8b9 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.629229069, -0.0125353634, -0.777118802, 0
                    0.0175291356, 0.999844491, -0.00193480414, 0
                    0.777022183, -0.0124047855, 0.62935096, 0
                    9262, 189, 8306, 1
                }
                name: string = "Info_Swain_BirdSpawnNode72"
            }
            0xb53b4e3e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.883169353, 0.0163907651, 0.468767822, 0
                    0.0175291505, 0.999844491, -0.00193487701, 0
                    -0.468726605, 0.00650827773, -0.883319318, 0
                    6835, 266, 10452, 1
                }
                name: string = "Info_Swain_BirdSpawnNode95"
            }
            0x25b98304 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.202441588, -0.0016541417, 0.979292929, 0
                    0.0175291356, 0.999844491, -0.00193480554, 0
                    -0.979137421, 0.0175578427, 0.2024391, 0
                    1871, 242, 8895, 1
                }
                name: string = "Info_Swain_BirdSpawnNode90"
            }
            0x3786d64a = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.681056023, 0, 0, 0
                    0, 0.681056023, 0, 0
                    0, 0, 0.681056023, 0
                    13710, -13, 7177, 1
                }
                name: string = "__NAV_R014"
            }
            0xdbbf5283 = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 13481.1816, -379.534821, 10418.3779 }
                boxMax: vec3 = { 13768.3154, 721.048462, 10727.1641 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.707106769, 0, 0.707106769, 0
                    0, 1, 0, 0
                    -0.707106769, 0, 0.707106769, 0
                    13624, 88, 10572, 1
                }
                name: string = "Turret_T2_R_01"
            }
            0xfdadd333 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.320243359, 0.00378132658, -0.947327793, 0
                    0.0175293684, 0.999844491, -0.00193483732, 0
                    0.947173119, -0.0172256753, -0.320259839, 0
                    9059, 349, 11960, 1
                }
                name: string = "Info_Swain_BirdSpawnNode290"
            }
            0x762d5e02 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.593146086, 0.0119568361, 0.805006027, 0
                    0.0175292995, 0.999844491, -0.00193481974, 0
                    -0.804903984, 0.0129635613, -0.593263447, 0
                    11477, 384, 9292, 1
                }
                name: string = "Info_Swain_BirdSpawnNode130"
            }
            0x72e80096 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.108800106, 0.0038310925, 0.994056284, 0
                    0.0175292157, 0.999844491, -0.00193481625, 0
                    -0.993909061, 0.017214518, -0.108850338, 0
                    11461, 190, 2798, 1
                }
                name: string = "Info_Swain_BirdSpawnNode195"
            }
            0xd8657955 = GdsMapObject {
                0xad304db5: string = "Characters/SRU_OrderMinionSuper/Skins/Skin0"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2034, 128, 1171, 1
                }
                name: string = "__P_Order_Spawn_Barracks__R01"
            }
            0x5f5ebcb1 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.448965311, -0.00960020907, -0.893497646, 0
                    0.0175291356, 0.999844491, -0.00193480426, 0
                    0.893377244, -0.0147935804, 0.449063748, 0
                    14582, 672, 13495, 1
                }
                name: string = "Info_Swain_BirdSpawnNode124"
            }
            0xeafc212d = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.814461231, 0.0131566003, -0.580068767, 0
                    0.0175293852, 0.999844491, -0.00193502998, 0
                    0.579953074, -0.0117442552, -0.814565241, 0
                    7014, 414, 12162, 1
                }
                name: string = "Info_Swain_BirdSpawnNode112"
            }
            0xb8ca13d9 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.974048018, -0.0175135676, -0.225662902, 0
                    0.0175291486, 0.999844491, -0.00193479762, 0
                    0.225661695, -0.0020710926, 0.974203527, 0
                    5199, 392, 14267, 1
                }
                name: string = "Info_Swain_BirdSpawnNode306"
            }
            0x3cd8cf91 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.782954633, -0.0149300965, -0.621899605, 0
                    0.0175291412, 0.999844491, -0.00193480006, 0
                    0.621831775, -0.00938650593, 0.783094585, 0
                    12739, 306, 7768, 1
                }
                name: string = "Info_Swain_BirdSpawnNode189"
            }
            0xb5823a6e = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.513985991, 0, 0, 0
                    0, 0.513985991, 0, 0
                    0, 0, 0.513985991, 0
                    6764, 41, 6864, 1
                }
                name: string = "__NAV_C08"
            }
            0xb4240daa = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.705924273, -0.0110057304, 0.708201826, 0
                    0.0175291486, 0.999844491, -0.00193480472, 0
                    -0.708070397, 0.0137800006, 0.706007361, 0
                    1717, 185, 13413, 1
                }
                name: string = "Info_Swain_BirdSpawnNode110"
            }
            0xa5b9a6f4 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.471009791, 0, 0.882128, 0
                    0, 1, 0, 0
                    -0.882128, 0, 0.471009791, 0
                    2241, 259, 6707, 1
                }
                name: string = "Info_Swain_BirdSpawnNode206"
            }
            0xd46c5f22 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.771593451, 0.0147582851, 0.635944724, 0
                    0.0175292157, 0.999844491, -0.00193501252, 0
                    -0.635874391, 0.00965456944, -0.771732152, 0
                    9039, 71, 7081, 1
                }
                name: string = "Info_Swain_BirdSpawnNode229"
            }
            0xa6e308e7 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.351682156, -0.00435417797, 0.936109364, 0
                    0.0175291467, 0.999844491, -0.00193480297, 0
                    -0.935955346, 0.0170896333, 0.351703793, 0
                    3365, 109, 9540, 1
                }
                name: string = "Info_Swain_BirdSpawnNode88"
            }
            0xd488b063 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.601847887, 0.0120968148, 0.798519135, 0
                    0.0175292455, 0.999844491, -0.00193482474, 0
                    -0.798418343, 0.0128329685, -0.601966321, 0
                    4673, 281, 3204, 1
                }
                name: string = "Info_Swain_BirdSpawnNode252"
            }
            0x5acf9fd5 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.64773798, 0, 0, 0
                    0, 0.64773798, 0, 0
                    0, 0, 0.64773798, 0
                    1170, 16, 6715, 1
                }
                name: string = "__NAV_L04"
            }
            0x57ebda3c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.00738534704, -0.00180558418, -0.999971092, 0
                    0.01752913, 0.999844491, -0.00193481799, 0
                    0.9998191, -0.0175429117, -0.00735254819, 0
                    12632, 264, 8617, 1
                }
                name: string = "Info_Swain_BirdSpawnNode188"
            }
            0x70010307 = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/SRU_AntlerMouse/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.469904542, 0.0137036759, -0.882610857, 0
                    0.0341850743, 0.999411941, -0.00268306769, 0
                    0.882055044, -0.0314329006, -0.470096678, 0
                    1888, 95, 4102, 1
                }
                name: string = "LevelProp_SRU_AntlerMouse10"
            }
            0x38658d98 = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 14545.7363, 258.97818, 14655.083 }
                boxMax: vec3 = { 14607.4717, 578.935486, 14729.7734 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.5, 0, 0, 0
                    0, 0.5, 0, 0
                    0, 0, 0.5, 0
                    14576, 466, 14693, 1
                }
                name: string = "Turret_ChaosTurretShrine"
            }
            0x2027b7d0 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.969164193, 0, -0.246415794, 0
                    0, 1, 0, 0
                    0.246415794, 0, 0.969164193, 0
                    2338, 194, 5607, 1
                }
                name: string = "Info_Swain_BirdSpawnNode210"
            }
            0xb900f04a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.338442296, 0, 0.94098717, 0
                    0, 1, 0, 0
                    -0.94098717, 0, 0.338442296, 0
                    4370, 187, 5399, 1
                }
                name: string = "Info_Swain_BirdSpawnNode216"
            }
            0xe9a26ceb = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.351682156, -0.00435417797, 0.936109364, 0
                    0.0175291467, 0.999844491, -0.00193480297, 0
                    -0.935955346, 0.0170896333, 0.351703793, 0
                    3329, 153, 9797, 1
                }
                name: string = "Info_Swain_BirdSpawnNode142"
            }
            0x57073254 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.998244286, 0.0173917077, -0.0566200539, 0
                    0.017529346, 0.999844491, -0.00193512999, 0
                    0.0565775931, -0.00292424485, -0.998393893, 0
                    4360, 198, 8774, 1
                }
                name: string = "Info_Swain_BirdSpawnNode243"
            }
            0x02135fe3 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.709856391, -0.0110822897, 0.704259276, 0
                    0.0175291356, 0.999844491, -0.00193480263, 0
                    -0.704128325, 0.0137184886, 0.709940255, 0
                    3238, 243, 8542, 1
                }
                name: string = "Info_Swain_BirdSpawnNode245"
            }
            0x276a68c7 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.847576737, 0.0138331009, -0.530492544, 0
                    0.0175292864, 0.999844491, -0.0019349294, 0
                    0.530383289, -0.0109391576, -0.847687364, 0
                    9031, 189, 13002, 1
                }
                name: string = "Info_Swain_BirdSpawnNode324"
            }
            0x7ebc4c09 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.32928738, 0.00760016637, 0.944199145, 0
                    0.0175290164, 0.999844491, -0.00193486793, 0
                    -0.944067001, 0.0159137547, -0.329369396, 0
                    8522, 157, 4281, 1
                }
                name: string = "Info_Swain_BirdSpawnNode51"
            }
            0x3a4fc74e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.454404593, -0.00969023816, -0.890742719, 0
                    0.0175291393, 0.999844491, -0.00193480146, 0
                    0.890622914, -0.0147347702, 0.454503775, 0
                    11683, 186, 8843, 1
                }
                name: string = "Info_Swain_BirdSpawnNode185"
            }
            0xb3553ae9 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.681056023, 0, 0, 0
                    0, 0.681056023, 0, 0
                    0, 0, 0.681056023, 0
                    13741, -7, 5811, 1
                }
                name: string = "__NAV_R013"
            }
            0x03902219 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.260880679, -0.0064417799, -0.965349555, 0
                    0.0175291412, 0.999844491, -0.00193480542, 0
                    0.965211868, -0.0164169967, 0.260953039, 0
                    11556, 135, 5061, 1
                }
                name: string = "Info_Swain_BirdSpawnNode59"
            }
            0xdb5db887 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.139625356, 0.00436405186, 0.990194798, 0
                    0.0175290257, 0.999844491, -0.00193484838, 0
                    -0.990049243, 0.0170869958, -0.139680132, 0
                    10149, 263, 11641, 1
                }
                name: string = "Info_Swain_BirdSpawnNode261"
            }
            0x91957432 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.978304565, 0.0175512265, 0.206427202, 0
                    0.0175294075, 0.999844491, -0.00193481497, 0
                    -0.206429064, 0.00172570825, -0.978460073, 0
                    6061, 320, 12114, 1
                }
                name: string = "Info_Swain_BirdSpawnNode259"
            }
            0xecbee9f2 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.889542878, 0.0147118624, -0.456614763, 0
                    0.0175293814, 0.999844491, -0.00193502929, 0
                    0.456515282, -0.00972546637, -0.889662385, 0
                    7983, 318, 2930, 1
                }
                name: string = "Info_Swain_BirdSpawnNode297"
            }
            0xd6ac0ee0 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.32928738, 0.00760016637, 0.944199145, 0
                    0.0175290164, 0.999844491, -0.00193486793, 0
                    -0.944067001, 0.0159137547, -0.329369396, 0
                    9493, 343, 3891, 1
                }
                name: string = "Info_Swain_BirdSpawnNode155"
            }
            0xe974095c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.303794593, -0.0034824519, 0.952731192, 0
                    0.0175291356, 0.999844491, -0.00193480251, 0
                    -0.95257628, 0.0172883365, 0.303808391, 0
                    12271, 43, 733, 1
                }
                name: string = "Info_Swain_BirdSpawnNode283"
            }
            0x2a70f32e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.104461499, -0.00375591009, -0.994521856, 0
                    0.0175291356, 0.999844491, -0.00193480542, 0
                    0.994374454, -0.017230995, 0.104511097, 0
                    3973, 120, 9218, 1
                }
                name: string = "Info_Swain_BirdSpawnNode141"
            }
            0xcea76b8c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.746464252, 0.0143744871, 0.665270209, 0
                    0.0175292064, 0.999844491, -0.00193504, 0
                    -0.665194571, 0.0102172215, -0.746600151, 0
                    5284, 253, 12794, 1
                }
                name: string = "Info_Swain_BirdSpawnNode99"
            }
            0x897e23c7 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.969677448, -0.0165284239, 0.243828684, 0
                    0.0175291412, 0.999844491, -0.00193480181, 0
                    -0.243758783, 0.00615024101, 0.969816387, 0
                    4309, 449, 10920, 1
                }
                name: string = "Info_Swain_BirdSpawnNode144"
            }
            0x5bde06c0 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.543670237, 0.0111556053, 0.839224815, 0
                    0.0175290778, 0.999844491, -0.00193492044, 0
                    -0.839115858, 0.0136588784, -0.543781221, 0
                    2106, 274, 8130, 1
                }
                name: string = "Info_Swain_BirdSpawnNode86"
            }
            0x9a51b8d0 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.966544986, -0.0164500047, 0.255969167, 0
                    0.0175291356, 0.999844491, -0.00193481019, 0
                    -0.255897522, 0.00635699928, 0.96668303, 0
                    8170, 150, 5940, 1
                }
                name: string = "Info_Swain_BirdSpawnNode272"
            }
            0x1b632fd4 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.268053532, 0.00656377384, 0.963381648, 0
                    0.0175291114, 0.999844491, -0.00193486386, 0
                    -0.963244557, 0.0163685773, -0.268126905, 0
                    5852, 261, 4706, 1
                }
                name: string = "Info_Swain_BirdSpawnNode9"
            }
            0xd4553b18 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.0197941642, 0.00228176103, 0.999801457, 0
                    0.0175290741, 0.999844491, -0.00193481683, 0
                    -0.999650419, 0.0174872968, -0.0198310837, 0
                    280, 518, 12355, 1
                }
                name: string = "Info_Swain_BirdSpawnNode108"
            }
            0x6cd3ed9e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.811172068, -0.0153526329, -0.584605992, 0
                    0.0175291412, 0.999844491, -0.00193479983, 0
                    0.584544778, -0.00867818482, 0.81131506, 0
                    11705, 177, 8744, 1
                }
                name: string = "Info_Swain_BirdSpawnNode187"
            }
            0xc594680c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.740694463, -0.0142855449, -0.671690166, 0
                    0.0175291412, 0.999844491, -0.00193479832, 0
                    0.671613336, -0.0103410576, 0.740829647, 0
                    11080, 119, 2436, 1
                }
                name: string = "Info_Swain_BirdSpawnNode156"
            }
            0xcef1dac0 = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 1034.6051, -219.739594, 4125.99707 }
                boxMax: vec3 = { 1308.51379, 698.503784, 4451.09228 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.669130623, 0, 0.74314481, 0
                    0, 1, 0, 0
                    -0.74314481, 0, 0.669130623, 0
                    1169, 87, 4287, 1
                }
                name: string = "Turret_T1_C_06"
            }
            0x4d45e1e4 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.141032636, 0, 0.990004957, 0
                    0, 1, 0, 0
                    -0.990004957, 0, -0.141032636, 0
                    2525, 158, 5877, 1
                }
                name: string = "Info_Swain_BirdSpawnNode134"
            }
            0xc67e4901 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.970377624, 0.0165461171, -0.241025835, 0
                    0.0175291505, 0.999844491, -0.00193486095, 0
                    0.240956336, -0.00610252423, -0.970516741, 0
                    9418, 186, 8485, 1
                }
                name: string = "Info_Swain_BirdSpawnNode224"
            }
            0x5aafd09a = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/sru_gromp_prop/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.35028699, -0.0217543952, 0.191900417, 0
                    0.0284003522, 0.387331128, 0.0957498103, 0
                    -0.191029951, 0.0974748805, -0.337648034, 0
                    12425, 94, 10906, 1
                }
                name: string = "LevelProp_sru_gromp_prop12"
            }
            0xa2a5cefa = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.877343237, -0.0144533021, 0.479645669, 0
                    0.0175291393, 0.999844491, -0.00193479983, 0
                    -0.47954309, 0.0101052597, 0.877460122, 0
                    3419, 215, 14252, 1
                }
                name: string = "Info_Swain_BirdSpawnNode308"
            }
            0x2bb17ba7 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.921761096, 0.0169100575, 0.387389421, 0
                    0.01752932, 0.999844491, -0.00193495839, 0
                    -0.387361884, 0.00500710402, -0.92191416, 0
                    7477, 144, 2037, 1
                }
                name: string = "Info_Swain_BirdSpawnNode160"
            }
            0xd61bcb9b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.845689416, -0.0158587731, -0.533439636, 0
                    0.0175291356, 0.999844491, -0.00193480728, 0
                    0.533387363, -0.00771448994, 0.845835924, 0
                    12676, 217, 6739, 1
                }
                name: string = "Info_Swain_BirdSpawnNode66"
            }
            0xfd76b2b9 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.529693782, -0.0109277191, -0.848118544, 0
                    0.0175291449, 0.999844491, -0.00193480111, 0
                    0.848007798, -0.0138419401, 0.529802978, 0
                    4664, 276, 12072, 1
                }
                name: string = "Info_Swain_BirdSpawnNode318"
            }
            0x7bb35c71 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.438912362, 0.00943360757, 0.898480356, 0
                    0.0175290555, 0.999844491, -0.00193484605, 0
                    -0.898358881, 0.0149002848, -0.439009458, 0
                    7230, 205, 5794, 1
                }
                name: string = "Info_Swain_BirdSpawnNode242"
            }
            0x2dfbaf93 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.0498585328, -0.00105859875, -0.998755753, 0
                    0.0175292809, 0.999844491, -0.00193482579, 0
                    0.99860245, -0.0176039375, -0.0498322211, 0
                    6296, 191, 4191, 1
                }
                name: string = "Info_Swain_BirdSpawnNode20"
            }
            0x14399b50 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.681056023, 0, 0, 0
                    0, 0.681056023, 0, 0
                    0, 0, 0.681056023, 0
                    13253, 95, 11334, 1
                }
                name: string = "__NAV_R017"
            }
            0x97923a1c = GdsMapObject {
                type: u8 = 1
                0xad304db5: string = "Loadouts/SummonerBanners/Frames/Frame_1"
                sceneLayer: string = "Spawn Locators"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14340, 179, 14391, 1
                }
                name: string = "__Spawn_T2"
            }
            0x42a3ba82 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.578343987, 0, 0, 0
                    0, 0.578343987, 0, 0
                    0, 0, 0.578343987, 0
                    1229, 0, 9072, 1
                }
                name: string = "__NAV_L06"
            }
            0xc22cc6e1 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.862885475, -0.0141503792, 0.505201399, 0
                    0.017529143, 0.999844491, -0.00193480041, 0
                    -0.505095482, 0.0105252583, 0.86299932, 0
                    2019, 280, 4888, 1
                }
                name: string = "Info_Swain_BirdSpawnNode29"
            }
            0xac071d91 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.454320908, 0.0062413346, -0.890816212, 0
                    0.0175293796, 0.999844491, -0.00193485408, 0
                    0.890665591, -0.0164944995, -0.454359651, 0
                    9380, 187, 8405, 1
                }
                name: string = "Info_Swain_BirdSpawnNode223"
            }
            0xfffbabeb = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.153005272, -0.000770149694, 0.988225102, 0
                    0.0175291486, 0.999844491, -0.00193480437, 0
                    -0.988069892, 0.0176187791, 0.152994975, 0
                    2152, 145, 9380, 1
                }
                name: string = "Info_Swain_BirdSpawnNode85"
            }
            0x730ab05f = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/SRU_AntlerMouse/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.927523971, 0, 0.37376368, 0
                    0, 1, 0, 0
                    -0.37376368, 0, -0.927523971, 0
                    1984, 94, 4133, 1
                }
                name: string = "LevelProp_SRU_AntlerMouse9"
            }
            0x04f8e3b4 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.820670605, 0, -0.571401536, 0
                    0, 1, 0, 0
                    0.571401536, 0, 0.820670605, 0
                    3570, 175, 6782, 1
                }
                name: string = "Info_Swain_BirdSpawnNode255"
            }
            0x66e002b0 = GdsMapObject {
                0xad304db5: string = "Characters/SRU_OrderMinionSuper/Skins/Skin0"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1109, 124, 2091, 1
                }
                name: string = "__P_Order_Spawn_Barracks__L01"
            }
            0x337e23f8 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.396605015, 0.00872961245, 0.917947829, 0
                    0.0175292455, 0.999844491, -0.00193482451, 0
                    -0.917822003, 0.0153235719, -0.396696359, 0
                    675, 190, 10740, 1
                }
                name: string = "Info_Swain_BirdSpawnNode237"
            }
            0x8b62cad8 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.99687624, 0.0173283126, -0.0770551041, 0
                    0.0175294876, 0.999844491, -0.00193513895, 0
                    0.0770095885, -0.00327983056, -0.997024953, 0
                    6190, 190, 13074, 1
                }
                name: string = "Info_Swain_BirdSpawnNode100"
            }
            0x5c62a975 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.104461499, -0.00375591009, -0.994521856, 0
                    0.0175291356, 0.999844491, -0.00193480542, 0
                    0.994374454, -0.017230995, 0.104511097, 0
                    4026, 240, 8242, 1
                }
                name: string = "Info_Swain_BirdSpawnNode140"
            }
            0xd45cbcf9 = GdsMapObject {
                0xad304db5: string = "Characters/SRU_OrderMinionSuper/Skins/Skin0"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2008, 119, 2079, 1
                }
                name: string = "__P_Order_Spawn_Barracks__C01"
            }
            0xf28a4090 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.741666734, -0.0117049981, 0.670666397, 0
                    0.017529143, 0.999844491, -0.0019347982, 0
                    -0.670539439, 0.0131911831, 0.741756558, 0
                    335, 511, 1438, 1
                }
                name: string = "Info_Swain_BirdSpawnNode31"
            }
            0x92e23880 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.0312242396, -0.00248157931, -0.999509335, 0
                    0.017529143, 0.999844491, -0.00193480868, 0
                    0.999358654, -0.0174601302, 0.0312628858, 0
                    12170, 159, 5678, 1
                }
                name: string = "Info_Swain_BirdSpawnNode303"
            }
            0xcd96ced6 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.450574726, -0.00962685794, -0.892686844, 0
                    0.0175291449, 0.999844491, -0.00193480169, 0
                    0.892566621, -0.0147762634, 0.450673401, 0
                    2908, 186, 8699, 1
                }
                name: string = "Info_Swain_BirdSpawnNode89"
            }
            0xf512769e = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.681056023, 0, 0, 0
                    0, 0.681056023, 0, 0
                    0, 0, 0.681056023, 0
                    13529, -7, 3694, 1
                }
                name: string = "__NAV_R011"
            }
            0x4d007057 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.992968976, -0.0176351108, -0.117053814, 0
                    0.0175291393, 0.999844491, -0.00193481229, 0
                    0.117069729, -0.000130643864, 0.99312371, 0
                    4075, 565, 10518, 1
                }
                name: string = "Info_Swain_BirdSpawnNode78"
            }
            0x69d32f84 = GdsMapObject {
                type: u8 = 10
                0xad304db5: string = "Characters/sru_lizard/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    -0.0311554819, 0.225214839, 0.555254519, 0
                    -0.00586591521, 0.555863321, -0.225790918, 0
                    -0.599161863, -0.0171528347, -0.0266618319, 0
                    10761, 262, 14473, 1
                }
                name: string = "LevelProp_sru_lizard10"
            }
            0xe54f5267 = GdsMapObject {
                type: u8 = 5
                boxMin: vec3 = { 5691.71387, -263.29126, 6244.88184 }
                boxMax: vec3 = { 6014.67188, 654.952087, 6532.91797 }
                0xad304db5: string = "Characters/SRUAP_Turret_Order1/Skins/Skin0"
                sceneLayer: string = "Level Props"
                transform: mtx44 = {
                    0.999390841, 0, -0.0348994955, 0
                    0, 1, 0, 0
                    0.0348994955, 0, 0.999390841, 0
                    5846, 44, 6396, 1
                }
                name: string = "Turret_T1_C_05"
            }
            0x10d0ff69 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.995387912, 0.0172687639, -0.094364427, 0
                    0.0175295118, 0.999844491, -0.00193490717, 0
                    0.094316341, -0.00358014554, -0.995535851, 0
                    5170, 258, 7373, 1
                }
                name: string = "Info_Swain_BirdSpawnNode300"
            }
            0x4d02bc49 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.970113158, 0.0174763706, 0.242022797, 0
                    0.0175292604, 0.999844491, -0.00193489122, 0
                    -0.242018968, 0.00236541685, -0.970268607, 0
                    5310, 797, 51, 1
                }
                name: string = "Info_Swain_BirdSpawnNode34"
            }
            0x48a0d86b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.878243864, 0, -0.478213012, 0
                    0, 1, 0, 0
                    0.478213012, 0, -0.878243864, 0
                    5106, 180, 4441, 1
                }
                name: string = "Info_Swain_BirdSpawnNode8"
            }
            0xcf1892dc = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.551261008, 0.00805029739, -0.834294021, 0
                    0.0175294187, 0.999844491, -0.00193485722, 0
                    0.834148705, -0.0156913009, -0.551316381, 0
                    1413, 512, 338, 1
                }
                name: string = "Info_Swain_BirdSpawnNode32"
            }
            0x0413c09b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.970984817, 0, 0.239141122, 0
                    0, 1, 0, 0
                    -0.239141122, 0, 0.970984817, 0
                    3067, 118, 6253, 1
                }
                name: string = "Info_Swain_BirdSpawnNode212"
            }
            0x931f45a2 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.597355902, -0.00892094895, 0.801926672, 0
                    0.0175291412, 0.999844491, -0.00193480798, 0
                    -0.801784694, 0.0152128544, 0.597419381, 0
                    9400, 570, 4613, 1
                }
                name: string = "Info_Swain_BirdSpawnNode58"
            }
            0xbbc1f090 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.99687624, 0.0173283126, -0.0770551041, 0
                    0.0175294876, 0.999844491, -0.00193513895, 0
                    0.0770095885, -0.00327983056, -0.997024953, 0
                    6190, 190, 13074, 1
                }
                name: string = "Info_Swain_BirdSpawnNode101"
            }
            0x3e7d1b14 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.317391723, -0.00372943352, 0.948287189, 0
                    0.0175291337, 0.999844491, -0.00193480263, 0
                    -0.948132515, 0.0172367431, 0.317407727, 0
                    604, 385, 7604, 1
                }
                name: string = "Info_Swain_BirdSpawnNode204"
            }
            0xafef17c1 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.681056023, 0, 0, 0
                    0, 0.681056023, 0, 0
                    0, 0, 0.681056023, 0
                    12294, -3, 1913, 1
                }
                name: string = "__NAV_R09"
            }
            0x832d553c = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.503772974, 0, 0, 0
                    0, 0.503772974, 0, 0
                    0, 0, 0.503772974, 0
                    6668, 10, 13647, 1
                }
                name: string = "__NAV_L014"
            }
            0x913a9903 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.999843121, 0.0175340902, 0.00250916998, 0
                    0.0175292585, 0.999844491, -0.0019350393, 0
                    -0.002542709, -0.00189075177, -0.999994993, 0
                    12491, 199, 7010, 1
                }
                name: string = "Info_Swain_BirdSpawnNode191"
            }
            0x0ce07572 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.576286018, 0, 0, 0
                    0, 0.576286018, 0, 0
                    0, 0, 0.576286018, 0
                    5375, 58, 5589, 1
                }
                name: string = "__NAV_C05"
            }
            0xbefb6cf3 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.468273789, -0.00991943572, -0.883527756, 0
                    0.0175291486, 0.999844491, -0.00193480321, 0
                    0.8834095, -0.0145814708, 0.468374848, 0
                    10751, 251, 6457, 1
                }
                name: string = "Info_Swain_BirdSpawnNode196"
            }
            0x4c518c6a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.780729651, 0.0124788042, -0.624744356, 0
                    0.017529387, 0.999844491, -0.00193494849, 0
                    0.624623001, -0.0124620562, -0.780826986, 0
                    4527, 290, 314, 1
                }
                name: string = "Info_Swain_BirdSpawnNode164"
            }
            0x33fe9de8 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.513985991, 0, 0, 0
                    0, 0.513985991, 0, 0
                    0, 0, 0.513985991, 0
                    8618, 147, 8647, 1
                }
                name: string = "__NAV_C011"
            }
            0xca32aa48 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.914239645, -0.0152448248, 0.404887021, 0
                    0.0175291337, 0.999844491, -0.00193480065, 0
                    -0.404794544, 0.00886618998, 0.914364696, 0
                    9560, 208, 14273, 1
                }
                name: string = "Info_Swain_BirdSpawnNode292"
            }
            0x6fe79647 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.403981447, 0, -0.914767146, 0
                    0, 1, 0, 0
                    0.914767146, 0, -0.403981447, 0
                    1897, 188, 7337, 1
                }
                name: string = "Info_Swain_BirdSpawnNode208"
            }
            0x2cb2aa92 = GdsMapObject {
                type: u8 = 8
                0xad304db5: string = "Characters/ThreshLantern/Skins/Skin0"
                sceneLayer: string = "Nav Points"
                transform: mtx44 = {
                    0.401450992, 0, 0, 0
                    0, 0.401450992, 0, 0
                    0, 0, 0.401450992, 0
                    11808, 147, 11479, 1
                }
                name: string = "__NAV_C016"
            }
            0xc42bf71e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.984412849, 0.0175973419, 0.174990341, 0
                    0.0175292138, 0.999844491, -0.00193508796, 0
                    -0.174997181, 0.0011625177, -0.984568238, 0
                    7257, 178, 13138, 1
                }
                name: string = "Info_Swain_BirdSpawnNode286"
            }
            0x2589fdc0 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.705924273, -0.0110057304, 0.708201826, 0
                    0.0175291486, 0.999844491, -0.00193480472, 0
                    -0.708070397, 0.0137800006, 0.706007361, 0
                    1882, 182, 13545, 1
                }
                name: string = "Info_Swain_BirdSpawnNode316"
            }
            0xb9193e93 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    -0.357736737, 0.00446482142, -0.933811784, 0
                    0.0175293013, 0.999844491, -0.00193480903, 0
                    0.933657944, -0.0170612205, -0.357759356, 0
                    5820, 403, 2927, 1
                }
                name: string = "Info_Swain_BirdSpawnNode24"
            }
            0xbe6bca67 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.974048018, -0.0175135676, -0.225662902, 0
                    0.0175291486, 0.999844491, -0.00193479762, 0
                    0.225661695, -0.0020710926, 0.974203527, 0
                    5358, 429, 14276, 1
                }
                name: string = "Info_Swain_BirdSpawnNode102"
            }
            0xaa9ac5c1 = GdsMapObject {
                type: u8 = 6
                boxMin: vec3 = { 13487.9023, 167.366989, 14349.3438 }
                boxMax: vec3 = { 13977.7441, 454.612732, 14841.3027 }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Shop_Red"
                sceneLayer: string = "Spawn Locators"
                transform: mtx44 = {
                    3.17418289, 0, 0, 0
                    0, 2.51316714, 0, 0
                    0, 0, 3.18790364, 0
                    13732.8232, 132.106049, 14595.3232, 1
                }
                name: string = "chaosShop01"
            }
            0x1b3a090b = GdsMapObject {
                type: u8 = 6
                boxMin: vec3 = { -46.095047, 159.470291, 810.791016 }
                boxMax: vec3 = { 459.760742, 519.936157, 1278.14307 }
                0xad304db5: string = "EditorData/Maps/Locators/Locator_Shop_Blue"
                transform: mtx44 = {
                    3.27794957, 0, 0, 0
                    0, 3.15378404, 0, 0
                    0, 0, 3.02844477, 0
                    206.832855, 115.221191, 1044.46704, 1
                }
                name: string = "orderShop01"
            }
            0x7ad5cfe3 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    6438.4502, 201.776993, 7463.87988, 1
                }
                name: string = "Info_BrazierLocation1"
            }
            0x4467e394 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    7364.72021, 188.334, 8224.38965, 1
                }
                name: string = "Info_BrazierLocation2"
            }
            0x6bb23a77 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    643.669983, 236.791, 5744.08984, 1
                }
                name: string = "Info_BrazierLocation3"
            }
            0x56819dd3 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    3492.86011, 391.988007, 4510.87012, 1
                }
                name: string = "Info_BrazierLocation4"
            }
            0xadddb292 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    4733.72998, 375.799988, 3032.29004, 1
                }
                name: string = "Info_BrazierLocation5"
            }
            0x64656b14 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    2998.6499, 359.381989, 4764.50976, 1
                }
                name: string = "Info_BrazierLocation6"
            }
            0x8d8b5121 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    4889.56982, 378.959991, 1934.54004, 1
                }
                name: string = "Info_BrazierLocation7"
            }
            0xd78637ef = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    6519.52002, 235.070999, 1813.73999, 1
                }
                name: string = "Info_BrazierLocation8"
            }
            0xef0dd995 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    8538.50976, 251.354996, 1809.58997, 1
                }
                name: string = "Info_BrazierLocation9"
            }
            0xfb8914f2 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    4860.52002, 364.776001, 2504.53003, 1
                }
                name: string = "Info_BrazierLocation10"
            }
            0xa814d87e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    12371.7998, 317.81601, 10080.2002, 1
                }
                name: string = "Info_BrazierLocation11"
            }
            0x6429853b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    721.651978, 237.807999, 11389.7998, 1
                }
                name: string = "Info_BrazierLocation12"
            }
            0xebc3561f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    7530.81006, 206.511993, 6431.50976, 1
                }
                name: string = "Info_BrazierLocation13"
            }
            0x14a3a95f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    1377.65002, 244.195999, 13097.2998, 1
                }
                name: string = "Info_BrazierLocation14"
            }
            0x2347444c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    8451.23047, 172.675995, 7267.2998, 1
                }
                name: string = "Info_BrazierLocation15"
            }
            0x0425ee4b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    12981.5996, 228.266006, 9199.7998, 1
                }
                name: string = "Info_BrazierLocation16"
            }
            0x8bd60280 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    6585.43994, 219.496994, 5895.7998, 1
                }
                name: string = "Info_BrazierLocation17"
            }
            0x065f577e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    1835.03003, 251.740997, 6603.7002, 1
                }
                name: string = "Info_BrazierLocation18"
            }
            0x7c3f1063 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    12946.7998, 248.007004, 4885.43018, 1
                }
                name: string = "Info_BrazierLocation19"
            }
            0x9b20e993 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    14208.5, 235.268997, 9164.7002, 1
                }
                name: string = "Info_BrazierLocation20"
            }
            0x5beb6537 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    12993.5996, 231.274002, 7988.7002, 1
                }
                name: string = "Info_BrazierLocation21"
            }
            0xd81a490e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    10440, 243.608002, 1881.68994, 1
                }
                name: string = "Info_BrazierLocation22"
            }
            0xfa6eccf5 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    9783.9502, 245.302002, 1879.57996, 1
                }
                name: string = "Info_BrazierLocation23"
            }
            0xd1bb0ddf = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    7655.62988, 242.132996, 1836.63, 1
                }
                name: string = "Info_BrazierLocation24"
            }
            0x9e315757 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    1815.40002, 231.815994, 9120.32031, 1
                }
                name: string = "Info_BrazierLocation25"
            }
            0x4f86d1a5 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    6109.8501, 219.960007, 5467.62012, 1
                }
                name: string = "Info_BrazierLocation26"
            }
            0x346d49c9 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    10716.4004, 229.341995, 9727.80957, 1
                }
                name: string = "Info_BrazierLocation27"
            }
            0x790a900f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    8360.37012, 239.164993, 9165.25, 1
                }
                name: string = "Info_BrazierLocation28"
            }
            0x83fb5a01 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    11829.2998, 308.234985, 10202.5996, 1
                }
                name: string = "Info_BrazierLocation29"
            }
            0x3f18593f = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    9972.57031, 311.28299, 12400.5, 1
                }
                name: string = "Info_BrazierLocation30"
            }
            0xbee8843d = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    10089.2002, 312.34201, 11863.5996, 1
                }
                name: string = "Info_BrazierLocation31"
            }
            0x866d574c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    5972.52978, 247.171005, 14223, 1
                }
                name: string = "Info_BrazierLocation32"
            }
            0x1f7527b7 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    12968.2002, 222.574005, 1632.73999, 1
                }
                name: string = "Info_BrazierLocation33"
            }
            0x59186cdc = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    603.875976, 264.276001, 8464.5, 1
                }
                name: string = "Info_BrazierLocation34"
            }
            0x9b713f02 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    2100.26001, 247.910004, 13646.0996, 1
                }
                name: string = "Info_BrazierLocation35"
            }
            0xba7c6c73 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    14266.5996, 246.977997, 5652.27978, 1
                }
                name: string = "Info_BrazierLocation36"
            }
            0x1d26c69a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    14299.2998, 243.194, 6209.37012, 1
                }
                name: string = "Info_BrazierLocation37"
            }
            0x6ff6890b = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    6521.04004, 233.755997, 14270, 1
                }
                name: string = "Info_BrazierLocation38"
            }
            0x366be708 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    5757.58008, 235.205002, 1854.95996, 1
                }
                name: string = "Info_BrazierLocation39"
            }
            0x08cae494 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    1866.44995, 243.139008, 5669.4502, 1
                }
                name: string = "Info_BrazierLocation40"
            }
            0x33387d61 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    1875.40002, 380.087006, 4880.77978, 1
                }
                name: string = "Info_BrazierLocation41"
            }
            0x316d441c = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    636.669983, 268.22699, 4967.47021, 1
                }
                name: string = "Info_BrazierLocation42"
            }
            0xcb5eb93d = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    14723.5, 470.912994, 12513.2002, 1
                }
                name: string = "Info_BrazierLocation43"
            }
            0x732eeef5 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    14722.7002, 470.871002, 11487, 1
                }
                name: string = "Info_BrazierLocation44"
            }
            0x2c4f7df5 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    9261.0498, 232.632996, 12965.4004, 1
                }
                name: string = "Info_BrazierLocation45"
            }
            0xff987a36 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    1903.21997, 225.811005, 10477.7002, 1
                }
                name: string = "Info_BrazierLocation46"
            }
            0xff4ec867 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    9918.12988, 313.002991, 13001.4004, 1
                }
                name: string = "Info_BrazierLocation47"
            }
            0xc860545e = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    10319.0996, 324.687012, 11312.2998, 1
                }
                name: string = "Info_BrazierLocation48"
            }
            0x88605337 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    5034.8501, 229.994003, 4302.62012, 1
                }
                name: string = "Info_BrazierLocation49"
            }
            0x787c90d8 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    9853.73047, 225.369995, 10639.4004, 1
                }
                name: string = "Info_BrazierLocation50"
            }
            0x019d26e6 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    4159.37012, 242.891006, 5182.25976, 1
                }
                name: string = "Info_BrazierLocation51"
            }
            0x724c7dc5 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    631.257019, 231.809006, 6573.50976, 1
                }
                name: string = "Info_BrazierLocation52"
            }
            0x2a70269a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    11268.2998, 314.562012, 10425.2998, 1
                }
                name: string = "Info_BrazierLocation53"
            }
            0x0c80652a = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    12964.0996, 314.019012, 10035.7998, 1
                }
                name: string = "Info_BrazierLocation54"
            }
            0x5493f448 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    8253.01953, 213.145996, 633.945007, 1
                }
                name: string = "Info_BrazierLocation55"
            }
            0x7fed7d79 = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    11273.0996, 465.026001, 14752.2002, 1
                }
                name: string = "Info_BrazierLocation56"
            }
            0x70ce06ff = GdsMapObject {
                type: u8 = 9
                0xad304db5: string = "Characters/SightWard/Skins/Skin0"
                sceneLayer: string = "Info Points"
                transform: mtx44 = {
                    0.631136239, 0, 0.775672019, 0
                    0, 1, 0, 0
                    -0.775672019, 0, 0.631136239, 0
                    12298.4004, 471.720001, 14762.9004, 1
                }
                name: string = "Info_BrazierLocation57"
            }
        }
        path: string = "Maps/MapGeometry/SR/Chunks/NPE_MapObjects"
    }
    "Maps/MapGeometry/SR/Chunks/NPE_Geometry" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0x058c82a3 = null
            0xcfd5bb8b = null
            0x4b7e3f95 = null
            0x63924035 = null
            0x3822ecd4 = null
            0xb4646c36 = null
            0x0d890c6d = null
            0xd16afb87 = null
            0xf3d31eb6 = null
            0xa9d6e1a7 = null
            0x52c377ef = null
            0x48569bce = null
            0xf06d6d57 = null
            0xc5724b11 = null
            0x6507dc52 = null
            0xf6d46979 = null
            0xf5de112c = null
            0xb2b452a8 = null
            0xf9301be8 = null
            0x2ab8026b = null
            0xb2dbbeff = null
        }
        path: string = "Maps/MapGeometry/SR/Chunks/NPE_Geometry"
    }
    "Maps/MapGeometry/SR/Chunks/SRX_Geometry" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0x48b24cd0 = null
            0xd0491381 = null
            0x93381bb3 = null
            0x3dc5af1a = null
            0x1f61378b = null
            0xba60fb6d = null
            0xb249d13a = null
            0x8b832610 = null
            0x57978af7 = null
            0x69838ad8 = null
            0x5c302900 = null
            0x602dbbae = null
            0xe9e0778e = null
            0xbd6f7a29 = null
            0x096fe65a = null
            0x79eb761c = null
            0x54c1cd8a = null
            0x556f36eb = null
            0x1de40dd9 = null
            0x363a1545 = null
            0x8e764108 = null
            0x44214f11 = null
            0xd2a05f66 = null
            0x2e887c57 = null
            0xa340cc47 = null
            0xfd61d9eb = null
            0x3548554b = null
            0xb36cfc8f = null
            0x0202b852 = null
            0xc900438a = null
            0x1cdb9abb = null
            0x4a5f709a = null
            0x02ad4144 = null
            0x1196c846 = null
            0x0c52265e = null
            0x953e9af5 = null
            0x7d1ccac5 = null
            0xeb63187d = null
            0x3d0d811f = null
            0x6847fe59 = null
            0xd77db2a2 = null
            0x29d195d8 = null
            0x3928512e = null
            0x9d8ab56d = null
            0x556ec061 = null
            0x2df284fd = null
            0x933b9074 = null
            0x4208fc85 = null
            0xce1a3b76 = null
            0x40f8c2ac = null
            0x72744e4c = null
            0xcf785a6b = null
            0xde8e1221 = null
            0x4c64e53b = null
            0x15e0caea = null
            0xeb17df6b = null
            0x66a67aa0 = null
            0xa5a6ab65 = null
            0xbbe812ba = null
            0xee517fd6 = null
            0x3041f8e2 = null
            0x414b7ab3 = null
            0xd51b76cf = null
            0x04aa4735 = null
            0x4de0202a = null
            0x116d17aa = null
            0x0f3ccf08 = null
            0x39169bb2 = null
            0x8b036e02 = null
            0x42c69954 = null
            0xac9ac478 = null
            0x794ab341 = null
            0xdf6f30e1 = null
            0x9d366bbb = null
            0xbc0e8a38 = null
            0x7d69057d = null
            0xbf6fe4ba = null
            0xd868ec3b = null
            0x6c2da3e1 = null
            0xfa5082e3 = null
            0xa1303901 = null
            0xe9048c74 = null
            0x23d796d3 = null
            0x881d2c28 = null
            0xd03c9630 = null
            0xd08dbb74 = null
            0xb97e06cf = null
            0xb7137fb7 = null
            0x08bf3232 = null
            0x1dea08d8 = null
            0x56d534f2 = null
            0xeada87e2 = null
            0x80fcf1da = null
            0x1b733af4 = null
            0x0f8e66f1 = null
            0x5e9c2201 = null
            0x2ff6ee52 = null
            0x74db1169 = null
            0x9342f127 = null
            0x1bcb9921 = null
            0xc2b02d1f = null
            0xfd4f3cf0 = null
            0x99bb2e4e = null
            0x8601a770 = null
            0xf144d140 = null
            0x3c2e34f6 = null
            0x6511c097 = null
            0xc8f5e9b6 = null
            0x7a31f24f = null
            0xa9021f07 = null
            0x9aa6787a = null
            0x43a763f2 = null
            0x04719668 = null
            0x66f2006f = null
            0x7a1ade03 = null
            0xf06e936d = null
            0xb778888e = null
            0xe4f005ef = null
            0x454fd857 = null
            0x57288666 = null
            0x1ea5f888 = null
            0xda00faef = null
            0xf773c216 = null
            0x7ea8de5c = null
            0x3875667f = null
            0x58d3fe7d = null
            0x49117e3c = null
            0x55089f80 = null
            0xcc88fbf8 = null
            0x60e4d595 = null
            0x094579ca = null
            0x1f47d6b4 = null
            0x00a15c4e = null
            0x11a61755 = null
            0x5f12ba94 = null
            0xabdedb3f = null
            0x817b93e0 = null
            0xb4fd9949 = null
            0xbf6ea084 = null
            0xcbe22937 = null
            0xd46a2e01 = null
            0xa0ee8440 = null
            0x6ee88819 = null
            0xc2ee8bda = null
            0xef21f638 = null
            0xb3636718 = null
            0xa064f444 = null
            0x73132e59 = null
            0xdbb3d9d3 = null
            0xb7a6403f = null
            0xbd78a50f = null
            0xe665d87e = null
            0xe7b43390 = null
            0x417fd458 = null
            0x9d1f2eee = null
            0xed2d187a = null
            0x0108f3a6 = null
            0x39f1dd17 = null
            0x24377d06 = null
            0x62195589 = null
            0xcd445943 = null
            0x383c5420 = null
            0x4743a651 = null
            0xc16ff89d = null
            0x8e006861 = null
            0x6f6c289c = null
            0xebab1b80 = null
            0xa2278a2a = null
            0xaea0aeb4 = null
            0x515e1034 = null
            0x9a826b35 = null
            0x77cff3e1 = null
            0x8a300f8e = null
        }
        path: string = "Maps/MapGeometry/SR/Chunks/SRX_Geometry"
    }
    "Maps/MapGeometry/SR/Chunks/NPE_Particles" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0x12890a53 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    4490.18018, 385.019012, 3555.12988, 1
                }
                name: string = "Sru_braziers_fire_temp301"
                0xccf79327: u8 = 1
            }
            0xb1dcafa6 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Order_Inhibitor_runeTimer_bot"
                groupName: string = "RUNETIMER_ORDER_BOT"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3452.77002, 92.1287003, 1236.23999, 1
                }
                name: string = "SRUAP_Order_Inhibitor_runeTimer_bot2"
            }
            0x830ddb8a = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_flowerGlow_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    12434.0996, 150.315002, 14239.7998, 1
                }
                name: string = "SRU_Chaos_flowerGlow_01_5"
            }
            0x918c7421 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6438.4502, 201.776993, 7463.87988, 1
                }
                name: string = "Sru_braziers_fire_temp307"
                0xccf79327: u8 = 1
            }
            0x09519478 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3492.91894, 391.987946, 4503.78027, 1
                }
                name: string = "Sru_braziers_fire_temp308"
                0xccf79327: u8 = 1
            }
            0x6ea7f159 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    7364.72021, 188.334, 8224.38965, 1
                }
                name: string = "Sru_braziers_fire_temp314"
                0xccf79327: u8 = 1
            }
            0x48d8dc98 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Order_BaseDoor_Shield_Bottom"
                visibilityMode: u32 = 2
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    4889.2002, 95.7480011, 2724.02002, 1
                }
                name: string = "SRUAP_Order_BaseDoor_Shield_Bottom2"
            }
            0x83f382cd = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_platform_godrays"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14301.2998, 171.516006, 14383.0996, 1
                }
                name: string = "SRU_Chaos_platform_godrays2"
            }
            0x07585456 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_LaserTurret_Idle"
                groupName: string = "SOG_LASER"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14574.5, 478.17099, 14699.5996, 1
                }
                name: string = "SRUAP_Chaos_LaserTurret_Idle2"
            }
            0x2077c5bd = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Cloud"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    12299.1406, 503.40332, 14767.8096, 1
                }
                name: string = "Sru_braziers_fire_temp328"
                0xccf79327: u8 = 16
            }
            0xd67b9d5c = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    12964.0996, 314.019012, 10035.7998, 1
                }
                name: string = "Sru_braziers_fire_temp329"
                0xccf79327: u8 = 1
            }
            0x8b30d867 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_weaponSparkle_gold"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13725.5, 357.47699, 14799, 1
                }
                name: string = "SRU_Chaos_Shopkeeper_weaponSparkle_gold2"
            }
            0x0a85b98c = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_BaseDoor_Shild_Top"
                visibilityMode: u32 = 1
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    10049.4004, 52.3061981, 12230.0996, 1
                }
                name: string = "SRUAP_Chaos_BaseDoor_Shild_Top2"
            }
            0xb902f56a = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Order_fogBase_01"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    507.326996, -445.114014, 165, 1
                }
                name: string = "SRU_Order_fogBase_01_2"
            }
            0x452e675e = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    7530.81006, 206.511993, 6431.50976, 1
                }
                name: string = "Sru_braziers_fire_temp331"
                0xccf79327: u8 = 1
            }
            0x8feefa0f = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_WeaponSparkle"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13554.7002, 311.763, 14751.4004, 1
                }
                name: string = "SRU_Chaos_Shopkeeper_WeaponSparkle2"
            }
            0x5683f11d = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_butterflies_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    12972.7998, 489.941986, 14588.5996, 1
                }
                name: string = "SRU_Chaos_butterflies_01_6"
            }
            0xdf3cc383 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_NJungle_leaves"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    9522.95996, 354.300995, 10509, 1
                }
                name: string = "SRU_NJungle_leaves10"
            }
            0x096a25a2 = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Mountain"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14717.4043, 454.385071, 11486.001, 1
                }
                name: string = "Sru_braziers_fire_temp337"
                0xccf79327: u8 = 4
            }
            0xc671013e = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14723.5, 470.912994, 12513.2002, 1
                }
                name: string = "Sru_braziers_fire_temp338"
                0xccf79327: u8 = 1
            }
            0x1ebca5d3 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Order_platform_godrays"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    332.02301, 182.098999, 464.902008, 1
                }
                name: string = "SRU_Order_platform_godrays2"
            }
            0x2a22af96 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_idle"
                groupName: string = "SOG_CHAOS_BOT"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13598.7002, 91.4298019, 11329.4004, 1
                }
                name: string = "SRUAP_Chaos_Inhibitor_idle4"
            }
            0x971e38a2 = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Infernal"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14726.3008, 494.401245, 11481.6035, 1
                }
                name: string = "Sru_braziers_fire_temp344"
                0xccf79327: u8 = 2
            }
            0x3b778c1d = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11273.0996, 465.026001, 14752.2002, 1
                }
                name: string = "Sru_braziers_fire_temp346"
                0xccf79327: u8 = 1
            }
            0x835945f8 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_staff_glow"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13705, 309.84201, 14787, 1
                }
                name: string = "SRU_Chaos_Shopkeeper_staff_glow2"
            }
            0xad047f5c = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_Platform_watertroff_01"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14290.7998, 2.01767993, 14402.5996, 1
                }
                name: string = "SRU_Chaos_Platform_watertroff_01_2"
            }
            0x56f11523 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14722.7002, 470.871002, 11487, 1
                }
                name: string = "Sru_braziers_fire_temp350"
                0xccf79327: u8 = 1
            }
            0x643fbee1 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_SJungle_motes"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6644.87988, 48.5265999, 4364.37012, 1
                }
                name: string = "SRU_SJungle_motes9"
            }
            0x8d9dd733 = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Cloud"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11276.3184, 503.255981, 14765.9678, 1
                }
                name: string = "Sru_braziers_fire_temp353"
                0xccf79327: u8 = 16
            }
            0x3a3a9ccd = MapParticle {
                system: link = "Maps/Particles/SR/SRU_SJungle_mushroomGlow"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    5596.49023, 142.477005, 3972.30005, 1
                }
                name: string = "SRU_SJungle_mushroomGlow24"
            }
            0x6450a5a7 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Order_WispFly"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2190.13989, 211.664993, 2276.22998, 1
                }
                name: string = "SRU_Order_WispFly2"
            }
            0x23f3b945 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_flowerGlow_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13134.4004, 124.640999, 14237.9004, 1
                }
                name: string = "SRU_Chaos_flowerGlow_01_6"
            }
            0xe444bba6 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    4159.37012, 242.891006, 5182.25976, 1
                }
                name: string = "Sru_braziers_fire_temp359"
                0xccf79327: u8 = 1
            }
            0xac20b71a = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Peref_OrderSide_SouthFog_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2000.03003, -795.606018, 43.4379997, 1
                }
                name: string = "SRU_Peref_OrderSide_SouthFog_01_4"
            }
            0x8be84358 = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Mountain"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11276.7607, 456.554565, 14764.6631, 1
                }
                name: string = "Sru_braziers_fire_temp360"
                0xccf79327: u8 = 4
            }
            0x3282b9c3 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_Rubble_dust"
                groupName: string = "RUNETIMER_CHAOS_TOP"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11260.9004, 93.8438034, 13674.2002, 1
                }
                name: string = "SRUAP_Chaos_Inhibitor_Rubble_dust4"
            }
            0x0b7eed3b = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    9918.12988, 313.002991, 13001.4004, 1
                }
                name: string = "Sru_braziers_fire_temp371"
                0xccf79327: u8 = 1
            }
            0xe5668c9a = MapParticle {
                system: link = "Maps/Particles/SR/SRU_NJungle_wisps"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    9277.08984, 308.710999, 10368.2002, 1
                }
                name: string = "SRU_NJungle_wisps14"
            }
            0xcedcfcd0 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_Smokestack_embers"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13779.5996, 176.679993, 14930.9004, 1
                }
                name: string = "SRU_Chaos_Shopkeeper_Smokestack_embers3"
            }
            0xe999a130 = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Cloud"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14720.2959, 501.323242, 11484.2275, 1
                }
                name: string = "Sru_braziers_fire_temp387"
                0xccf79327: u8 = 16
            }
            0x7e3dc516 = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Infernal"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11276.7695, 494.401184, 14763.8604, 1
                }
                name: string = "Sru_braziers_fire_temp397"
                0xccf79327: u8 = 2
            }
            0xba240b39 = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Infernal"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    12302.1133, 494.401184, 14763.8604, 1
                }
                name: string = "Sru_braziers_fire_temp399"
                0xccf79327: u8 = 2
            }
            0x634bb52a = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Cloud"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14726.1826, 503.045044, 12512.3838, 1
                }
                name: string = "Sru_braziers_fire_temp402"
                0xccf79327: u8 = 16
            }
            0x7916bc2e = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_flowerGlow_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14373.7002, 209.259003, 13361, 1
                }
                name: string = "SRU_Chaos_flowerGlow_01_7"
            }
            0xa0ff8873 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_idle"
                groupName: string = "SOG_CHAOS_MID"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11600, 89.6718979, 11671.4004, 1
                }
                name: string = "SRUAP_Chaos_Inhibitor_idle5"
            }
            0x4dd99a1e = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_runeTimer_mid"
                groupName: string = "RUNETIMER_CHAOS_MID"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11600.7998, 93.9775009, 11667, 1
                }
                name: string = "SRUAP_Chaos_Inhibitor_runeTimer_mid2"
            }
            0x6865cf07 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_butterflies_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14755.5, 501.183014, 11961.5, 1
                }
                name: string = "SRU_Chaos_butterflies_01_7"
            }
            0xc2d2b654 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_idle"
                groupName: string = "SOG_CHAOS_TOP"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11256.2002, 102.914001, 13675.7998, 1
                }
                name: string = "SRUAP_Chaos_Inhibitor_idle6"
            }
            0x2062bd9f = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_smoke"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13980.2998, 250.610001, 14648.4004, 1
                }
                name: string = "SRU_Chaos_Shopkeeper_smoke3"
            }
            0xec6a35da = MapParticle {
                system: link = "Maps/Particles/SR/SRU_chaos_platform_waterfall_04"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14687.9004, 113.614998, 14639.7002, 1
                }
                name: string = "SRU_chaos_platform_waterfall_04_2"
            }
            0x34a324ee = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_Nexus_idle"
                groupName: string = "SOG_NEXUS"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13233.5996, 169.022995, 13243.2002, 1
                }
                name: string = "SRUAP_Chaos_Nexus_idle2"
            }
            0xf91ddd7b = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_runeTimer_bot"
                groupName: string = "RUNETIMER_CHAOS_BOT"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13605.2002, 97.9059982, 11319.4004, 1
                }
                name: string = "SRUAP_Chaos_Inhibitor_runeTimer_bot2"
            }
            0x4565e11a = MapParticle {
                system: link = "Maps/Particles/SR/SRU_SJungle_motes"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    5607.77978, 269.110992, 4348.58008, 1
                }
                name: string = "SRU_SJungle_motes10"
            }
            0x40955fe0 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    4889.56982, 378.959991, 1934.54004, 1
                }
                name: string = "Sru_braziers_fire_temp422"
                0xccf79327: u8 = 1
            }
            0x49e33806 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Peref_OrderSide_SouthFog_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    4137.00976, -910.538025, 168.862, 1
                }
                name: string = "SRU_Peref_OrderSide_SouthFog_01_5"
            }
            0x10718c14 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_SJungle_ButterFlies_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    5560.37988, 145.391006, 3976.63989, 1
                }
                name: string = "SRU_SJungle_ButterFlies_01_20"
            }
            0xecf22db3 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1875.40002, 380, 4880.77978, 1
                }
                name: string = "Sru_braziers_fire_temp423"
                0xccf79327: u8 = 1
            }
            0x7658a50e = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_butterflies_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    10235.2998, 450.160004, 14450.2002, 1
                }
                name: string = "SRU_Chaos_butterflies_01_8"
            }
            0x8259aa5d = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_platform_waterfall_hair_01"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14605.7002, 489.787994, 14872.2998, 1
                }
                name: string = "SRU_Chaos_platform_waterfall_hair_01_2"
            }
            0x298a6a93 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Order_Inhibitor_runeTimer_top"
                groupName: string = "RUNETIMER_ORDER_TOP"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1171.31995, 94.0970993, 3571.72998, 1
                }
                name: string = "SRUAP_Order_Inhibitor_runeTimer_top2"
            }
            0xd8e71764 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_flowerGlow_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14326.5996, 209.179001, 12703.2002, 1
                }
                name: string = "SRU_Chaos_flowerGlow_01_8"
            }
            0x632bd290 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    10715.2705, 229.341751, 9717.57324, 1
                }
                name: string = "Sru_braziers_fire_temp435"
                0xccf79327: u8 = 1
            }
            0xead2b56f = MapParticle {
                system: link = "Maps/Particles/SR/SRU_RaptorNest_Magic_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    7092.06006, 80.722702, 5653.47021, 1
                }
                name: string = "SRU_RaptorNest_Magic_01_5"
            }
            0xcdc9fac0 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Order_Inhibitor_Rubble_dust"
                groupName: string = "RUNETIMER_ORDER_TOP"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1171.31995, 94.0970993, 3571.72998, 1
                }
                name: string = "SRUAP_Order_Inhibitor_Rubble_dust4"
            }
            0xbc6f58d5 = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Ocean"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    12299.5088, 486.178009, 14763.8604, 1
                }
                name: string = "Sru_braziers_fire_temp438"
                0xccf79327: u8 = 8
            }
            0xff5ea160 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    636.669983, 250, 4967.47021, 1
                }
                name: string = "Sru_braziers_fire_temp442"
                0xccf79327: u8 = 1
            }
            0x48ea391d = MapParticle {
                system: link = "Maps/Particles/SR/SRU_RaptorNest_Magic_Glow_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6861.7998, 57.0741997, 5557.97021, 1
                }
                name: string = "SRU_RaptorNest_Magic_Glow_01_2"
            }
            0x84e23532 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Order_Inhibitor_Idle"
                groupName: string = "SOG_ORDER_TOP"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1173.56995, 141.309006, 3562.45996, 1
                }
                name: string = "SRUAP_Order_Inhibitor_Idle5"
            }
            0x5186e05f = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_BaseDoor_Top"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    10006.7002, 99.6549988, 12136.7002, 1
                }
                name: string = "SRUAP_Chaos_BaseDoor_Top2"
            }
            0x3b058e42 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    12298.4004, 471.720001, 14762.9004, 1
                }
                name: string = "Sru_braziers_fire_temp453"
                0xccf79327: u8 = 1
            }
            0x59176b45 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11829.2998, 308.234985, 10202.5996, 1
                }
                name: string = "Sru_braziers_fire_temp457"
                0xccf79327: u8 = 1
            }
            0xa88be4fb = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11268.2998, 314.562012, 10425.2998, 1
                }
                name: string = "Sru_braziers_fire_temp461"
                0xccf79327: u8 = 1
            }
            0xfef75651 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Order_Inhibitor_runeTimer_mid"
                groupName: string = "RUNETIMER_ORDER_MID"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3202.34009, 94.343399, 3207.92993, 1
                }
                name: string = "SRUAP_Order_Inhibitor_runeTimer_mid2"
            }
            0x4686bf69 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Order_Platform_waterfall_01"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    573.429993, -112.806, 50.3008995, 1
                }
                name: string = "SRU_Order_Platform_waterfall_01_2"
            }
            0xbf91effc = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Mountain"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14725.7998, 458.182556, 12510.0156, 1
                }
                name: string = "Sru_braziers_fire_temp465"
                0xccf79327: u8 = 4
            }
            0x19ba451a = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Peref_OrderSide_SouthFog_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3078.84009, -981.70697, 229.608002, 1
                }
                name: string = "SRU_Peref_OrderSide_SouthFog_01_6"
            }
            0x8a50cb70 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Order_Platform_waterfall_02"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    225.759995, -121.981003, 227.348999, 1
                }
                name: string = "SRU_Order_Platform_waterfall_02_2"
            }
            0xe7c5a056 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_Rubble_dust"
                groupName: string = "RUNETIMER_CHAOS_MID"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11600.7998, 93.9775009, 11667, 1
                }
                name: string = "SRUAP_Chaos_Inhibitor_Rubble_dust5"
            }
            0x1a13a6ee = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8451.23047, 172.675995, 7267.2998, 1
                }
                name: string = "Sru_braziers_fire_temp470"
                0xccf79327: u8 = 1
            }
            0x91ab9983 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_runeTimer_top"
                groupName: string = "RUNETIMER_CHAOS_TOP"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11260.9004, 93.8438034, 13674.2002, 1
                }
                name: string = "SRUAP_Chaos_Inhibitor_runeTimer_top2"
            }
            0xdf40ed68 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_Inhibitor_Rubble_dust"
                groupName: string = "RUNETIMER_CHAOS_BOT"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13605.2002, 97.9059982, 11319.4004, 1
                }
                name: string = "SRUAP_Chaos_Inhibitor_Rubble_dust6"
            }
            0x1f4dad70 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6112.59961, 219.960068, 5452.74316, 1
                }
                name: string = "Sru_braziers_fire_temp483"
                0xccf79327: u8 = 1
            }
            0x344134d1 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_platform_waterfall_03"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14765.7002, 261.078003, 14577.0996, 1
                }
                name: string = "SRU_Chaos_platform_waterfall_03_2"
            }
            0xe74a5f46 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Order_BaseDoor_Top"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2710.70996, 119.344002, 4749.1499, 1
                }
                name: string = "SRUAP_Order_BaseDoor_Top2"
            }
            0xa5f062f4 = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Ocean"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14717.4639, 486.178131, 11487.2891, 1
                }
                name: string = "Sru_braziers_fire_temp494"
                0xccf79327: u8 = 8
            }
            0x807e592f = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_BaseDoor_Bottom"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    12102.5996, 91.4298019, 10112.5, 1
                }
                name: string = "SRUAP_Chaos_BaseDoor_Bottom2"
            }
            0xc3ac76ea = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    10089.2002, 312.34201, 11863.5996, 1
                }
                name: string = "Sru_braziers_fire_temp500"
                0xccf79327: u8 = 1
            }
            0xd6b02613 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_RaptorNest_Magic_02"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6639.41992, 146.046005, 5537.97021, 1
                }
                name: string = "SRU_RaptorNest_Magic_02_2"
            }
            0xfab7cb36 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_butterflies_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14847.9004, 549.499023, 13505, 1
                }
                name: string = "SRU_Chaos_butterflies_01_9"
            }
            0x2278e3a6 = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Infernal"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14726.3008, 494.401245, 12513.6074, 1
                }
                name: string = "Sru_braziers_fire_temp506"
                0xccf79327: u8 = 2
            }
            0xee46fd92 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_Platform_waterfall_02"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14428.4004, 261.484985, 14869, 1
                }
                name: string = "SRU_Chaos_Platform_waterfall_02_2"
            }
            0x6ad875bc = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    4733.72998, 375.799988, 3032.29004, 1
                }
                name: string = "Sru_braziers_fire_temp511"
                0xccf79327: u8 = 1
            }
            0x4b032366 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Order_Inhibitor_Idle"
                groupName: string = "SOG_ORDER_MID"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3198.6499, 95.7480011, 3218.48999, 1
                }
                name: string = "SRUAP_Order_Inhibitor_Idle6"
            }
            0x3be25798 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_Smokestack_embers"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13983.0996, 262.713013, 14647.4004, 1
                }
                name: string = "SRU_Chaos_Shopkeeper_Smokestack_embers4"
            }
            0x3a6f20de = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Order_Inhibitor_Rubble_dust"
                groupName: string = "RUNETIMER_ORDER_MID"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3202.34009, 94.343399, 3207.92993, 1
                }
                name: string = "SRUAP_Order_Inhibitor_Rubble_dust5"
            }
            0x1a054333 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Order_Inhibitor_Rubble_dust"
                groupName: string = "RUNETIMER_ORDER_BOT"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    3452.77002, 92.1287003, 1236.23999, 1
                }
                name: string = "SRUAP_Order_Inhibitor_Rubble_dust6"
            }
            0x5d297399 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_LaserTurret_ChestGlow"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14603.5, 219.625, 14733.9004, 1
                }
                name: string = "SRU_Chaos_LaserTurret_ChestGlow2"
            }
            0x3b63f012 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Order_BaseDoor_Shield_Top"
                visibilityMode: u32 = 2
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2701.53003, 95.7479019, 4752.27002, 1
                }
                name: string = "SRUAP_Order_BaseDoor_Shield_Top2"
            }
            0x09a51adc = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8360.37012, 239.164993, 9165.25, 1
                }
                name: string = "Sru_braziers_fire_temp519"
                0xccf79327: u8 = 1
            }
            0x3393ec28 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Order_BaseDoor_Bottom"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    4847.43994, 129.557999, 2741.57007, 1
                }
                name: string = "SRUAP_Order_BaseDoor_Bottom2"
            }
            0x0989b1d0 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    12371.7998, 317.81601, 10080.2002, 1
                }
                name: string = "Sru_braziers_fire_temp521"
                0xccf79327: u8 = 1
            }
            0xb39d417f = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Mountain"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    12299.3193, 460.893677, 14764.2998, 1
                }
                name: string = "Sru_braziers_fire_temp540"
                0xccf79327: u8 = 4
            }
            0x5ac45e7f = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    5034.8501, 229.994003, 4302.62012, 1
                }
                name: string = "Sru_braziers_fire_temp541"
                0xccf79327: u8 = 1
            }
            0x9b0bb905 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_bladeglow_front"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13547.2002, 282.692993, 14764.2998, 1
                }
                name: string = "SRU_Chaos_Shopkeeper_bladeglow_front2"
            }
            0x06a5bb5d = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6583.35644, 237.067307, 5875.58496, 1
                }
                name: string = "Sru_braziers_fire_temp545"
                0xccf79327: u8 = 1
            }
            0x99a1bb66 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2998.6499, 359.381989, 4764.50976, 1
                }
                name: string = "Sru_braziers_fire_temp546"
                0xccf79327: u8 = 1
            }
            0x45fa9782 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_weaponSparkle_goldCoins"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13778.0996, 286.196991, 14409.5996, 1
                }
                name: string = "SRU_Chaos_Shopkeeper_weaponSparkle_goldCoins2"
            }
            0x18eb20a4 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    4860.52002, 364.776001, 2504.53003, 1
                }
                name: string = "Sru_braziers_fire_temp560"
                0xccf79327: u8 = 1
            }
            0xac6ceaa4 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_Platform_Waterfall_01"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14518.2998, 120.376999, 14810.2998, 1
                }
                name: string = "SRU_Chaos_Platform_Waterfall_01_2"
            }
            0x0318b141 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_LaserTurret_Banner"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14740.2998, 133.468002, 14890.7002, 1
                }
                name: string = "SRU_Chaos_LaserTurret_Banner2"
            }
            0xc8440e56 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Chaos_BaseDoor_Shield_Bottom"
                visibilityMode: u32 = 1
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    12110.0996, 91.4298019, 10223.5, 1
                }
                name: string = "SRUAP_Chaos_BaseDoor_Shield_Bottom2"
            }
            0x140fbd1c = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Ocean"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14720.1631, 486.178009, 12509.1865, 1
                }
                name: string = "Sru_braziers_fire_temp580"
                0xccf79327: u8 = 8
            }
            0xd99fd9b3 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Fog_GroundCover_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    5256.56006, 331.304993, 6457.37988, 1
                }
                name: string = "SRU_Fog_GroundCover_01_4"
            }
            0xe6af4952 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    9972.57031, 311.28299, 12400.5, 1
                }
                name: string = "Sru_braziers_fire_temp585"
                0xccf79327: u8 = 1
            }
            0xa2752917 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    9853.73047, 225.369995, 10639.4004, 1
                }
                name: string = "Sru_braziers_fire_temp586"
                0xccf79327: u8 = 1
            }
            0x9a643339 = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Order_Nexus_Idle"
                groupName: string = "SOG_NEXUS"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1552.18994, 96.8343964, 1657.64001, 1
                }
                name: string = "SRUAP_Order_Nexus_Idle2"
            }
            0xf53c5f82 = MapParticle {
                system: link = "Maps/Particles/SR/Sru_braziers_fire_temp"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    10319.0996, 324.687012, 11312.2998, 1
                }
                name: string = "Sru_braziers_fire_temp588"
                0xccf79327: u8 = 1
            }
            0x6853c2be = MapParticle {
                system: link = "Maps/Particles/SR/SRUAP_Order_laserTurret_idle"
                groupName: string = "SOG_LASER"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    -72.0895004, 840.197998, 49.1618004, 1
                }
                name: string = "SRUAP_Order_laserTurret_idle2"
            }
            0xafb7f094 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_SJungle_mushroomGlow"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    5889.16016, 128.479004, 4630.70996, 1
                }
                name: string = "SRU_SJungle_mushroomGlow37"
            }
            0x84a3eab3 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_NJungle_leaves"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    9050.46973, 99.5472031, 10106.7998, 1
                }
                name: string = "SRU_NJungle_leaves18"
            }
            0x3869173e = MapParticle {
                system: link = "Maps/Particles/SR/SRX_Braziers_Ocean"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11276.7695, 486.178009, 14763.8604, 1
                }
                name: string = "Sru_braziers_fire_temp597"
                0xccf79327: u8 = 8
            }
            0x69f5c5b4 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_Chaos_Shopkeeper_smoke"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13788.0996, 179.287003, 14915.7002, 1
                }
                name: string = "SRU_Chaos_Shopkeeper_smoke4"
            }
            0xb19a1d87 = MapParticle {
                system: link = "Maps/Particles/NPE_1/Waterfall_Bot_B"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8553.27734, -90.5296249, 7029.17139, 1
                }
                name: string = "tutorial_waterfalls_bot_owl_01_1"
            }
            0xa9ca5b60 = MapParticle {
                system: link = "Maps/Particles/NPE_1/Waterfall_Bot_B"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    7087.63184, -90.5293198, 8432.8623, 1
                }
                name: string = "tutorial_waterfalls_bot_owl_01_2"
            }
            0xe72ce25f = MapParticle {
                system: link = "Maps/Particles/NPE_1/Waterfall_Top_C"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6379.50488, -83.2561035, 7732.73144, 1
                }
                name: string = "tutorial_waterfalls_top_01_1"
            }
            0x8ea65ffd = MapParticle {
                system: link = "Maps/Particles/NPE_1/Waterfall_Top_C"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    7761.9043, -35.6933823, 6208.81104, 1
                }
                name: string = "tutorial_waterfalls_top_01_2"
            }
            0xf568c515 = MapParticle {
                system: link = "Maps/Particles/NPE_1/Water_Ripple_A"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8025.979, 50.622879, 6487.2915, 1
                }
                name: string = "tutorial_water_ripple_01_1"
            }
            0x720ce8e7 = MapParticle {
                system: link = "Maps/Particles/NPE_1/Water_Ripple_A"
                transform: mtx44 = {
                    -0.255830288, 0, 0.966721773, 0
                    0, 1, 0, 0
                    -0.966721773, 0, -0.255830288, 0
                    8328.61719, 55.5370026, 6766.98828, 1
                }
                name: string = "tutorial_water_ripple_01_2"
            }
            0x893d8b78 = MapParticle {
                system: link = "Maps/Particles/NPE_1/Water_Ripple_A"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6577.88525, 48.5628052, 7942.98926, 1
                }
                name: string = "tutorial_water_ripple_01_3"
            }
            0x87c0ee3e = MapParticle {
                system: link = "Maps/Particles/NPE_1/Water_Ripple_A"
                transform: mtx44 = {
                    -0.255830288, 0, 0.966721773, 0
                    0, 1, 0, 0
                    -0.966721773, 0, -0.255830288, 0
                    6889.43848, 48.7831421, 8189.80322, 1
                }
                name: string = "tutorial_water_ripple_01_4"
            }
            0xc07f85fe = MapParticle {
                system: link = "Maps/Particles/NPE_1/River_Shore_Bot_A"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8306.12793, 47.1449585, 6498.45312, 1
                }
                name: string = "tutorial_river_shore_bot1"
            }
            0x5a848604 = MapParticle {
                system: link = "Maps/Particles/NPE_1/River_Plane_Bot_A"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8205.91699, 44.1907959, 6543.78027, 1
                }
                name: string = "tutorial_riverplane_bot1"
            }
            0x5df7122f = MapParticle {
                system: link = "Maps/Particles/NPE_1/River_Plane_Top_A"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6633.50195, 59.0348663, 8125.01562, 1
                }
                name: string = "tutorial_riverplane_top1"
            }
            0xf0b4b575 = MapParticle {
                system: link = "Maps/Particles/NPE_1/River_Shore_Top_A"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6610.04541, 49.221283, 8193.13086, 1
                }
                name: string = "tutorial_river_shore_top1"
            }
            0x12b9eec9 = MapParticle {
                system: link = "Maps/Particles/NPE_1/Waterfall_Top_A"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6244.5791, 51.8797913, 8437.19043, 1
                }
                name: string = "tutorial_top_Waterfall_01_1"
            }
            0xde13e6ba = MapParticle {
                system: link = "Maps/Particles/NPE_1/Waterfall_Top_B"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6531.34277, 111.966705, 8575.31934, 1
                }
                name: string = "tutorial_top_Waterfall_03_1"
            }
            0x34dae378 = MapParticle {
                system: link = "Maps/Particles/NPE_1/Waterfall_Bot_A"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8676.54688, -8.12268066, 6092.7793, 1
                }
                name: string = "tutorial_bot_Waterfall_01_1"
            }
            0x6e87ab75 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterCaustics_04"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6201.06982, -71.2406998, 8883.12012, 1
                }
                name: string = "SRU_River_WaterCaustics_04_1"
            }
            0x821e78df = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8793.49023, -71.2405014, 6621.52978, 1
                }
                name: string = "SRU_River_WaterLily_01_2"
            }
            0x31b803ec = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_02"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8329.38965, -71.2405014, 6247.37988, 1
                }
                name: string = "SRU_River_WaterLily_02_3"
            }
            0x0a41491f = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_02"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6749.3501, -70.4738007, 8341.91992, 1
                }
                name: string = "SRU_River_WaterLily_02_5"
            }
            0xc571500d = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterCaustics_03"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    9063.23047, 98.0921021, 6056.33984, 1
                }
                name: string = "SRU_River_WaterCaustics_03_1"
            }
            0x3bd054c7 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_North_Shore_05"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6200.72021, 30.6243, 8592.54004, 1
                }
                name: string = "SRU_River_North_Shore_05_1"
            }
            0x7b496258 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_03"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8549.33008, -71.2406998, 6454.95996, 1
                }
                name: string = "SRU_River_WaterLily_03_5"
            }
            0x51c30b05 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8518.40039, -71.2405014, 6345.12012, 1
                }
                name: string = "SRU_River_WaterLily_01_5"
            }
            0x7335e02d = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_GrassRipple_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    9713.25, -41.8490982, 6320.41016, 1
                }
                name: string = "SRU_River_GrassRipple_01_2"
            }
            0x1d0a3526 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6831.25, -71.2406006, 8428.41992, 1
                }
                name: string = "SRU_River_WaterLily_01_6"
            }
            0xef729732 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_03"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6467.9502, -70.4738007, 8122.27978, 1
                }
                name: string = "SRU_River_WaterLily_03_8"
            }
            0xffbd0ef7 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_03"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6316.75, -71.2406006, 9089.69043, 1
                }
                name: string = "SRU_River_WaterLily_03_9"
            }
            0xd4119b38 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_Shore_South_1"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8795.08984, 42.1635017, 6218.25, 1
                }
                name: string = "SRU_River_Shore_South_1_1"
            }
            0x576923ea = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    9509.83008, -52.5661011, 6355.72998, 1
                }
                name: string = "SRU_River_WaterLily_01_8"
            }
            0x369252e6 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6341.9502, -71.2406006, 8996.96973, 1
                }
                name: string = "SRU_River_WaterLily_01_10"
            }
            0x6bac704c = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_01"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    9269.25976, -71.2406006, 5624.08984, 1
                }
                name: string = "SRU_River_WaterLily_01_11"
            }
            0x6b6fedd9 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_02"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    9595.44043, -43.8904991, 6323.31006, 1
                }
                name: string = "SRU_River_WaterLily_02_11"
            }
            0xcd3f0f36 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_02"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6402.8501, -70.4738007, 8078.08008, 1
                }
                name: string = "SRU_River_WaterLily_02_13"
            }
            0x9afef679 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_RiverPlane_South_01"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8870.2998, 35.4342003, 6151.72998, 1
                }
                name: string = "SRU_RiverPlane_South_01_1"
            }
            0x97b203a9 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_03"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    9394.41016, -57.5854988, 6342.27002, 1
                }
                name: string = "SRU_River_WaterLily_03_16"
            }
            0x130ec3b3 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_River_WaterLily_03"
                eyeCandy: bool = true
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    9051.25, -71.2406006, 5526.91016, 1
                }
                name: string = "SRU_River_WaterLily_03_17"
            }
            0x66070937 = MapParticle {
                system: link = "Maps/Particles/SR/SRU_RiverPlane_North_04"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6130.77978, 7.64424992, 8425.2002, 1
                }
                name: string = "SRU_RiverPlane_North_04_1"
            }
        }
        path: string = "Maps/MapGeometry/SR/Chunks/NPE_Particles"
    }
    "Maps/MapGeometry/SR/Chunks/SRX_Ground_Base" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0xe6de8c51 = null
            0xe549a7d3 = null
            0x6267920e = null
            0x522b8783 = null
            0xa9906c14 = null
            0xe730472e = null
            0x76ceeb3a = null
            0x2bcaac47 = null
            0xcb435fe6 = null
            0x522c10ba = null
            0x492717cd = null
            0x08ef2bf0 = null
            0xe29f264e = null
            0xfd79d3e6 = null
            0x68221f80 = null
            0xecb0bf2d = null
            0x2a8f9d1a = null
            0x519c3a6b = null
            0xd78d9bc5 = null
            0x6eba099d = null
            0xb3ce59e5 = null
            0x707dc42d = null
            0x5959da6c = null
            0x93ee43f5 = null
            0x4c26efef = null
        }
        path: string = "Maps/MapGeometry/SR/Chunks/SRX_Ground_Base"
    }
    "Maps/MapGeometry/SR/Chunks/NPE_Audio" = MapPlaceableContainer {
        items: map[hash,pointer] = {
            0x7df68dc3 = MapParticle {
                system: link = "Maps/Particles/SRX/Base/SRX_Audio_Ocean_Rain_Puddle_Surface_Water"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6496.52441, -82.2768555, 8340.86328, 1
                }
                name: string = "SRX_Audio_Ocean_Rain_Puddle_Surface_Water41"
                0xccf79327: u8 = 8
            }
            0x1067438c = MapParticle {
                system: link = "Maps/Particles/SRX/Base/SRX_Audio_Ocean_Rain_Lapping"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6412.64892, -69.168457, 7919.4209, 1
                }
                name: string = "SRX_Audio_Ocean_Rain_Lapping26"
                0xccf79327: u8 = 8
            }
            0xd8b0fe06 = MapParticle {
                system: link = "Maps/Particles/SRX/Base/SRX_Audio_Ocean_Rain_Puddle_Surface_Water"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8496.25586, -82.2763672, 6398.41455, 1
                }
                name: string = "SRX_Audio_Ocean_Rain_Puddle_Surface_Water51"
                0xccf79327: u8 = 8
            }
            0x8f36c67f = MapParticle {
                system: link = "Maps/Particles/SRX/Base/SRX_Audio_Ocean_Rain_Lapping"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8431.44141, -82.2758789, 6484.7959, 1
                }
                name: string = "SRX_Audio_Ocean_Rain_Lapping45"
                0xccf79327: u8 = 31
            }
            0x1485975b = MapParticle {
                system: link = "Maps/Particles/SRX/Base/SRX_Audio_Ocean_Rain_Surface_Stone"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    12724.3076, 331.331848, 12764.3789, 1
                }
                name: string = "SRX_Audio_Ocean_Rain_Surface_Cement2"
                0xccf79327: u8 = 8
            }
            0x6dd024e5 = MapParticle {
                system: link = "Maps/Particles/SRX/Base/SRX_Audio_Ocean_Rain_Lapping"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6550.60644, -80.7333984, 8254.48438, 1
                }
                name: string = "SRX_Audio_Ocean_Rain_Lapping51"
                0xccf79327: u8 = 31
            }
            0x08efddb9 = MapParticle {
                system: link = "Maps/Particles/SRX/Base/SRX_Audio_Ocean_Rain_Surface_Stone"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    1958.9397, 62.8739014, 2012.72998, 1
                }
                name: string = "SRX_Audio_Ocean_Rain_Surface_Cement3"
                0xccf79327: u8 = 8
            }
            0x843c9289 = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_VistaWindBuffets"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    4131.97998, 95.7480011, 11.1914997, 1
                }
                name: string = "Audio-Emitter_SRU_VistaWindBuffets12"
            }
            0x130f6fcd = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_MidLaneWaterfall"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    7040.8999, -71.1648026, 8485.32031, 1
                }
                name: string = "Audio-Emitter_SRU_MidLaneWaterfall5"
            }
            0x9fa18427 = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_TreesSwaying"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    15258.7002, 91.4297028, 12156.9004, 1
                }
                name: string = "Audio-Emitter_SRU_TreesSwaying8"
            }
            0x4309a2a3 = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_MidLaneWaterfall"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    8527.2998, -62.1122017, 7044.93018, 1
                }
                name: string = "Audio-Emitter_SRU_MidLaneWaterfall6"
            }
            0xe38e65b1 = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_NorthShopExhaust"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13931.7998, 100.323997, 14758.7002, 1
                }
                name: string = "Audio-Emitter_SRU_NorthShopExhaust2"
            }
            0x546b0659 = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_ChaosLaserTurret_Waterfall"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14526.5996, 187.192001, 14648, 1
                }
                name: string = "Audio-Emitter_SRU_ChaosLaserTurret_Waterfall5"
            }
            0xb260bf91 = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_VistaWindBuffets"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    13713.2998, 109.404999, 15582.2998, 1
                }
                name: string = "Audio-Emitter_SRU_VistaWindBuffets13"
            }
            0x4e3c670e = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_VistaWindBuffets"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    -422.404999, 95.7480011, 2455.95996, 1
                }
                name: string = "Audio-Emitter_SRU_VistaWindBuffets14"
            }
            0x40f0c858 = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_VistaWindBuffets"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    2475.12012, 95.7480011, -74.1977997, 1
                }
                name: string = "Audio-Emitter_SRU_VistaWindBuffets16"
            }
            0x93bfd9bd = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_VistaWindBuffets"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    -11.0202999, -77.2204971, 1988.71997, 1
                }
                name: string = "Audio-Emitter_SRU_VistaWindBuffets17"
            }
            0xa6e175ee = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_ChaosLaserTurret_Trough_Waterfall"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14201.5, 146.322998, 14854.5996, 1
                }
                name: string = "Audio-Emitter_SRU_ChaosLaserTurret_Trough_Waterfall3"
            }
            0x762956bb = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_VistaWindBuffets"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    58.7327995, 52.8389015, 6918.79004, 1
                }
                name: string = "Audio-Emitter_SRU_VistaWindBuffets18"
            }
            0x23b7a16c = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_Orderbase_Waterfalls"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    203.649994, -53.1016006, 111.459, 1
                }
                name: string = "Audio-Emitter_SRU_Orderbase_Waterfalls3"
            }
            0x9e6f2df5 = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_ChaosLaserTurret_Waterfall"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14653.7998, 392.394989, 15046, 1
                }
                name: string = "Audio-Emitter_SRU_ChaosLaserTurret_Waterfall6"
            }
            0x897796ae = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_VistaWindBuffets"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    15151.9004, 392.554993, 12951.2998, 1
                }
                name: string = "Audio-Emitter_SRU_VistaWindBuffets21"
            }
            0x61690b66 = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_ChaosLaserTurret_Waterfall"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14652.0996, 184.404999, 14549.7998, 1
                }
                name: string = "Audio-Emitter_SRU_ChaosLaserTurret_Waterfall7"
            }
            0x3e53540d = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_VistaWindBuffets"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    15335.9004, 91.7511978, 10612.7002, 1
                }
                name: string = "Audio-Emitter_SRU_VistaWindBuffets22"
            }
            0xb69b72e6 = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_MidLaneWaterfall"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    6376.87988, -43.892601, 7863.02002, 1
                }
                name: string = "Audio-Emitter_SRU_MidLaneWaterfall7"
            }
            0x8645a25e = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_TreesSwaying"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    11876.0996, 506.243011, 14792.4004, 1
                }
                name: string = "Audio-Emitter_SRU_TreesSwaying14"
            }
            0x2101e67d = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_MidLaneWaterfall"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    7762.04004, -49.0610008, 6354.66016, 1
                }
                name: string = "Audio-Emitter_SRU_MidLaneWaterfall8"
            }
            0x92ea46a4 = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_ChaosLaserTurret_Trough_Waterfall"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14758, 158.953003, 14432.5996, 1
                }
                name: string = "Audio-Emitter_SRU_ChaosLaserTurret_Trough_Waterfall4"
            }
            0xac8df5c8 = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_Orderbase_Waterfalls"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    570.205994, -11.9389, 12.6715002, 1
                }
                name: string = "Audio-Emitter_SRU_Orderbase_Waterfalls4"
            }
            0x1c8a2214 = MapParticle {
                system: link = "Maps/Particles/SR/Audio-Emitter_SRU_ChaosLaserTurret_Waterfall"
                transform: mtx44 = {
                    1, 0, 0, 0
                    0, 1, 0, 0
                    0, 0, 1, 0
                    14727.5, 567.877991, 14749.5996, 1
                }
                name: string = "Audio-Emitter_SRU_ChaosLaserTurret_Waterfall8"
            }
        }
        path: string = "Maps/MapGeometry/SR/Chunks/NPE_Audio"
    }
    "Maps/MapGeometry/SR/NPE_1" = mapContainer {
        mapPath: string = "Maps/MapGeometry/SR/NPE_1"
        components: list[pointer] = {
            MapBakeProperties {}
            MapSunProperties {
                sunColor: vec4 = { 0.623529434, 0.800000012, 0.674509823, 1 }
                sunDirection: vec3 = { -0.25, 0.75, -0.0500000007 }
                skyLightColor: vec4 = { 0.960006118, 0.990005314, 0.97999543, 1 }
                groundColor: vec4 = { 0.280003041, 0.280003041, 0.280003041, 1 }
                lightMapColorScale: f32 = 0.600000024
                fogEnabled: bool = false
                fogStartAndEnd: vec2 = { -10000, -50000 }
            }
            MapTerrainPaint {
                0xc2e98f06: string = "ASSETS/Maps/TerrainPaint/Maps/MapGeometry/SR/Base_SRX.SRX_EnvArt.png"
            }
        }
        boundsMax: vec2 = { 14820.5254, 14881.4971 }
        lowestWalkableHeight: f32 = -100
        chunks: map[hash,link] = {
            "SRX_Geometry" = "Maps/MapGeometry/SR/Chunks/SRX_Geometry"
            "SRX_Ground_Base" = "Maps/MapGeometry/SR/Chunks/SRX_Ground_Base"
            "NPE_Geometry" = "Maps/MapGeometry/SR/Chunks/NPE_Geometry"
            "NPE_Particles" = "Maps/MapGeometry/SR/Chunks/NPE_Particles"
            "NPE_MapObjects" = "Maps/MapGeometry/SR/Chunks/NPE_MapObjects"
            "NPE_Audio" = "Maps/MapGeometry/SR/Chunks/NPE_Audio"
        }
    }
}
